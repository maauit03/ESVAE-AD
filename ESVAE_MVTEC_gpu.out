copy metrics/stats_fid/mnist_test_clean_custom_na.npz to /pfs/data5/home/es/es_es/es_maauit03/.venv/lib64/python3.9/site-packages/cleanfid/stats
copy metrics/stats_fid/cifar10_test_clean_custom_na.npz to /pfs/data5/home/es/es_es/es_maauit03/.venv/lib64/python3.9/site-packages/cleanfid/stats
copy metrics/stats_fid/mnist_train_clean_custom_na.npz to /pfs/data5/home/es/es_es/es_maauit03/.venv/lib64/python3.9/site-packages/cleanfid/stats
copy metrics/stats_fid/cifar10_train_clean_custom_na.npz to /pfs/data5/home/es/es_es/es_maauit03/.venv/lib64/python3.9/site-packages/cleanfid/stats
copy metrics/stats_fid/fashion_train_clean_custom_na.npz to /pfs/data5/home/es/es_es/es_maauit03/.venv/lib64/python3.9/site-packages/cleanfid/stats
copy metrics/stats_fid/celeba_valid_clean_custom_na.npz to /pfs/data5/home/es/es_es/es_maauit03/.venv/lib64/python3.9/site-packages/cleanfid/stats
copy metrics/stats_fid/fashion_test_clean_custom_na.npz to /pfs/data5/home/es/es_es/es_maauit03/.venv/lib64/python3.9/site-packages/cleanfid/stats
{'epochs': 300, 'batch_size': 16, 'sample_batch_size': 16, 'n_steps': 16, 'dataset': 'CIFAR10', 'in_channels': 3, 'data_path': 'data/zhan/CV_data/cifar10', 'lr': 0.006, 'sample_layer_lr_times': 10, 'n_class': 10, 'latent_dim': 128, 'input_size': 32, 'model': 'ESVAE', 'k': 20, 'scheduled': True, 'loss_func': 'mmd', 'mmd_type': 'rbf', 'mu': 0.0, 'var': 1.0, 'distance_lambda': 0.001}
1 device(s) found:
    1) Tesla V100-SXM2-32GB (Id: 0)
          Memory: 34.07 GB

selected device:  None
Loading MVTEC dataset...
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(0.0359, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [0/25] Loss: 1.1000806093215942, RECONS: 1.09622061252594, DISTANCE: 3.8600540161132812
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.0202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [1/25] Loss: 1.0487109422683716, RECONS: 1.0449075102806091, DISTANCE: 3.8034634590148926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.0797, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [2/25] Loss: 0.9998476306597391, RECONS: 0.9961057504018148, DISTANCE: 3.741907755533854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.1266, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [3/25] Loss: 0.9575137943029404, RECONS: 0.9537671655416489, DISTANCE: 3.746645987033844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.1710, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [4/25] Loss: 0.9218079566955566, RECONS: 0.918087649345398, DISTANCE: 3.720319080352783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.2189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [5/25] Loss: 0.8897248208522797, RECONS: 0.8860704898834229, DISTANCE: 3.654341379801432
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.2616, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [6/25] Loss: 0.8598323549543109, RECONS: 0.8562103935650417, DISTANCE: 3.6219731739589145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.3023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [7/25] Loss: 0.8308470249176025, RECONS: 0.8272570446133614, DISTANCE: 3.5899910628795624
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.3371, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [8/25] Loss: 0.8048691484663222, RECONS: 0.8012919492191739, DISTANCE: 3.5772102938758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.3731, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [9/25] Loss: 0.7807291448116302, RECONS: 0.7771776139736175, DISTANCE: 3.5515393257141112
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.4063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [10/25] Loss: 0.7582897489721124, RECONS: 0.7547687996517528, DISTANCE: 3.5209550857543945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.4426, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [11/25] Loss: 0.7361774121721586, RECONS: 0.7326752295096716, DISTANCE: 3.5021868348121643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.4693, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [12/25] Loss: 0.7165763836640578, RECONS: 0.7131021893941439, DISTANCE: 3.4741978645324707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.4984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [13/25] Loss: 0.6981444507837296, RECONS: 0.6946968202080045, DISTANCE: 3.4476337092263356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [14/25] Loss: 0.680811482667923, RECONS: 0.677380241950353, DISTANCE: 3.4312435468037923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5446, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [15/25] Loss: 0.6644899882376194, RECONS: 0.6610918920487165, DISTANCE: 3.3980984687805176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5656, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [16/25] Loss: 0.6489464184817146, RECONS: 0.6455781582523795, DISTANCE: 3.3682630202349495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5860, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [17/25] Loss: 0.6344725257820554, RECONS: 0.6311250577370325, DISTANCE: 3.3474702305263944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [18/25] Loss: 0.6212275451735446, RECONS: 0.6179023243879017, DISTANCE: 3.3252228561200594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [19/25] Loss: 0.6089761346578598, RECONS: 0.6056726053357124, DISTANCE: 3.3035317063331604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [20/25] Loss: 0.5972238154638381, RECONS: 0.5939562377475557, DISTANCE: 3.2675802253541493
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6333, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [21/25] Loss: 0.5862894681367007, RECONS: 0.5830373642119494, DISTANCE: 3.2521064173091543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6363, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [22/25] Loss: 0.5760337477144988, RECONS: 0.5728000363577967, DISTANCE: 3.2337132847827412
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6442, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [23/25] Loss: 0.5665494178732237, RECONS: 0.5633392085631689, DISTANCE: 3.2102117240428925
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5952, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6575, device='cuda:0', grad_fn=<MeanBackward0>)
Train[0/300] [24/25] Loss: 0.5577726781368255, RECONS: 0.5545803523063659, DISTANCE: 3.192327661514282
Test[0/300] [0/2] Loss: 1.0037320852279663, RECONS: 0.9983515739440918, DISTANCE: 5.380561828613281
Test[0/300] [1/2] Loss: 1.0034492015838623, RECONS: 0.9979550838470459, DISTANCE: 5.494135856628418
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6512, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [0/25] Loss: 0.32890596985816956, RECONS: 0.32634037733078003, DISTANCE: 2.5655994415283203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6516, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [1/25] Loss: 0.3273759186267853, RECONS: 0.3248613178730011, DISTANCE: 2.5146114826202393
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6494, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [2/25] Loss: 0.32590726017951965, RECONS: 0.3232838610808055, DISTANCE: 2.6234018802642822
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6521, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [3/25] Loss: 0.3237293064594269, RECONS: 0.32116346061229706, DISTANCE: 2.5658454298973083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6606, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [4/25] Loss: 0.3212014377117157, RECONS: 0.31867618560791017, DISTANCE: 2.5252535343170166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6533, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [5/25] Loss: 0.3177921026945114, RECONS: 0.31532128651936847, DISTANCE: 2.4708156188329062
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6458, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [6/25] Loss: 0.3156374820641109, RECONS: 0.3131735495158604, DISTANCE: 2.4639338425227573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6490, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [7/25] Loss: 0.3131852559745312, RECONS: 0.3107195533812046, DISTANCE: 2.465705305337906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6374, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [8/25] Loss: 0.31099403897921246, RECONS: 0.3085603614648183, DISTANCE: 2.4336801369984946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6403, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [9/25] Loss: 0.30869626104831693, RECONS: 0.3062982350587845, DISTANCE: 2.3980276823043822
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6423, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [10/25] Loss: 0.30630582571029663, RECONS: 0.3039519488811493, DISTANCE: 2.353878216309981
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6378, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [11/25] Loss: 0.30372804900010425, RECONS: 0.30138131976127625, DISTANCE: 2.346730967362722
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6266, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [12/25] Loss: 0.3015522910998418, RECONS: 0.2992202341556549, DISTANCE: 2.3320577144622803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [13/25] Loss: 0.2994212933949062, RECONS: 0.2970959544181824, DISTANCE: 2.325339538710458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [14/25] Loss: 0.29712642629941305, RECONS: 0.2948137760162354, DISTANCE: 2.312650124231974
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [15/25] Loss: 0.2949835080653429, RECONS: 0.29270405881106853, DISTANCE: 2.279448553919792
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [16/25] Loss: 0.2930052911534029, RECONS: 0.29072318357579846, DISTANCE: 2.282106273314532
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [17/25] Loss: 0.2913414140542348, RECONS: 0.2890646523899502, DISTANCE: 2.2767599291271634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [18/25] Loss: 0.2895619571208954, RECONS: 0.2872975562748156, DISTANCE: 2.264399214794761
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [19/25] Loss: 0.2878303423523903, RECONS: 0.2855766385793686, DISTANCE: 2.253702771663666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [20/25] Loss: 0.2861108041944958, RECONS: 0.28385915358861286, DISTANCE: 2.251649777094523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5944, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [21/25] Loss: 0.2846710736101324, RECONS: 0.28242869810624555, DISTANCE: 2.242374127561396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [22/25] Loss: 0.28313712322193646, RECONS: 0.2809091696272726, DISTANCE: 2.2279521175052808
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [23/25] Loss: 0.28186579917867977, RECONS: 0.2796469125896692, DISTANCE: 2.218885451555252
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6285, device='cuda:0', grad_fn=<MeanBackward0>)
Train[1/300] [24/25] Loss: 0.2801007401943207, RECONS: 0.277888594865799, DISTANCE: 2.2121439838409422
Test[1/300] [0/2] Loss: 0.31100064516067505, RECONS: 0.30845504999160767, DISTANCE: 2.545586585998535
Test[1/300] [1/2] Loss: 0.3104628473520279, RECONS: 0.30764347314834595, DISTANCE: 2.8193750381469727
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6389, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [0/25] Loss: 0.23297293484210968, RECONS: 0.23084735870361328, DISTANCE: 2.125579357147217
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5955, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6531, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [1/25] Loss: 0.23483474552631378, RECONS: 0.23279815167188644, DISTANCE: 2.0365982055664062
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6715, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [2/25] Loss: 0.2330959588289261, RECONS: 0.23107650379339853, DISTANCE: 2.0194562673568726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6551, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [3/25] Loss: 0.2330840304493904, RECONS: 0.23104944825172424, DISTANCE: 2.0345819294452667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6548, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [4/25] Loss: 0.23275538682937622, RECONS: 0.2307525873184204, DISTANCE: 2.002799391746521
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6612, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [5/25] Loss: 0.23214245090881983, RECONS: 0.2301709254582723, DISTANCE: 1.9715250333150227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6563, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [6/25] Loss: 0.231612822839192, RECONS: 0.22962644057614462, DISTANCE: 1.986382143838065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6486, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [7/25] Loss: 0.2312503457069397, RECONS: 0.22926192358136177, DISTANCE: 1.9884225130081177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6469, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [8/25] Loss: 0.23082993096775478, RECONS: 0.2288714332713021, DISTANCE: 1.958497789171007
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6471, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [9/25] Loss: 0.23008726090192794, RECONS: 0.2281525745987892, DISTANCE: 1.9346861720085144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6436, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [10/25] Loss: 0.2294975830750032, RECONS: 0.22757172719998794, DISTANCE: 1.925856189294295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6321, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [11/25] Loss: 0.22920336201786995, RECONS: 0.22728022436300913, DISTANCE: 1.923137774070104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6455, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [12/25] Loss: 0.22885153958430657, RECONS: 0.22694256557868078, DISTANCE: 1.9089742715542133
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6513, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [13/25] Loss: 0.2284241137760026, RECONS: 0.2265092751809529, DISTANCE: 1.9148390889167786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6560, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [14/25] Loss: 0.22790538171927135, RECONS: 0.22596750458081563, DISTANCE: 1.937877360979716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6492, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [15/25] Loss: 0.22730890475213528, RECONS: 0.22538500744849443, DISTANCE: 1.9238977208733559
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6421, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [16/25] Loss: 0.22749212208916159, RECONS: 0.22558258824488697, DISTANCE: 1.9095346577027266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6337, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [17/25] Loss: 0.22727684262726042, RECONS: 0.22538175765011045, DISTANCE: 1.8950854473643832
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [18/25] Loss: 0.22742591092461034, RECONS: 0.22555358864759145, DISTANCE: 1.8723227664044029
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6358, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [19/25] Loss: 0.22727050110697747, RECONS: 0.22540699541568757, DISTANCE: 1.8635058462619782
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6582, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [20/25] Loss: 0.2267980831010001, RECONS: 0.22493673435279302, DISTANCE: 1.861348929859343
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6484, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [21/25] Loss: 0.22640305757522583, RECONS: 0.22454777427695014, DISTANCE: 1.8552837480198254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6636, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [22/25] Loss: 0.22599987037803815, RECONS: 0.2241429427395696, DISTANCE: 1.8569282967111338
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6601, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [23/25] Loss: 0.22566643791894117, RECONS: 0.22382699201504389, DISTANCE: 1.8394468426704407
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6321, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6659, device='cuda:0', grad_fn=<MeanBackward0>)
Train[2/300] [24/25] Loss: 0.22507257163524627, RECONS: 0.22323234021663665, DISTANCE: 1.8402324056625365
Test[2/300] [0/2] Loss: 0.22771711647510529, RECONS: 0.2242724746465683, DISTANCE: 3.4446353912353516
Test[2/300] [1/2] Loss: 0.22862369567155838, RECONS: 0.22525887936353683, DISTANCE: 3.3648107051849365
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6401, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [0/25] Loss: 0.21386581659317017, RECONS: 0.21235524117946625, DISTANCE: 1.5105786323547363
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6585, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [1/25] Loss: 0.21196667850017548, RECONS: 0.21039830148220062, DISTANCE: 1.5683765411376953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6476, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [2/25] Loss: 0.21167902648448944, RECONS: 0.2100311815738678, DISTANCE: 1.6478441556294758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6292, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [3/25] Loss: 0.21112272515892982, RECONS: 0.20949405431747437, DISTANCE: 1.6286684572696686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6495, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [4/25] Loss: 0.21059413850307465, RECONS: 0.20898230969905854, DISTANCE: 1.6118257761001586
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [5/25] Loss: 0.21168572703997293, RECONS: 0.21012225498755774, DISTANCE: 1.5634684960047405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6358, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [6/25] Loss: 0.21087173053196498, RECONS: 0.2092732893569129, DISTANCE: 1.5984383991786413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6332, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [7/25] Loss: 0.21011707931756973, RECONS: 0.20848221331834793, DISTANCE: 1.6348627209663391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6347, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [8/25] Loss: 0.20923269457287258, RECONS: 0.20763424866729313, DISTANCE: 1.598442554473877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6453, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [9/25] Loss: 0.208481302857399, RECONS: 0.20685739666223527, DISTANCE: 1.623903512954712
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6753, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [10/25] Loss: 0.20710766179995102, RECONS: 0.20548028973015872, DISTANCE: 1.627369143746116
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6337, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [11/25] Loss: 0.20654130727052689, RECONS: 0.2049097182850043, DISTANCE: 1.6315862735112507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6497, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [12/25] Loss: 0.20575781625050765, RECONS: 0.20412799601371473, DISTANCE: 1.6298173024104192
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6672, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [13/25] Loss: 0.20454353200537817, RECONS: 0.20289299211331777, DISTANCE: 1.6505374823297774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6554, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [14/25] Loss: 0.20374081234137217, RECONS: 0.2020959903796514, DISTANCE: 1.6448196013768515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6414, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [15/25] Loss: 0.20297638699412346, RECONS: 0.20135727059096098, DISTANCE: 1.6191145181655884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6734, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [16/25] Loss: 0.20195172376492443, RECONS: 0.20034432498847737, DISTANCE: 1.6073967989753275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6614, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [17/25] Loss: 0.20146327962478003, RECONS: 0.19986513919300503, DISTANCE: 1.5981389615270827
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6544, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [18/25] Loss: 0.20090501167272268, RECONS: 0.19931974379639877, DISTANCE: 1.5852664144415605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6599, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [19/25] Loss: 0.20009681358933448, RECONS: 0.19851450994610786, DISTANCE: 1.5823023796081543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6612, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [20/25] Loss: 0.1993916112752188, RECONS: 0.19780784916310085, DISTANCE: 1.5837606759298415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6553, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [21/25] Loss: 0.19868029112165625, RECONS: 0.1970923888412389, DISTANCE: 1.5879005789756775
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6721, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [22/25] Loss: 0.1978340058223061, RECONS: 0.1962528805369916, DISTANCE: 1.5811235230901968
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6668, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [23/25] Loss: 0.19697904648880163, RECONS: 0.19540471335252127, DISTANCE: 1.5743314623832703
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6418, device='cuda:0', grad_fn=<MeanBackward0>)
Train[3/300] [24/25] Loss: 0.19644441783428193, RECONS: 0.1948591011762619, DISTANCE: 1.585315227508545
Test[3/300] [0/2] Loss: 0.19103148579597473, RECONS: 0.18881019949913025, DISTANCE: 2.2212815284729004
Test[3/300] [1/2] Loss: 0.19124141335487366, RECONS: 0.1882949322462082, DISTANCE: 2.9464768171310425
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6552, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [0/25] Loss: 0.17703723907470703, RECONS: 0.17573973536491394, DISTANCE: 1.2974997758865356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6526, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [1/25] Loss: 0.17779115587472916, RECONS: 0.17645634710788727, DISTANCE: 1.3348084092140198
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6600, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [2/25] Loss: 0.17770273486773172, RECONS: 0.17630614837010702, DISTANCE: 1.396584192911784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6442, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [3/25] Loss: 0.17738724499940872, RECONS: 0.17606789618730545, DISTANCE: 1.319348931312561
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6585, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [4/25] Loss: 0.1758837252855301, RECONS: 0.17455526888370515, DISTANCE: 1.3284578323364258
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6813, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [5/25] Loss: 0.17470422138770422, RECONS: 0.17341616998116174, DISTANCE: 1.2880534529685974
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6650, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [6/25] Loss: 0.17393898112433298, RECONS: 0.17260199998106276, DISTANCE: 1.3369827440806799
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6478, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [7/25] Loss: 0.17326158843934536, RECONS: 0.1719233151525259, DISTANCE: 1.3382737934589386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6633, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [8/25] Loss: 0.1722051070796119, RECONS: 0.17087632914384207, DISTANCE: 1.3287789821624756
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [9/25] Loss: 0.17085045278072358, RECONS: 0.16954583376646043, DISTANCE: 1.3046195745468139
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [10/25] Loss: 0.169715324586088, RECONS: 0.16842757842757486, DISTANCE: 1.28774601762945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [11/25] Loss: 0.16865195085604986, RECONS: 0.16738498955965042, DISTANCE: 1.2669615546862285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [12/25] Loss: 0.16773293339289153, RECONS: 0.16644915021382845, DISTANCE: 1.2837838117892926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [13/25] Loss: 0.16659187525510788, RECONS: 0.16531542795045034, DISTANCE: 1.2764482413019453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [14/25] Loss: 0.1655810962120692, RECONS: 0.16429587105909985, DISTANCE: 1.2852264960606894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [15/25] Loss: 0.16462482511997223, RECONS: 0.16332167480140924, DISTANCE: 1.3031519800424576
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [16/25] Loss: 0.16373229903333328, RECONS: 0.16243825677563162, DISTANCE: 1.2940438074224136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [17/25] Loss: 0.16300578663746515, RECONS: 0.16171901755862766, DISTANCE: 1.286770270930396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [18/25] Loss: 0.1620875706798152, RECONS: 0.16079465888048472, DISTANCE: 1.2929130667134334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7284, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [19/25] Loss: 0.16129082888364793, RECONS: 0.16001034304499626, DISTANCE: 1.2804870545864104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [20/25] Loss: 0.16052571080979847, RECONS: 0.15925671798842295, DISTANCE: 1.2689938034330095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [21/25] Loss: 0.15986453944986517, RECONS: 0.1586067866195332, DISTANCE: 1.2577535835179416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7537, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [22/25] Loss: 0.15925557976183685, RECONS: 0.15801527318747147, DISTANCE: 1.2403073932813562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7336, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [23/25] Loss: 0.1587371857215961, RECONS: 0.15748989706238112, DISTANCE: 1.2472895880540211
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7624, device='cuda:0', grad_fn=<MeanBackward0>)
Train[4/300] [24/25] Loss: 0.15813200771808625, RECONS: 0.15688212752342223, DISTANCE: 1.249880838394165
Test[4/300] [0/2] Loss: 0.15284830331802368, RECONS: 0.15058739483356476, DISTANCE: 2.260911464691162
Test[4/300] [1/2] Loss: 0.1534481942653656, RECONS: 0.15104332566261292, DISTANCE: 2.404871702194214
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7370, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [0/25] Loss: 0.14199766516685486, RECONS: 0.14126455783843994, DISTANCE: 0.7331061363220215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7439, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [1/25] Loss: 0.14036968350410461, RECONS: 0.13957776129245758, DISTANCE: 0.7919225692749023
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7451, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [2/25] Loss: 0.14076180259386697, RECONS: 0.13980603714783987, DISTANCE: 0.9557660818099976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7448, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [3/25] Loss: 0.1397937685251236, RECONS: 0.13882288336753845, DISTANCE: 0.9708841443061829
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7400, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [4/25] Loss: 0.13909912705421448, RECONS: 0.13811516761779785, DISTANCE: 0.9839588642120362
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7483, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [5/25] Loss: 0.13823513438304266, RECONS: 0.13722080985705057, DISTANCE: 1.0143251816431682
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7643, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [6/25] Loss: 0.13824968891484396, RECONS: 0.1372000617640359, DISTANCE: 1.0496284450803484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7603, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [7/25] Loss: 0.1375911794602871, RECONS: 0.13655641861259937, DISTANCE: 1.034761905670166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7720, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [8/25] Loss: 0.13721026645766365, RECONS: 0.1361773345205519, DISTANCE: 1.0329322814941406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7535, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [9/25] Loss: 0.1371430218219757, RECONS: 0.13610686361789703, DISTANCE: 1.0361591815948485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7860, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [10/25] Loss: 0.13673492859710346, RECONS: 0.13569427755745975, DISTANCE: 1.040652578527277
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7803, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [11/25] Loss: 0.13660351932048798, RECONS: 0.1355466110010942, DISTANCE: 1.0569093624750774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1., device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7889, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [12/25] Loss: 0.1360824486384025, RECONS: 0.13502451204336607, DISTANCE: 1.0579376312402577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [13/25] Loss: 0.1361813342997006, RECONS: 0.1351506592971938, DISTANCE: 1.03067604133061
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7934, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [14/25] Loss: 0.13579058945178984, RECONS: 0.13476946353912353, DISTANCE: 1.0211264451344808
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [15/25] Loss: 0.13553809188306332, RECONS: 0.13450643606483936, DISTANCE: 1.0316565111279488
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [16/25] Loss: 0.13541798556552215, RECONS: 0.13439731913454392, DISTANCE: 1.020666942876928
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [17/25] Loss: 0.13502217249737847, RECONS: 0.1340122189786699, DISTANCE: 1.0099536312950983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [18/25] Loss: 0.13489133982281937, RECONS: 0.13387140710102885, DISTANCE: 1.0199329915799593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [19/25] Loss: 0.13459828570485116, RECONS: 0.13355933278799056, DISTANCE: 1.038953274488449
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [20/25] Loss: 0.13417238635676249, RECONS: 0.13313720588173186, DISTANCE: 1.0351809149696714
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [21/25] Loss: 0.1340695104815743, RECONS: 0.13303864442489363, DISTANCE: 1.0308663682504133
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [22/25] Loss: 0.1338825601598491, RECONS: 0.13284605449956396, DISTANCE: 1.036505922027256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(1.0000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [23/25] Loss: 0.13360149102906385, RECONS: 0.13256098050624132, DISTANCE: 1.0405105104049046
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5941, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[5/300] [24/25] Loss: 0.13359785497188567, RECONS: 0.13255911380052565, DISTANCE: 1.0387412786483765
Test[5/300] [0/2] Loss: 0.14716902375221252, RECONS: 0.14511211216449738, DISTANCE: 2.056905746459961
Test[5/300] [1/2] Loss: 0.14747820794582367, RECONS: 0.14509298652410507, DISTANCE: 2.385221242904663
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8274, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [0/25] Loss: 0.12136178463697433, RECONS: 0.12018253654241562, DISTANCE: 1.1792494058609009
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8298, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [1/25] Loss: 0.1197233721613884, RECONS: 0.11861942335963249, DISTANCE: 1.1039500832557678
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [2/25] Loss: 0.12243036925792694, RECONS: 0.12144975612560908, DISTANCE: 0.9806137482325236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9983, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [3/25] Loss: 0.12292668968439102, RECONS: 0.12203122302889824, DISTANCE: 0.8954676985740662
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [4/25] Loss: 0.12317339181900025, RECONS: 0.12233187556266785, DISTANCE: 0.8415170192718506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6266, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [5/25] Loss: 0.12205309793353081, RECONS: 0.12123871097962062, DISTANCE: 0.8143876393636068
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [6/25] Loss: 0.12270089664629527, RECONS: 0.12189054276262011, DISTANCE: 0.8103536197117397
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [7/25] Loss: 0.12289741635322571, RECONS: 0.12208114750683308, DISTANCE: 0.8162682801485062
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [8/25] Loss: 0.12338380846712324, RECONS: 0.12248167395591736, DISTANCE: 0.9021332661310831
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [9/25] Loss: 0.12397643625736236, RECONS: 0.12300290018320084, DISTANCE: 0.9735345959663391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9981, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [10/25] Loss: 0.12427833134477789, RECONS: 0.1232792166146365, DISTANCE: 0.9991140473972667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [11/25] Loss: 0.12483696142832439, RECONS: 0.12380582094192505, DISTANCE: 1.0311398605505626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [12/25] Loss: 0.1247385167158567, RECONS: 0.12371411346472226, DISTANCE: 1.0244025542185857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8343, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [13/25] Loss: 0.12433124652930669, RECONS: 0.1233297341636249, DISTANCE: 1.0015119569642204
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [14/25] Loss: 0.12427159498135248, RECONS: 0.12324983676274617, DISTANCE: 1.0217577377955118
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8447, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [15/25] Loss: 0.12450713431462646, RECONS: 0.12346413172781467, DISTANCE: 1.0430022552609444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9963, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [16/25] Loss: 0.12477404974839267, RECONS: 0.12375106531030991, DISTANCE: 1.0229840629241045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [17/25] Loss: 0.12474924160374536, RECONS: 0.12372835394408968, DISTANCE: 1.0208874477280512
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [18/25] Loss: 0.12436494505719135, RECONS: 0.12333518776454423, DISTANCE: 1.0297569977609735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9986, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [19/25] Loss: 0.12432453855872154, RECONS: 0.12328367829322814, DISTANCE: 1.0408598482608795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8407, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [20/25] Loss: 0.12427636555262975, RECONS: 0.12325018750769752, DISTANCE: 1.0261775936399187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9928, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8454, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [21/25] Loss: 0.12405759976668791, RECONS: 0.12304785136472095, DISTANCE: 1.0097478357228367
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9975, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [22/25] Loss: 0.12428219098111858, RECONS: 0.12328967549230742, DISTANCE: 0.9925146362055903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8511, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [23/25] Loss: 0.12429853280385335, RECONS: 0.12331504033257563, DISTANCE: 0.9834915747245153
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9970, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MeanBackward0>)
Train[6/300] [24/25] Loss: 0.12439285278320313, RECONS: 0.12338344186544419, DISTANCE: 1.0094101333618164
Test[6/300] [0/2] Loss: 0.1401829719543457, RECONS: 0.13854935765266418, DISTANCE: 1.6336089372634888
Test[6/300] [1/2] Loss: 0.13955924659967422, RECONS: 0.13768840581178665, DISTANCE: 1.8708394169807434
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [0/25] Loss: 0.12269193679094315, RECONS: 0.12169905751943588, DISTANCE: 0.9928779602050781
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8368, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [1/25] Loss: 0.11864050477743149, RECONS: 0.11778078600764275, DISTANCE: 0.8597196936607361
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [2/25] Loss: 0.11987278362115224, RECONS: 0.11896855384111404, DISTANCE: 0.9042297204335531
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [3/25] Loss: 0.1209466140717268, RECONS: 0.12009579129517078, DISTANCE: 0.8508223295211792
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [4/25] Loss: 0.12066297680139541, RECONS: 0.11977704912424088, DISTANCE: 0.8859269142150878
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9937, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [5/25] Loss: 0.12028759717941284, RECONS: 0.11939463143547376, DISTANCE: 0.8929656346638998
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8345, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [6/25] Loss: 0.1207439239536013, RECONS: 0.11990166136196681, DISTANCE: 0.8422621999468122
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [7/25] Loss: 0.1207831958308816, RECONS: 0.11994932126253843, DISTANCE: 0.8338742256164551
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9981, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [8/25] Loss: 0.12036662631564671, RECONS: 0.11955958687596852, DISTANCE: 0.8070389694637723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [9/25] Loss: 0.12083355486392974, RECONS: 0.12003900110721588, DISTANCE: 0.7945538282394409
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5945, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8311, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [10/25] Loss: 0.12092485617507588, RECONS: 0.12014190310781653, DISTANCE: 0.7829528505151923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8366, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [11/25] Loss: 0.12092888168990612, RECONS: 0.12014741823077202, DISTANCE: 0.7814633448918661
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8370, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [12/25] Loss: 0.12053054227278782, RECONS: 0.11972480439222775, DISTANCE: 0.8057376054617075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8376, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [13/25] Loss: 0.12031636014580727, RECONS: 0.11951189860701561, DISTANCE: 0.8044612407684326
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [14/25] Loss: 0.12037733991940816, RECONS: 0.1195763165752093, DISTANCE: 0.8010228315989176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9916, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [15/25] Loss: 0.12039992865175009, RECONS: 0.11961070355027914, DISTANCE: 0.789224848151207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6246, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9981, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [16/25] Loss: 0.11992521408726187, RECONS: 0.11911427317296758, DISTANCE: 0.8109407565172981
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9992, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8454, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [17/25] Loss: 0.12003136095073488, RECONS: 0.11922028826342689, DISTANCE: 0.8110725084940592
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8496, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [18/25] Loss: 0.11999915736286264, RECONS: 0.11918794559805017, DISTANCE: 0.8112114354183799
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [19/25] Loss: 0.11966354213654995, RECONS: 0.11885233558714389, DISTANCE: 0.8112062036991119
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8464, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [20/25] Loss: 0.11949242296673003, RECONS: 0.11867932797897429, DISTANCE: 0.8130947975885301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [21/25] Loss: 0.11944970082152974, RECONS: 0.11864127997647632, DISTANCE: 0.80842078815807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8391, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [22/25] Loss: 0.11928802048382552, RECONS: 0.11848571345857951, DISTANCE: 0.80230712890625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [23/25] Loss: 0.11941339541226625, RECONS: 0.11861995328217745, DISTANCE: 0.793442169825236
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9986, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MeanBackward0>)
Train[7/300] [24/25] Loss: 0.1194407007098198, RECONS: 0.11864502549171448, DISTANCE: 0.7956752014160157
Test[7/300] [0/2] Loss: 0.13361519575119019, RECONS: 0.1322522759437561, DISTANCE: 1.3629220724105835
Test[7/300] [1/2] Loss: 0.13259877264499664, RECONS: 0.13076737523078918, DISTANCE: 1.8313964009284973
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9961, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [0/25] Loss: 0.12263167649507523, RECONS: 0.12197929620742798, DISTANCE: 0.6523804664611816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6224, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [1/25] Loss: 0.11677064374089241, RECONS: 0.11611570417881012, DISTANCE: 0.6549408435821533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [2/25] Loss: 0.11721938600142796, RECONS: 0.11655258138974507, DISTANCE: 0.6668055852254232
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9909, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [3/25] Loss: 0.11701733246445656, RECONS: 0.11629988811910152, DISTANCE: 0.7174445986747742
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9942, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8374, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [4/25] Loss: 0.11714544743299485, RECONS: 0.11636404693126678, DISTANCE: 0.7814008235931397
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8288, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [5/25] Loss: 0.116792148600022, RECONS: 0.11605478823184967, DISTANCE: 0.7373608350753784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [6/25] Loss: 0.1165342607668468, RECONS: 0.11581227609089442, DISTANCE: 0.7219845567430768
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [7/25] Loss: 0.11656202003359795, RECONS: 0.11582821793854237, DISTANCE: 0.7338021248579025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [8/25] Loss: 0.11623022788100773, RECONS: 0.11550658941268921, DISTANCE: 0.7236388921737671
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [9/25] Loss: 0.11595601588487625, RECONS: 0.11522197648882866, DISTANCE: 0.7340397238731384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8311, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [10/25] Loss: 0.11596666547385129, RECONS: 0.11522927406159314, DISTANCE: 0.7373915043744174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8321, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [11/25] Loss: 0.11611266310016315, RECONS: 0.11537585345407327, DISTANCE: 0.736809641122818
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8356, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [12/25] Loss: 0.11625427981981865, RECONS: 0.11552136391401291, DISTANCE: 0.7329158049363357
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8319, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [13/25] Loss: 0.11652792511241776, RECONS: 0.11580838316253253, DISTANCE: 0.7195418221609933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9986, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8301, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [14/25] Loss: 0.11653856188058853, RECONS: 0.1158121481537819, DISTANCE: 0.7264135042826335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [15/25] Loss: 0.11647173156961799, RECONS: 0.11574298795312643, DISTANCE: 0.7287432849407196
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9981, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [16/25] Loss: 0.11630802645402796, RECONS: 0.11557743347742978, DISTANCE: 0.7305926715626436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [17/25] Loss: 0.11647472240858608, RECONS: 0.11572996568348673, DISTANCE: 0.7447563476032681
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6262, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [18/25] Loss: 0.1161153602756952, RECONS: 0.11537711596802662, DISTANCE: 0.7382439249440244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [19/25] Loss: 0.11588521413505078, RECONS: 0.11514442414045334, DISTANCE: 0.7407895863056183
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [20/25] Loss: 0.11582517340069726, RECONS: 0.11508360150314513, DISTANCE: 0.7415714547747657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8310, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [21/25] Loss: 0.11569504541429607, RECONS: 0.11494918370788748, DISTANCE: 0.7458611184900458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9960, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [22/25] Loss: 0.11561577669952226, RECONS: 0.1148668242537457, DISTANCE: 0.7489518911942191
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5945, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [23/25] Loss: 0.11584219429641962, RECONS: 0.1150989153732856, DISTANCE: 0.743278423945109
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8322, device='cuda:0', grad_fn=<MeanBackward0>)
Train[8/300] [24/25] Loss: 0.11612829595804214, RECONS: 0.11537867248058319, DISTANCE: 0.7496230697631836
Test[8/300] [0/2] Loss: 0.1299835443496704, RECONS: 0.12910929322242737, DISTANCE: 0.8742437362670898
Test[8/300] [1/2] Loss: 0.12922409921884537, RECONS: 0.1279640644788742, DISTANCE: 1.2600345015525818
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8254, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [0/25] Loss: 0.11317956447601318, RECONS: 0.11250173300504684, DISTANCE: 0.6778334379196167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9983, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [1/25] Loss: 0.112517811357975, RECONS: 0.11183242127299309, DISTANCE: 0.6853918433189392
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8251, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [2/25] Loss: 0.11328107118606567, RECONS: 0.11254408458868663, DISTANCE: 0.736988345781962
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [3/25] Loss: 0.11323580518364906, RECONS: 0.11253302544355392, DISTANCE: 0.7027805149555206
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [4/25] Loss: 0.11324448734521866, RECONS: 0.11253638118505478, DISTANCE: 0.708107304573059
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [5/25] Loss: 0.1138452763358752, RECONS: 0.11312123015522957, DISTANCE: 0.7240473628044128
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9909, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [6/25] Loss: 0.11328723281621933, RECONS: 0.11259181052446365, DISTANCE: 0.6954232794897897
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9989, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [7/25] Loss: 0.11261631920933723, RECONS: 0.11192810349166393, DISTANCE: 0.6882163435220718
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [8/25] Loss: 0.11282652864853542, RECONS: 0.11214714745680492, DISTANCE: 0.6793820195727878
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8300, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [9/25] Loss: 0.1133061483502388, RECONS: 0.11261045336723327, DISTANCE: 0.6956960082054138
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9989, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8336, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [10/25] Loss: 0.1131425987590443, RECONS: 0.11244137991558421, DISTANCE: 0.7012199813669379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8240, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [11/25] Loss: 0.11333274468779564, RECONS: 0.11261889773110549, DISTANCE: 0.7138480444749197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8343, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [12/25] Loss: 0.11335029109166218, RECONS: 0.11262612675244991, DISTANCE: 0.7241650819778442
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [13/25] Loss: 0.11319110382880483, RECONS: 0.1124670532132898, DISTANCE: 0.7240510412624904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8273, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [14/25] Loss: 0.11288614124059677, RECONS: 0.11217387765645981, DISTANCE: 0.7122640212376913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9983, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [15/25] Loss: 0.11284490302205086, RECONS: 0.11213566130027175, DISTANCE: 0.7092419788241386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8311, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [16/25] Loss: 0.11280154787442263, RECONS: 0.11209525869173162, DISTANCE: 0.7062894666896147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9961, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8331, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [17/25] Loss: 0.11299666555391417, RECONS: 0.1122955402566327, DISTANCE: 0.7011256814002991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [18/25] Loss: 0.11336017282385576, RECONS: 0.11266301062546279, DISTANCE: 0.6971626846413863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9946, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [19/25] Loss: 0.1134407103061676, RECONS: 0.1127484168857336, DISTANCE: 0.6922937452793121
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [20/25] Loss: 0.11365531243029095, RECONS: 0.11295725014947709, DISTANCE: 0.6980626923697335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [21/25] Loss: 0.11367746578021483, RECONS: 0.11298669095743787, DISTANCE: 0.6907751939513467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [22/25] Loss: 0.11350861029780429, RECONS: 0.11282030557808669, DISTANCE: 0.6883051602736764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9989, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [23/25] Loss: 0.11351653436819713, RECONS: 0.11283302896966536, DISTANCE: 0.6835058232148489
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9954, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[9/300] [24/25] Loss: 0.11324398040771484, RECONS: 0.1125419357419014, DISTANCE: 0.7020449209213256
Test[9/300] [0/2] Loss: 0.1263463944196701, RECONS: 0.12481822073459625, DISTANCE: 1.5281753540039062
Test[9/300] [1/2] Loss: 0.12602246552705765, RECONS: 0.12408504635095596, DISTANCE: 1.937421202659607
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [0/25] Loss: 0.11398957669734955, RECONS: 0.11326093971729279, DISTANCE: 0.7286341190338135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8275, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [1/25] Loss: 0.11465543508529663, RECONS: 0.11401396989822388, DISTANCE: 0.6414648294448853
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9954, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [2/25] Loss: 0.11409061153729756, RECONS: 0.11349130421876907, DISTANCE: 0.5993077754974365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8282, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [3/25] Loss: 0.1130323875695467, RECONS: 0.11239900812506676, DISTANCE: 0.6333790421485901
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8258, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [4/25] Loss: 0.1129592552781105, RECONS: 0.1123583048582077, DISTANCE: 0.600949478149414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8297, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [5/25] Loss: 0.11224542061487834, RECONS: 0.11164075260361035, DISTANCE: 0.6046677827835083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8352, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [6/25] Loss: 0.11185754729168755, RECONS: 0.11125719866582326, DISTANCE: 0.6003488983426776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [7/25] Loss: 0.11192879546433687, RECONS: 0.11133555229753256, DISTANCE: 0.5932432264089584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9942, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8407, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [8/25] Loss: 0.112535969250732, RECONS: 0.11195366084575653, DISTANCE: 0.5823087559805976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8331, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [9/25] Loss: 0.11275403201580048, RECONS: 0.11216847151517868, DISTANCE: 0.5855611681938171
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [10/25] Loss: 0.1129990504546599, RECONS: 0.1123954477635297, DISTANCE: 0.6036032221534036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6246, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8251, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [11/25] Loss: 0.11277912557125092, RECONS: 0.11219227562348048, DISTANCE: 0.5868506133556366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9959, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [12/25] Loss: 0.11250388163786668, RECONS: 0.11192210305195588, DISTANCE: 0.5817790123132559
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [13/25] Loss: 0.11259962884443146, RECONS: 0.11202418644513402, DISTANCE: 0.5754427654402596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8271, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [14/25] Loss: 0.11288367112477621, RECONS: 0.11230768611033758, DISTANCE: 0.5759851217269898
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [15/25] Loss: 0.11277229525148869, RECONS: 0.11220378382131457, DISTANCE: 0.5685115829110146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9902, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8325, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [16/25] Loss: 0.11295241862535477, RECONS: 0.11238009307314367, DISTANCE: 0.572325629346511
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [17/25] Loss: 0.11271364366014798, RECONS: 0.1121324213842551, DISTANCE: 0.5812221765518188
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [18/25] Loss: 0.11275319362941541, RECONS: 0.11216866264217779, DISTANCE: 0.5845309997859754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9960, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [19/25] Loss: 0.11260304525494576, RECONS: 0.11202222593128681, DISTANCE: 0.5808192908763885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [20/25] Loss: 0.11252934059926442, RECONS: 0.11194989688339688, DISTANCE: 0.5794437328974406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [21/25] Loss: 0.11267817189747636, RECONS: 0.11210371790961786, DISTANCE: 0.574454052881761
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [22/25] Loss: 0.11276436921047128, RECONS: 0.1121798514024071, DISTANCE: 0.5845177588255509
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9967, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [23/25] Loss: 0.1126747711872061, RECONS: 0.11209499121954043, DISTANCE: 0.5797800024350485
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[10/300] [24/25] Loss: 0.11263262540102005, RECONS: 0.11204829096794128, DISTANCE: 0.5843345165252686
Test[10/300] [0/2] Loss: 0.12561823427677155, RECONS: 0.12474660575389862, DISTANCE: 0.8716287612915039
Test[10/300] [1/2] Loss: 0.12598249316215515, RECONS: 0.1248827800154686, DISTANCE: 1.0997161865234375
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [0/25] Loss: 0.11232999712228775, RECONS: 0.11179293692111969, DISTANCE: 0.5370614528656006
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [1/25] Loss: 0.11206959187984467, RECONS: 0.1115475483238697, DISTANCE: 0.5220459699630737
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8297, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [2/25] Loss: 0.11093144118785858, RECONS: 0.11039647708336513, DISTANCE: 0.5349648793538412
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [3/25] Loss: 0.1118872631341219, RECONS: 0.11128436960279942, DISTANCE: 0.6028945744037628
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8356, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [4/25] Loss: 0.11296646595001221, RECONS: 0.11240341663360595, DISTANCE: 0.563049578666687
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8321, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [5/25] Loss: 0.11295768121878307, RECONS: 0.11239597946405411, DISTANCE: 0.5617021520932516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [6/25] Loss: 0.112283536366054, RECONS: 0.11173470956938607, DISTANCE: 0.5488276311329433
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [7/25] Loss: 0.11249823588877916, RECONS: 0.11192128714174032, DISTANCE: 0.5769494324922562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [8/25] Loss: 0.1124799797932307, RECONS: 0.11189575907256868, DISTANCE: 0.5842213763131036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [9/25] Loss: 0.11221514344215393, RECONS: 0.1116425171494484, DISTANCE: 0.5726268410682678
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6209, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [10/25] Loss: 0.11178301613439214, RECONS: 0.11121055890213359, DISTANCE: 0.5724576928398826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9916, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [11/25] Loss: 0.11179383533696334, RECONS: 0.11122817111512025, DISTANCE: 0.5656647384166718
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [12/25] Loss: 0.11160842615824479, RECONS: 0.11105019140702027, DISTANCE: 0.558235214306758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [13/25] Loss: 0.11173951679042407, RECONS: 0.11118281792317118, DISTANCE: 0.5566993866647992
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [14/25] Loss: 0.11202852775653203, RECONS: 0.11147067695856094, DISTANCE: 0.5578511238098145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [15/25] Loss: 0.11213029269129038, RECONS: 0.11157700512558222, DISTANCE: 0.5532880127429962
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [16/25] Loss: 0.11203314977533677, RECONS: 0.11148148994235431, DISTANCE: 0.5516603553996366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9969, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [17/25] Loss: 0.11194023200207287, RECONS: 0.11137895451651679, DISTANCE: 0.5612779855728149
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9967, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [18/25] Loss: 0.11157168408757762, RECONS: 0.11101417165053518, DISTANCE: 0.5575128354524311
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [19/25] Loss: 0.1116097990423441, RECONS: 0.11104685887694359, DISTANCE: 0.5629404067993165
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [20/25] Loss: 0.11148320599680855, RECONS: 0.11092130981740497, DISTANCE: 0.5618963128044492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [21/25] Loss: 0.1115912442857569, RECONS: 0.11103197999975899, DISTANCE: 0.5592642805793069
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8241, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [22/25] Loss: 0.11140439594569414, RECONS: 0.11084390885156134, DISTANCE: 0.5604871822440106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [23/25] Loss: 0.11122915955881278, RECONS: 0.1106619496519367, DISTANCE: 0.5672099391619364
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8302, device='cuda:0', grad_fn=<MeanBackward0>)
Train[11/300] [24/25] Loss: 0.11120172530412674, RECONS: 0.11062818557024003, DISTANCE: 0.5735398483276367
Test[11/300] [0/2] Loss: 0.12467329204082489, RECONS: 0.122606560587883, DISTANCE: 2.0667333602905273
Test[11/300] [1/2] Loss: 0.12525927275419235, RECONS: 0.12264928594231606, DISTANCE: 2.6099891662597656
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [0/25] Loss: 0.10955649614334106, RECONS: 0.10892721265554428, DISTANCE: 0.6292855739593506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8292, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [1/25] Loss: 0.10893671587109566, RECONS: 0.10836827009916306, DISTANCE: 0.568446159362793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [2/25] Loss: 0.10866146783034007, RECONS: 0.10814906656742096, DISTANCE: 0.5124009450276693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [3/25] Loss: 0.11014344915747643, RECONS: 0.10958272404968739, DISTANCE: 0.5607240796089172
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8275, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [4/25] Loss: 0.10976885557174683, RECONS: 0.10920358449220657, DISTANCE: 0.5652698993682861
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [5/25] Loss: 0.10989559317628543, RECONS: 0.10935174797972043, DISTANCE: 0.5438441832860311
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8275, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [6/25] Loss: 0.11071631950991494, RECONS: 0.11018570725406919, DISTANCE: 0.5306109019688198
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [7/25] Loss: 0.11032917816191912, RECONS: 0.10981294699013233, DISTANCE: 0.5162298679351807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [8/25] Loss: 0.11096907407045364, RECONS: 0.11045443349414402, DISTANCE: 0.5146391656663682
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [9/25] Loss: 0.11059452965855598, RECONS: 0.11009075343608857, DISTANCE: 0.5037749290466309
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [10/25] Loss: 0.11059023101221431, RECONS: 0.11006823994896629, DISTANCE: 0.521990180015564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [11/25] Loss: 0.11028240993618965, RECONS: 0.10976775611440341, DISTANCE: 0.514652818441391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [12/25] Loss: 0.110351423231455, RECONS: 0.10983593933857404, DISTANCE: 0.5154831317754892
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [13/25] Loss: 0.11020467643226896, RECONS: 0.1096850016287395, DISTANCE: 0.5196741393634251
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9856, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [14/25] Loss: 0.11020239293575287, RECONS: 0.10969007958968481, DISTANCE: 0.5123127698898315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9921, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [15/25] Loss: 0.11003055050969124, RECONS: 0.10951508115977049, DISTANCE: 0.51546860486269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [16/25] Loss: 0.11017113047487595, RECONS: 0.10963633525020935, DISTANCE: 0.534794435781591
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6237, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9928, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [17/25] Loss: 0.10990125892890824, RECONS: 0.10937519247333209, DISTANCE: 0.5260656608475579
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5922, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [18/25] Loss: 0.11030292746267821, RECONS: 0.10977318843728617, DISTANCE: 0.5297382693541678
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6214, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [19/25] Loss: 0.11006507240235805, RECONS: 0.10954088605940342, DISTANCE: 0.5241856157779694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [20/25] Loss: 0.11010702380112239, RECONS: 0.10958743804977053, DISTANCE: 0.5195851269222441
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [21/25] Loss: 0.11017824946479364, RECONS: 0.10966033962639896, DISTANCE: 0.5179092396389354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9982, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [22/25] Loss: 0.11039883546207262, RECONS: 0.10987990576287975, DISTANCE: 0.5189291964406553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [23/25] Loss: 0.11037945561110973, RECONS: 0.1098598325625062, DISTANCE: 0.5196225792169571
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[12/300] [24/25] Loss: 0.11047005176544189, RECONS: 0.10994063794612885, DISTANCE: 0.5294134283065796
Test[12/300] [0/2] Loss: 0.12448906898498535, RECONS: 0.12244295328855515, DISTANCE: 2.0461173057556152
Test[12/300] [1/2] Loss: 0.12394944205880165, RECONS: 0.1216292567551136, DISTANCE: 2.3201863765716553
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6217, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [0/25] Loss: 0.1049596294760704, RECONS: 0.10453282296657562, DISTANCE: 0.42680859565734863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [1/25] Loss: 0.10759112611413002, RECONS: 0.10715123265981674, DISTANCE: 0.43989360332489014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [2/25] Loss: 0.10648923367261887, RECONS: 0.10605420917272568, DISTANCE: 0.43502354621887207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9982, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [3/25] Loss: 0.10812125727534294, RECONS: 0.10765075497329235, DISTANCE: 0.47050148248672485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [4/25] Loss: 0.10869082659482956, RECONS: 0.10819806605577469, DISTANCE: 0.49275918006896974
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9928, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [5/25] Loss: 0.10857722287376721, RECONS: 0.108095387617747, DISTANCE: 0.48183385531107586
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [6/25] Loss: 0.10859527332442147, RECONS: 0.10811408076967512, DISTANCE: 0.4811915840421404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [7/25] Loss: 0.10916409734636545, RECONS: 0.10867257416248322, DISTANCE: 0.49152256548404694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8281, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [8/25] Loss: 0.11007239752345616, RECONS: 0.1095829200413492, DISTANCE: 0.4894767469829983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8263, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [9/25] Loss: 0.10975693315267562, RECONS: 0.1092772476375103, DISTANCE: 0.47968484163284303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [10/25] Loss: 0.10954307629303499, RECONS: 0.10905173285440965, DISTANCE: 0.49134285883470014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [11/25] Loss: 0.10981461281577747, RECONS: 0.1093236580491066, DISTANCE: 0.49095431963602704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [12/25] Loss: 0.10995878049960503, RECONS: 0.10946348424141224, DISTANCE: 0.4952958363753099
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [13/25] Loss: 0.11027529729264123, RECONS: 0.10976199805736542, DISTANCE: 0.5132988350731986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9916, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [14/25] Loss: 0.1101890688141187, RECONS: 0.10968078474203745, DISTANCE: 0.5082835038503011
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [15/25] Loss: 0.11016289098188281, RECONS: 0.10965861473232508, DISTANCE: 0.5042756795883179
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7944, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [16/25] Loss: 0.11036661793203915, RECONS: 0.1098497689646833, DISTANCE: 0.5168483046924367
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [17/25] Loss: 0.11032361206081179, RECONS: 0.10981104481551382, DISTANCE: 0.5125664671262106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [18/25] Loss: 0.11027881856027402, RECONS: 0.10976173179714303, DISTANCE: 0.5170860478752538
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [19/25] Loss: 0.11034247539937496, RECONS: 0.10982466973364353, DISTANCE: 0.5178049743175507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [20/25] Loss: 0.11014790513685771, RECONS: 0.10963570645877294, DISTANCE: 0.5121978521347046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9848, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [21/25] Loss: 0.11029066856611859, RECONS: 0.10977142202583226, DISTANCE: 0.519245597449216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [22/25] Loss: 0.11029738025820773, RECONS: 0.10978229894586232, DISTANCE: 0.5150803949521936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9811, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [23/25] Loss: 0.11023932198683421, RECONS: 0.10972410005827744, DISTANCE: 0.5152209649483362
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9871, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[13/300] [24/25] Loss: 0.11044108748435974, RECONS: 0.10990801990032197, DISTANCE: 0.5330667352676391
Test[13/300] [0/2] Loss: 0.13151796162128448, RECONS: 0.12809914350509644, DISTANCE: 3.4188148975372314
Test[13/300] [1/2] Loss: 0.1318117305636406, RECONS: 0.12810497730970383, DISTANCE: 3.706749200820923
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9894, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [0/25] Loss: 0.11415992677211761, RECONS: 0.11364875733852386, DISTANCE: 0.5111727714538574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [1/25] Loss: 0.11087093502283096, RECONS: 0.11039092019200325, DISTANCE: 0.48001646995544434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9914, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [2/25] Loss: 0.10894345492124557, RECONS: 0.10847920179367065, DISTANCE: 0.46425533294677734
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [3/25] Loss: 0.10918192751705647, RECONS: 0.1087026447057724, DISTANCE: 0.47928422689437866
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [4/25] Loss: 0.10878079980611802, RECONS: 0.10831242054700851, DISTANCE: 0.46837992668151857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [5/25] Loss: 0.10867348934213321, RECONS: 0.10820185889800389, DISTANCE: 0.47163132826487225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [6/25] Loss: 0.10879293616328921, RECONS: 0.10832902789115906, DISTANCE: 0.4639089788709368
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8298, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [7/25] Loss: 0.10942313075065613, RECONS: 0.10895510949194431, DISTANCE: 0.4680222272872925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8329, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [8/25] Loss: 0.10989395446247524, RECONS: 0.10942578067382176, DISTANCE: 0.4681745635138618
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8255, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [9/25] Loss: 0.10957045555114746, RECONS: 0.10909626707434654, DISTANCE: 0.4741890072822571
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [10/25] Loss: 0.10933808508244428, RECONS: 0.10886391794139688, DISTANCE: 0.4741678237915039
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [11/25] Loss: 0.10933544176320235, RECONS: 0.10886184312403202, DISTANCE: 0.47359903653462726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [12/25] Loss: 0.10912030476790208, RECONS: 0.108640435223396, DISTANCE: 0.47987006260798526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9973, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [13/25] Loss: 0.10915562084742955, RECONS: 0.10867428353854588, DISTANCE: 0.4813377176012312
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5944, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [14/25] Loss: 0.10938974966605504, RECONS: 0.10889114091793696, DISTANCE: 0.4986092249552409
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [15/25] Loss: 0.10927971312776208, RECONS: 0.1087788911536336, DISTANCE: 0.5008225440979004
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [16/25] Loss: 0.10916596519596436, RECONS: 0.10866697044933543, DISTANCE: 0.498995163861443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [17/25] Loss: 0.10932518169283867, RECONS: 0.10883117177420193, DISTANCE: 0.494010501437717
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [18/25] Loss: 0.10929258442238758, RECONS: 0.10880221387273387, DISTANCE: 0.4903709512007864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [19/25] Loss: 0.10934782437980176, RECONS: 0.10886259488761425, DISTANCE: 0.4852297306060791
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9963, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [20/25] Loss: 0.10924342026313145, RECONS: 0.10875837362947918, DISTANCE: 0.4850469770885649
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [21/25] Loss: 0.10917110470208255, RECONS: 0.10868898203427141, DISTANCE: 0.48212303898551245
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [22/25] Loss: 0.10916794933702635, RECONS: 0.10868982355231824, DISTANCE: 0.4781261838000754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8374, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [23/25] Loss: 0.10922828099379937, RECONS: 0.10875206906348467, DISTANCE: 0.4762124518553416
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8358, device='cuda:0', grad_fn=<MeanBackward0>)
Train[14/300] [24/25] Loss: 0.10946350693702697, RECONS: 0.10897101491689681, DISTANCE: 0.49249245643615724
Test[14/300] [0/2] Loss: 0.12701186537742615, RECONS: 0.12515802681446075, DISTANCE: 1.853845477104187
Test[14/300] [1/2] Loss: 0.12623392790555954, RECONS: 0.12420321255922318, DISTANCE: 2.030716598033905
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8283, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [0/25] Loss: 0.1122610941529274, RECONS: 0.11190309375524521, DISTANCE: 0.3579998016357422
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9921, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [1/25] Loss: 0.11001071333885193, RECONS: 0.10959791392087936, DISTANCE: 0.41280078887939453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9963, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [2/25] Loss: 0.10979455212752025, RECONS: 0.10936942944924037, DISTANCE: 0.4251236915588379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9961, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [3/25] Loss: 0.10921031050384045, RECONS: 0.10877723433077335, DISTANCE: 0.43307650089263916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7948, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [4/25] Loss: 0.10938047915697098, RECONS: 0.10894879102706909, DISTANCE: 0.4316880226135254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [5/25] Loss: 0.10905899852514267, RECONS: 0.1086314395070076, DISTANCE: 0.42755842208862305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [6/25] Loss: 0.10831127422196525, RECONS: 0.107876256108284, DISTANCE: 0.43501738139561247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9970, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [7/25] Loss: 0.10838319547474384, RECONS: 0.10791859868913889, DISTANCE: 0.46459633111953735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [8/25] Loss: 0.10866733060942756, RECONS: 0.10820458912187153, DISTANCE: 0.4627413749694824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8286, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [9/25] Loss: 0.108751130849123, RECONS: 0.10829342156648636, DISTANCE: 0.4577089071273804
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8275, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [10/25] Loss: 0.10878318819132718, RECONS: 0.10831430893052708, DISTANCE: 0.46887898445129395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [11/25] Loss: 0.10915262810885906, RECONS: 0.10867950816949208, DISTANCE: 0.47311995426813763
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [12/25] Loss: 0.10932550292748672, RECONS: 0.10885155831391995, DISTANCE: 0.4739447006812462
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [13/25] Loss: 0.10937319483075823, RECONS: 0.10890510997601918, DISTANCE: 0.4680847781045096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6218, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [14/25] Loss: 0.10907392601172129, RECONS: 0.10860799451669058, DISTANCE: 0.4659313678741455
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [15/25] Loss: 0.10909407120198011, RECONS: 0.10862902598455548, DISTANCE: 0.46504487097263336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [16/25] Loss: 0.1089638633763089, RECONS: 0.10848635829546872, DISTANCE: 0.4775046320522533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [17/25] Loss: 0.1090018819603655, RECONS: 0.10852629236049122, DISTANCE: 0.4755890501870049
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [18/25] Loss: 0.1087671035998746, RECONS: 0.10829111855281026, DISTANCE: 0.4759844980741802
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [19/25] Loss: 0.10877269655466079, RECONS: 0.10829962641000748, DISTANCE: 0.47306970357894895
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5923, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [20/25] Loss: 0.10913071249212537, RECONS: 0.10866091222990126, DISTANCE: 0.46980000677562894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [21/25] Loss: 0.10920985957438295, RECONS: 0.10874007743867961, DISTANCE: 0.4697820164940574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [22/25] Loss: 0.10920997223128444, RECONS: 0.10873945705268694, DISTANCE: 0.47051507493723993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [23/25] Loss: 0.10919391860564549, RECONS: 0.10872607678174973, DISTANCE: 0.4678417940934499
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9871, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[15/300] [24/25] Loss: 0.10915491819381713, RECONS: 0.10867533296346664, DISTANCE: 0.4795850658416748
Test[15/300] [0/2] Loss: 0.12508894503116608, RECONS: 0.12418290227651596, DISTANCE: 0.9060425758361816
Test[15/300] [1/2] Loss: 0.12444595992565155, RECONS: 0.12324868887662888, DISTANCE: 1.1972692608833313
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9909, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [0/25] Loss: 0.10752046853303909, RECONS: 0.10709937661886215, DISTANCE: 0.4210939407348633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [1/25] Loss: 0.10903963819146156, RECONS: 0.10859747603535652, DISTANCE: 0.44216179847717285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9883, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [2/25] Loss: 0.10988309234380722, RECONS: 0.10944246252377827, DISTANCE: 0.4406293233235677
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [3/25] Loss: 0.10903583653271198, RECONS: 0.1085895486176014, DISTANCE: 0.4462878704071045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [4/25] Loss: 0.10996460318565368, RECONS: 0.10953153520822526, DISTANCE: 0.43306827545166016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9967, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [5/25] Loss: 0.10929833352565765, RECONS: 0.10885414977868398, DISTANCE: 0.4441843827565511
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8230, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [6/25] Loss: 0.10893028229475021, RECONS: 0.10849446058273315, DISTANCE: 0.43582245281764437
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [7/25] Loss: 0.10893019940704107, RECONS: 0.108489072881639, DISTANCE: 0.44112685322761536
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [8/25] Loss: 0.10909090770615472, RECONS: 0.10864696734481388, DISTANCE: 0.44394050704108345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [9/25] Loss: 0.10892125442624093, RECONS: 0.10846552699804306, DISTANCE: 0.45572792291641234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [10/25] Loss: 0.10921275954354893, RECONS: 0.1087566079063849, DISTANCE: 0.45615236325697467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [11/25] Loss: 0.10926610603928566, RECONS: 0.10880601964890957, DISTANCE: 0.46008724967638653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9914, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [12/25] Loss: 0.10930495881117307, RECONS: 0.1088473046055207, DISTANCE: 0.45765503553243786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [13/25] Loss: 0.10928275116852351, RECONS: 0.10882463891591344, DISTANCE: 0.45811316796711515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5936, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [14/25] Loss: 0.10959660212198893, RECONS: 0.1091415782769521, DISTANCE: 0.4550246953964233
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [15/25] Loss: 0.10959888622164726, RECONS: 0.10913668479770422, DISTANCE: 0.4622023180127144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9864, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [16/25] Loss: 0.10945887381539625, RECONS: 0.10899690188029233, DISTANCE: 0.4619726924335255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [17/25] Loss: 0.10933144680327839, RECONS: 0.10887331225805813, DISTANCE: 0.45813513464397854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [18/25] Loss: 0.10912805952523884, RECONS: 0.10867341019605335, DISTANCE: 0.4546497809259515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9975, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [19/25] Loss: 0.1093442153185606, RECONS: 0.10889113880693913, DISTANCE: 0.45307701230049136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [20/25] Loss: 0.1093512386793182, RECONS: 0.10889165493704024, DISTANCE: 0.45958427020481657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9891, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8258, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [21/25] Loss: 0.10942018912597136, RECONS: 0.1089598536491394, DISTANCE: 0.46033582904122095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [22/25] Loss: 0.10947472148615381, RECONS: 0.10901490858067638, DISTANCE: 0.45981335639953613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [23/25] Loss: 0.10951099606851737, RECONS: 0.10905323084443808, DISTANCE: 0.4577656388282776
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[16/300] [24/25] Loss: 0.10949504554271698, RECONS: 0.1090253534913063, DISTANCE: 0.4696925926208496
Test[16/300] [0/2] Loss: 0.12569351494312286, RECONS: 0.12475677579641342, DISTANCE: 0.936739444732666
Test[16/300] [1/2] Loss: 0.12435155734419823, RECONS: 0.12308714538812637, DISTANCE: 1.264411449432373
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [0/25] Loss: 0.10485900193452835, RECONS: 0.1044204831123352, DISTANCE: 0.4385204315185547
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9905, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [1/25] Loss: 0.1076602078974247, RECONS: 0.10722565278410912, DISTANCE: 0.4345541000366211
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [2/25] Loss: 0.10807800541321437, RECONS: 0.10760058214267094, DISTANCE: 0.47742271423339844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [3/25] Loss: 0.10845223814249039, RECONS: 0.10797318257391453, DISTANCE: 0.47905510663986206
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [4/25] Loss: 0.10743418633937836, RECONS: 0.10696106404066086, DISTANCE: 0.47312264442443847
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [5/25] Loss: 0.10752016678452492, RECONS: 0.10702125603953998, DISTANCE: 0.49891064564387005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [6/25] Loss: 0.10796353753123965, RECONS: 0.10747572992529188, DISTANCE: 0.4878071205956595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [7/25] Loss: 0.1084319157525897, RECONS: 0.10796278342604637, DISTANCE: 0.4691319316625595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [8/25] Loss: 0.1082537066605356, RECONS: 0.10778773079315822, DISTANCE: 0.4659752978218926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [9/25] Loss: 0.10817011371254921, RECONS: 0.10770943090319633, DISTANCE: 0.4606820702552795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9886, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [10/25] Loss: 0.10800967636433514, RECONS: 0.10754131864417683, DISTANCE: 0.4683568369258534
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [11/25] Loss: 0.1081794233371814, RECONS: 0.10771742773552735, DISTANCE: 0.46199461817741394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [12/25] Loss: 0.1081657547217149, RECONS: 0.10770982331954516, DISTANCE: 0.45593048059023344
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [13/25] Loss: 0.10828852972814015, RECONS: 0.10783056010093008, DISTANCE: 0.4579689162118094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [14/25] Loss: 0.10858836024999619, RECONS: 0.10812894652287165, DISTANCE: 0.45941311518351235
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [15/25] Loss: 0.10847059637308121, RECONS: 0.10801450302824378, DISTANCE: 0.456092894077301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [16/25] Loss: 0.10830602268962299, RECONS: 0.10784861489253886, DISTANCE: 0.45740722207462087
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [17/25] Loss: 0.1082344117263953, RECONS: 0.10777427131930988, DISTANCE: 0.4601397646798028
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9833, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [18/25] Loss: 0.10810947614280801, RECONS: 0.10765238380745838, DISTANCE: 0.45709189615751566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [19/25] Loss: 0.10825549177825451, RECONS: 0.1078002106398344, DISTANCE: 0.45528063774108884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [20/25] Loss: 0.10857024469545909, RECONS: 0.10811349714086169, DISTANCE: 0.45674712317330496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [21/25] Loss: 0.10833312672647563, RECONS: 0.10787946155125444, DISTANCE: 0.4536648013375022
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [22/25] Loss: 0.1083052916371304, RECONS: 0.10785351596448732, DISTANCE: 0.45177518803140393
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [23/25] Loss: 0.10842558896789949, RECONS: 0.1079755121221145, DISTANCE: 0.450076421101888
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[17/300] [24/25] Loss: 0.10832960635423661, RECONS: 0.1078658640384674, DISTANCE: 0.46374184608459473
Test[17/300] [0/2] Loss: 0.1325908750295639, RECONS: 0.13060955703258514, DISTANCE: 1.981316089630127
Test[17/300] [1/2] Loss: 0.13249583542346954, RECONS: 0.13006985932588577, DISTANCE: 2.425972580909729
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7883, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [0/25] Loss: 0.10374752432107925, RECONS: 0.10336537659168243, DISTANCE: 0.38214969635009766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7943, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [1/25] Loss: 0.10663705319166183, RECONS: 0.10626044869422913, DISTANCE: 0.3766058683395386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9869, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7971, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [2/25] Loss: 0.10619403173526128, RECONS: 0.10578029106060664, DISTANCE: 0.4137410322825114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [3/25] Loss: 0.10662049613893032, RECONS: 0.10621234402060509, DISTANCE: 0.40815144777297974
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9924, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [4/25] Loss: 0.10685791373252869, RECONS: 0.10644386410713196, DISTANCE: 0.414049768447876
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9778, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [5/25] Loss: 0.1074162224928538, RECONS: 0.10700550178686778, DISTANCE: 0.41072086493174237
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [6/25] Loss: 0.10763455820935112, RECONS: 0.10722608119249344, DISTANCE: 0.4084773063659668
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [7/25] Loss: 0.10797967948019505, RECONS: 0.10756765026599169, DISTANCE: 0.41202932596206665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [8/25] Loss: 0.10806764910618465, RECONS: 0.10765169974830416, DISTANCE: 0.41594966252644855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7931, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [9/25] Loss: 0.10753228813409806, RECONS: 0.10711965039372444, DISTANCE: 0.41263775825500487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7888, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [10/25] Loss: 0.10745809024030512, RECONS: 0.10704463923519308, DISTANCE: 0.413451151414351
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7910, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [11/25] Loss: 0.10778592092295487, RECONS: 0.10737222308913867, DISTANCE: 0.4136980374654134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7872, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [12/25] Loss: 0.10779053947100273, RECONS: 0.10737070269309558, DISTANCE: 0.4198370346656212
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7883, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [13/25] Loss: 0.10745375656655856, RECONS: 0.1070360222033092, DISTANCE: 0.41773486137390137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [14/25] Loss: 0.10732386261224747, RECONS: 0.10690183440844218, DISTANCE: 0.42202855745951334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9876, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [15/25] Loss: 0.10706194723024964, RECONS: 0.10663976240903139, DISTANCE: 0.4221851974725723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6207, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [16/25] Loss: 0.10669551570625867, RECONS: 0.10627551683608223, DISTANCE: 0.4199994171366972
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [17/25] Loss: 0.1065163802769449, RECONS: 0.10609911589158906, DISTANCE: 0.4172646999359131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [18/25] Loss: 0.1066124964701502, RECONS: 0.10619607450146425, DISTANCE: 0.4164223169025622
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [19/25] Loss: 0.10653691813349724, RECONS: 0.1061174988746643, DISTANCE: 0.4194195747375488
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [20/25] Loss: 0.10664483195259458, RECONS: 0.10622666492348626, DISTANCE: 0.4181672050839379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [21/25] Loss: 0.10645075345581229, RECONS: 0.10603179647163911, DISTANCE: 0.41895727677778766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [22/25] Loss: 0.10659534030634424, RECONS: 0.1061766970416774, DISTANCE: 0.4186436197032099
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [23/25] Loss: 0.10640625034769376, RECONS: 0.10598795271168153, DISTANCE: 0.4182981252670288
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[18/300] [24/25] Loss: 0.10631514996290208, RECONS: 0.10587980091571808, DISTANCE: 0.4353494071960449
Test[18/300] [0/2] Loss: 0.1271592527627945, RECONS: 0.12569986283779144, DISTANCE: 1.4593963623046875
Test[18/300] [1/2] Loss: 0.12640909105539322, RECONS: 0.12485338002443314, DISTANCE: 1.5557136535644531
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [0/25] Loss: 0.10533396899700165, RECONS: 0.10498525202274323, DISTANCE: 0.34871673583984375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [1/25] Loss: 0.1055537648499012, RECONS: 0.10519487410783768, DISTANCE: 0.35889148712158203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [2/25] Loss: 0.10540806253751119, RECONS: 0.10502986361583073, DISTANCE: 0.37819989522298175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9813, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [3/25] Loss: 0.10520394518971443, RECONS: 0.10482309572398663, DISTANCE: 0.3808509111404419
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9864, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [4/25] Loss: 0.10417787730693817, RECONS: 0.10379010736942292, DISTANCE: 0.3877707481384277
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9871, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [5/25] Loss: 0.10457233587900798, RECONS: 0.10418536762396495, DISTANCE: 0.3869686921437581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [6/25] Loss: 0.10438737060342516, RECONS: 0.10399966154779706, DISTANCE: 0.38770965167454313
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [7/25] Loss: 0.10502418037503958, RECONS: 0.10463923122733831, DISTANCE: 0.38494929671287537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [8/25] Loss: 0.10511457175016403, RECONS: 0.10472524331675635, DISTANCE: 0.38932885064019096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [9/25] Loss: 0.10512551292777061, RECONS: 0.10472064316272736, DISTANCE: 0.4048702359199524
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [10/25] Loss: 0.10519528863104907, RECONS: 0.10477537932721051, DISTANCE: 0.41990953141992743
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [11/25] Loss: 0.10496095009148121, RECONS: 0.10454554917911689, DISTANCE: 0.41540099183718365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7941, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [12/25] Loss: 0.10499462084128307, RECONS: 0.10458415058942941, DISTANCE: 0.4104703114582942
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9869, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [13/25] Loss: 0.10509790852665901, RECONS: 0.10468973432268415, DISTANCE: 0.408174387046269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7910, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [14/25] Loss: 0.10512783279021581, RECONS: 0.10472158739964167, DISTANCE: 0.40624531904856365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5955, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7914, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [15/25] Loss: 0.10533399833366275, RECONS: 0.1049283598549664, DISTANCE: 0.4056384488940239
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7913, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [16/25] Loss: 0.10532182937159258, RECONS: 0.10491211668533437, DISTANCE: 0.40971286857829375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7897, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [17/25] Loss: 0.10508038558893734, RECONS: 0.10467129076520602, DISTANCE: 0.40909483035405475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [18/25] Loss: 0.10501849063132938, RECONS: 0.10461034194419258, DISTANCE: 0.4081488847732544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9929, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [19/25] Loss: 0.10499227494001388, RECONS: 0.10458400696516038, DISTANCE: 0.40826804041862486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [20/25] Loss: 0.10511164189804167, RECONS: 0.10470425656863622, DISTANCE: 0.4073853208905175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9921, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [21/25] Loss: 0.10495087910782207, RECONS: 0.10454334183172746, DISTANCE: 0.40753715146671643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [22/25] Loss: 0.10482947042454845, RECONS: 0.10442514199277629, DISTANCE: 0.40432823740917706
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9770, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [23/25] Loss: 0.10491837095469236, RECONS: 0.10451372992247343, DISTANCE: 0.4046408285697301
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[19/300] [24/25] Loss: 0.10492831408977508, RECONS: 0.10450563162565231, DISTANCE: 0.4226823759078979
Test[19/300] [0/2] Loss: 0.12876999378204346, RECONS: 0.12717953324317932, DISTANCE: 1.5904560089111328
Test[19/300] [1/2] Loss: 0.1278427094221115, RECONS: 0.1260857842862606, DISTANCE: 1.7569241523742676
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [0/25] Loss: 0.10036532580852509, RECONS: 0.10002332180738449, DISTANCE: 0.3420020341873169
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [1/25] Loss: 0.10266965627670288, RECONS: 0.10229704529047012, DISTANCE: 0.3726118206977844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9924, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [2/25] Loss: 0.10216440508762996, RECONS: 0.10178630550702412, DISTANCE: 0.37809932231903076
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [3/25] Loss: 0.10283917933702469, RECONS: 0.10245193541049957, DISTANCE: 0.38724401593208313
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7941, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [4/25] Loss: 0.10280636847019195, RECONS: 0.10242682993412018, DISTANCE: 0.379538369178772
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [5/25] Loss: 0.10325750708580017, RECONS: 0.10286478449900945, DISTANCE: 0.39272286494572956
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9942, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [6/25] Loss: 0.10418808247361865, RECONS: 0.1037950622183936, DISTANCE: 0.3930202041353498
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [7/25] Loss: 0.10391623619943857, RECONS: 0.10352128371596336, DISTANCE: 0.3949524611234665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [8/25] Loss: 0.10378063387340969, RECONS: 0.10338175545136134, DISTANCE: 0.39887861410776776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [9/25] Loss: 0.10428129732608796, RECONS: 0.10388165190815926, DISTANCE: 0.39964569807052613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [10/25] Loss: 0.10436361215331337, RECONS: 0.10395925627513365, DISTANCE: 0.4043561653657393
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9902, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [11/25] Loss: 0.1046144391099612, RECONS: 0.10420769763489564, DISTANCE: 0.40674184759457904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6230, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [12/25] Loss: 0.1043192595243454, RECONS: 0.10391034357822858, DISTANCE: 0.40891650089850795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7923, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [13/25] Loss: 0.10409435310534068, RECONS: 0.10368395862834794, DISTANCE: 0.4103948473930359
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [14/25] Loss: 0.10409551411867142, RECONS: 0.10368428478638331, DISTANCE: 0.4112296978632609
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7911, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [15/25] Loss: 0.10403048759326339, RECONS: 0.10361650353297591, DISTANCE: 0.41398458927869797
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [16/25] Loss: 0.10424394335816889, RECONS: 0.10382874967420802, DISTANCE: 0.4151943641550401
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [17/25] Loss: 0.10430991773804028, RECONS: 0.10389314384924041, DISTANCE: 0.4167746040556166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9916, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [18/25] Loss: 0.1045030426037939, RECONS: 0.10408563402138259, DISTANCE: 0.41740925688492625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9891, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [19/25] Loss: 0.10433759763836861, RECONS: 0.10392326265573501, DISTANCE: 0.41433578729629517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5817, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [20/25] Loss: 0.10483563443024953, RECONS: 0.10442517413979485, DISTANCE: 0.4104610624767485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7884, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [21/25] Loss: 0.1047234172848138, RECONS: 0.10431455380537293, DISTANCE: 0.40886412967335095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7845, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [22/25] Loss: 0.10476568891950276, RECONS: 0.10435682632352995, DISTANCE: 0.40886311945707904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7844, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [23/25] Loss: 0.10476663305113713, RECONS: 0.10435816304137309, DISTANCE: 0.40847041209538776
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7818, device='cuda:0', grad_fn=<MeanBackward0>)
Train[20/300] [24/25] Loss: 0.1048604854941368, RECONS: 0.10444143325090409, DISTANCE: 0.41905258178710936
Test[20/300] [0/2] Loss: 0.12014621496200562, RECONS: 0.11976668238639832, DISTANCE: 0.3795347213745117
Test[20/300] [1/2] Loss: 0.119624562561512, RECONS: 0.1190265566110611, DISTANCE: 0.5980066061019897
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7824, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [0/25] Loss: 0.10562033951282501, RECONS: 0.10511811077594757, DISTANCE: 0.5022262334823608
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7836, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [1/25] Loss: 0.10369499772787094, RECONS: 0.10324893146753311, DISTANCE: 0.44606488943099976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7923, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [2/25] Loss: 0.1049596518278122, RECONS: 0.1045095647374789, DISTANCE: 0.45008718967437744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [3/25] Loss: 0.1053751353174448, RECONS: 0.10493635572493076, DISTANCE: 0.4387790858745575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [4/25] Loss: 0.10629312247037888, RECONS: 0.10584914833307266, DISTANCE: 0.4439738988876343
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [5/25] Loss: 0.10566541676719983, RECONS: 0.10521915679176648, DISTANCE: 0.44626035292943317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9802, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [6/25] Loss: 0.10477405680077416, RECONS: 0.1043378614953586, DISTANCE: 0.436195969581604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [7/25] Loss: 0.10449715983122587, RECONS: 0.10406283475458622, DISTANCE: 0.4343256205320358
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9942, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [8/25] Loss: 0.10500429984596041, RECONS: 0.10457254283958012, DISTANCE: 0.4317573838763767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9834, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [9/25] Loss: 0.10473738163709641, RECONS: 0.10430870354175567, DISTANCE: 0.4286787986755371
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9848, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [10/25] Loss: 0.10489341007037596, RECONS: 0.10446579077027061, DISTANCE: 0.4276201508261941
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [11/25] Loss: 0.1048670516659816, RECONS: 0.10443892516195774, DISTANCE: 0.42812706033388775
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [12/25] Loss: 0.10489603590506774, RECONS: 0.10447280968611057, DISTANCE: 0.4232267508139977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [13/25] Loss: 0.10482423646109444, RECONS: 0.10440300883991378, DISTANCE: 0.4212283662387303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [14/25] Loss: 0.10498702377080918, RECONS: 0.10456799815098444, DISTANCE: 0.41902619202931723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7811, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [15/25] Loss: 0.10483148973435163, RECONS: 0.1044119787402451, DISTANCE: 0.41951143741607666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7824, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [16/25] Loss: 0.10449942814953186, RECONS: 0.10408315062522888, DISTANCE: 0.4162779836093678
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9905, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7876, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [17/25] Loss: 0.10446837916970253, RECONS: 0.10405363390843074, DISTANCE: 0.4147458208931817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7929, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [18/25] Loss: 0.10435418941472706, RECONS: 0.10394011712387989, DISTANCE: 0.41407280846645955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [19/25] Loss: 0.10462755598127842, RECONS: 0.10421141386032104, DISTANCE: 0.4161426305770874
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [20/25] Loss: 0.1045203726916086, RECONS: 0.10410044413237345, DISTANCE: 0.4199291637965611
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [21/25] Loss: 0.10453073578802022, RECONS: 0.104111697524786, DISTANCE: 0.4190388701178811
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [22/25] Loss: 0.10442906909662744, RECONS: 0.10401117639697116, DISTANCE: 0.41789343046105426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9924, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [23/25] Loss: 0.10434869645784299, RECONS: 0.10393271874636412, DISTANCE: 0.4159783720970154
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6303, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[21/300] [24/25] Loss: 0.10401630282402038, RECONS: 0.10359045058488846, DISTANCE: 0.4258528518676758
Test[21/300] [0/2] Loss: 0.12094090133905411, RECONS: 0.12032534927129745, DISTANCE: 0.6155537366867065
Test[21/300] [1/2] Loss: 0.12028710544109344, RECONS: 0.11938678473234177, DISTANCE: 0.9003214836120605
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [0/25] Loss: 0.10369040817022324, RECONS: 0.1033153384923935, DISTANCE: 0.37506723403930664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [1/25] Loss: 0.10307281464338303, RECONS: 0.10270114243030548, DISTANCE: 0.37167060375213623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [2/25] Loss: 0.10325998564561208, RECONS: 0.10288318991661072, DISTANCE: 0.3767935434977214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [3/25] Loss: 0.10343454778194427, RECONS: 0.10302337072789669, DISTANCE: 0.411175012588501
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [4/25] Loss: 0.10350025743246079, RECONS: 0.10309363305568695, DISTANCE: 0.40662326812744143
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5905, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [5/25] Loss: 0.10477094600598018, RECONS: 0.1043616992731889, DISTANCE: 0.40924525260925293
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [6/25] Loss: 0.10477291899068016, RECONS: 0.10436929443052836, DISTANCE: 0.40362375123160227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [7/25] Loss: 0.1049498887732625, RECONS: 0.10454526823014021, DISTANCE: 0.40462014079093933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7888, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [8/25] Loss: 0.10507012655337651, RECONS: 0.10465825183524026, DISTANCE: 0.4118740028805203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9864, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7915, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [9/25] Loss: 0.10470446571707726, RECONS: 0.10429487898945808, DISTANCE: 0.4095857381820679
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [10/25] Loss: 0.10487598180770874, RECONS: 0.10446144843643362, DISTANCE: 0.41453259641473944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [11/25] Loss: 0.10476524382829666, RECONS: 0.10435027815401554, DISTANCE: 0.4149652123451233
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [12/25] Loss: 0.10475678054186013, RECONS: 0.10433869465039326, DISTANCE: 0.4180854834043063
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [13/25] Loss: 0.10456018948129245, RECONS: 0.10413940197655133, DISTANCE: 0.42078728335244314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [14/25] Loss: 0.104579725364844, RECONS: 0.1041596362988154, DISTANCE: 0.4200886249542236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [15/25] Loss: 0.10435507586225867, RECONS: 0.1039375402033329, DISTANCE: 0.41753503680229187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [16/25] Loss: 0.10425454334301107, RECONS: 0.10383328576298322, DISTANCE: 0.4212571943507475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [17/25] Loss: 0.10444852461417516, RECONS: 0.10402926926811536, DISTANCE: 0.419254998366038
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7907, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [18/25] Loss: 0.10445239473330348, RECONS: 0.104032727056428, DISTANCE: 0.4196675388436568
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7796, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [19/25] Loss: 0.10429206714034081, RECONS: 0.10387090183794498, DISTANCE: 0.42116512060165406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7822, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [20/25] Loss: 0.10441496826353527, RECONS: 0.10399589900459562, DISTANCE: 0.41906902335938956
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7817, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [21/25] Loss: 0.1043520678173412, RECONS: 0.10393673147667538, DISTANCE: 0.4153362675146623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9960, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7790, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [22/25] Loss: 0.10417054885107538, RECONS: 0.10375639569500218, DISTANCE: 0.41415303168089496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [23/25] Loss: 0.10414701700210571, RECONS: 0.1037338562309742, DISTANCE: 0.4131605178117752
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[22/300] [24/25] Loss: 0.10402503430843353, RECONS: 0.10359428644180298, DISTANCE: 0.4307475328445435
Test[22/300] [0/2] Loss: 0.12341847270727158, RECONS: 0.12236300110816956, DISTANCE: 1.055467963218689
Test[22/300] [1/2] Loss: 0.12423808500170708, RECONS: 0.1228468082845211, DISTANCE: 1.3912760615348816
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [0/25] Loss: 0.10351240634918213, RECONS: 0.10313635319471359, DISTANCE: 0.376056432723999
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9766, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [1/25] Loss: 0.10316797345876694, RECONS: 0.10279778763651848, DISTANCE: 0.3701881170272827
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6209, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [2/25] Loss: 0.1016655092438062, RECONS: 0.10128900905450185, DISTANCE: 0.37650179862976074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [3/25] Loss: 0.10273510031402111, RECONS: 0.10235803946852684, DISTANCE: 0.3770621716976166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [4/25] Loss: 0.10206128060817718, RECONS: 0.1016910880804062, DISTANCE: 0.37019321918487547
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9862, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [5/25] Loss: 0.10263389348983765, RECONS: 0.102267121275266, DISTANCE: 0.3667726318041484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [6/25] Loss: 0.10252660406487328, RECONS: 0.1021459134561675, DISTANCE: 0.38069069385528564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7755, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [7/25] Loss: 0.10264317784458399, RECONS: 0.10226570628583431, DISTANCE: 0.37747128307819366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7768, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [8/25] Loss: 0.10263619985845354, RECONS: 0.10226024190584819, DISTANCE: 0.3759577406777276
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9888, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7831, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [9/25] Loss: 0.10301476493477821, RECONS: 0.10264149457216262, DISTANCE: 0.37326985597610474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7791, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [10/25] Loss: 0.10303364355455745, RECONS: 0.10265750370242378, DISTANCE: 0.3761394349011508
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9983, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7874, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [11/25] Loss: 0.10291973253091176, RECONS: 0.10254527628421783, DISTANCE: 0.3744557797908783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9862, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [12/25] Loss: 0.10286366652983886, RECONS: 0.10248917971666043, DISTANCE: 0.3744864555505606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6242, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [13/25] Loss: 0.10236649960279465, RECONS: 0.10198029609663146, DISTANCE: 0.3862032038824899
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [14/25] Loss: 0.10273142407337825, RECONS: 0.10234601646661759, DISTANCE: 0.38540743192036947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9638, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [15/25] Loss: 0.10281503992155194, RECONS: 0.10243228357285261, DISTANCE: 0.382756307721138
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9784, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [16/25] Loss: 0.10289015357985216, RECONS: 0.10250749482828028, DISTANCE: 0.3826585236717673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [17/25] Loss: 0.10272331204679278, RECONS: 0.10234225293000539, DISTANCE: 0.3810589710871379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7943, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [18/25] Loss: 0.10253856527177911, RECONS: 0.10215939110831211, DISTANCE: 0.37917409445110123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7896, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [19/25] Loss: 0.10250500589609146, RECONS: 0.10212526097893715, DISTANCE: 0.37974477410316465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7855, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [20/25] Loss: 0.10255567658515204, RECONS: 0.10217473797854923, DISTANCE: 0.38093847320193336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9883, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7872, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [21/25] Loss: 0.10258156264370138, RECONS: 0.10220121253620494, DISTANCE: 0.3803500370545821
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7778, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [22/25] Loss: 0.10252744250971338, RECONS: 0.10214684514895729, DISTANCE: 0.38059725968734076
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5956, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7844, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [23/25] Loss: 0.10267844268431266, RECONS: 0.10229645483195782, DISTANCE: 0.38198784987131756
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6231, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7864, device='cuda:0', grad_fn=<MeanBackward0>)
Train[23/300] [24/25] Loss: 0.10243615239858628, RECONS: 0.1020392543077469, DISTANCE: 0.3968981170654297
Test[23/300] [0/2] Loss: 0.12152110785245895, RECONS: 0.12040755152702332, DISTANCE: 1.1135536432266235
Test[23/300] [1/2] Loss: 0.12064491957426071, RECONS: 0.11941511556506157, DISTANCE: 1.2298038601875305
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [0/25] Loss: 0.1014382615685463, RECONS: 0.10107281059026718, DISTANCE: 0.3654518127441406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [1/25] Loss: 0.09979425370693207, RECONS: 0.09943916648626328, DISTANCE: 0.3550891876220703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9662, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [2/25] Loss: 0.10038726528485616, RECONS: 0.1000254675745964, DISTANCE: 0.3618001937866211
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9782, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [3/25] Loss: 0.10028609074652195, RECONS: 0.09991425089538097, DISTANCE: 0.37184202671051025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9888, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [4/25] Loss: 0.10094392001628875, RECONS: 0.1005616918206215, DISTANCE: 0.38222997188568114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [5/25] Loss: 0.10082455848654111, RECONS: 0.10044057667255402, DISTANCE: 0.3839827974637349
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [6/25] Loss: 0.10072843517575945, RECONS: 0.10034408633198057, DISTANCE: 0.3843498059681484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9680, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [7/25] Loss: 0.1007484681904316, RECONS: 0.10036349855363369, DISTANCE: 0.3849705904722214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7967, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [8/25] Loss: 0.10100100023878945, RECONS: 0.10061536977688472, DISTANCE: 0.3856309652328491
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7847, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [9/25] Loss: 0.10070743262767792, RECONS: 0.10031292960047722, DISTANCE: 0.39450381994247435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7867, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [10/25] Loss: 0.10075955905697563, RECONS: 0.10036842050877484, DISTANCE: 0.3911394097588279
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7816, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [11/25] Loss: 0.10067236299316089, RECONS: 0.10028259828686714, DISTANCE: 0.38976526260375977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7843, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [12/25] Loss: 0.1006218882707449, RECONS: 0.10022950860170218, DISTANCE: 0.3923801642197829
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7858, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [13/25] Loss: 0.10080282496554512, RECONS: 0.10041149705648422, DISTANCE: 0.39132813044956755
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [14/25] Loss: 0.10076713512341182, RECONS: 0.10037708928187689, DISTANCE: 0.390046215057373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [15/25] Loss: 0.10088987555354834, RECONS: 0.10050001600757241, DISTANCE: 0.3898600935935974
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [16/25] Loss: 0.10091464878881679, RECONS: 0.10052616587456535, DISTANCE: 0.38848355237175436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7921, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [17/25] Loss: 0.10080795776512888, RECONS: 0.10042142495512962, DISTANCE: 0.3865334192911784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [18/25] Loss: 0.10094128274603893, RECONS: 0.10055644221996006, DISTANCE: 0.38484091507761103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9738, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [19/25] Loss: 0.10068369768559933, RECONS: 0.10029798932373524, DISTANCE: 0.3857085704803467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [20/25] Loss: 0.1007262450598535, RECONS: 0.10033903412875675, DISTANCE: 0.38721100489298504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9730, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.8031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [21/25] Loss: 0.1008342717858878, RECONS: 0.10045003620061008, DISTANCE: 0.3842355121265758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9640, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [22/25] Loss: 0.10092274520708167, RECONS: 0.10053958257903224, DISTANCE: 0.38316243627797003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7909, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [23/25] Loss: 0.10091500543057919, RECONS: 0.1005329384158055, DISTANCE: 0.38206682602564496
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7858, device='cuda:0', grad_fn=<MeanBackward0>)
Train[24/300] [24/25] Loss: 0.10075602859258652, RECONS: 0.10035146653652191, DISTANCE: 0.4045619583129883
Test[24/300] [0/2] Loss: 0.11994421482086182, RECONS: 0.1186259388923645, DISTANCE: 1.3182786703109741
Test[24/300] [1/2] Loss: 0.11962826177477837, RECONS: 0.11807569861412048, DISTANCE: 1.5525662302970886
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9924, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7824, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [0/25] Loss: 0.09853756427764893, RECONS: 0.0981772243976593, DISTANCE: 0.36034297943115234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7783, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [1/25] Loss: 0.09929799661040306, RECONS: 0.09895480424165726, DISTANCE: 0.3431941866874695
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7778, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [2/25] Loss: 0.09930979460477829, RECONS: 0.09896574914455414, DISTANCE: 0.3440465529759725
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7834, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [3/25] Loss: 0.09977344237267971, RECONS: 0.0994141437113285, DISTANCE: 0.35929951071739197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7834, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [4/25] Loss: 0.09968977868556976, RECONS: 0.09932319670915604, DISTANCE: 0.3665820837020874
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [5/25] Loss: 0.09903434539834659, RECONS: 0.09867444261908531, DISTANCE: 0.35990307728449505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [6/25] Loss: 0.0996167425598417, RECONS: 0.09924935443060738, DISTANCE: 0.36738836765289307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9684, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [7/25] Loss: 0.09954491257667542, RECONS: 0.0991752203553915, DISTANCE: 0.3696926683187485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [8/25] Loss: 0.09914231134785546, RECONS: 0.0987697293361028, DISTANCE: 0.3725825283262465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [9/25] Loss: 0.09926551729440689, RECONS: 0.09889362752437592, DISTANCE: 0.3718900322914124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5938, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [10/25] Loss: 0.09979528730565851, RECONS: 0.09941934455524791, DISTANCE: 0.37594311887567694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7908, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [11/25] Loss: 0.09961923646430175, RECONS: 0.09924774244427681, DISTANCE: 0.37149447202682495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7823, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [12/25] Loss: 0.09953681838053924, RECONS: 0.09916756359430459, DISTANCE: 0.3692551576174222
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7738, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [13/25] Loss: 0.09935357049107552, RECONS: 0.09898469597101212, DISTANCE: 0.36887472016470774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7740, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [14/25] Loss: 0.0995109016696612, RECONS: 0.09914403806130091, DISTANCE: 0.3668638547261556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7758, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [15/25] Loss: 0.09940182324498892, RECONS: 0.09903261391445994, DISTANCE: 0.36920952796936035
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7815, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [16/25] Loss: 0.09941500337684855, RECONS: 0.09904608875513077, DISTANCE: 0.3689147163839901
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7789, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [17/25] Loss: 0.09931826839844386, RECONS: 0.09894829160637325, DISTANCE: 0.36997679869333905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9777, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7869, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [18/25] Loss: 0.09927615170416079, RECONS: 0.09890392697171162, DISTANCE: 0.37222461951406377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9802, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7878, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [19/25] Loss: 0.09909149743616581, RECONS: 0.09872171320021153, DISTANCE: 0.3697842240333557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7915, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [20/25] Loss: 0.09903697704985029, RECONS: 0.09866750098410107, DISTANCE: 0.36947613670712426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6206, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7920, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [21/25] Loss: 0.09873655302958055, RECONS: 0.09836792268536308, DISTANCE: 0.36863055554303253
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9921, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [22/25] Loss: 0.09882115313540334, RECONS: 0.09845301508903503, DISTANCE: 0.36813814225404157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9638, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7921, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [23/25] Loss: 0.09860414608071248, RECONS: 0.09823567482332389, DISTANCE: 0.3684713691473007
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6245, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7818, device='cuda:0', grad_fn=<MeanBackward0>)
Train[25/300] [24/25] Loss: 0.09852968424558639, RECONS: 0.09814988523721695, DISTANCE: 0.3797990655899048
Test[25/300] [0/2] Loss: 0.1157149225473404, RECONS: 0.11490138620138168, DISTANCE: 0.81353759765625
Test[25/300] [1/2] Loss: 0.11567483469843864, RECONS: 0.11459433659911156, DISTANCE: 1.0804972052574158
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7898, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [0/25] Loss: 0.09683289378881454, RECONS: 0.0964023694396019, DISTANCE: 0.4305264949798584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9900, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7915, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [1/25] Loss: 0.09561057761311531, RECONS: 0.0952099896967411, DISTANCE: 0.40058982372283936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [2/25] Loss: 0.09561026841402054, RECONS: 0.095213217039903, DISTANCE: 0.3970518112182617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9802, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [3/25] Loss: 0.0965752899646759, RECONS: 0.09618538618087769, DISTANCE: 0.3899042010307312
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7943, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [4/25] Loss: 0.09659850597381592, RECONS: 0.0962159663438797, DISTANCE: 0.38254008293151853
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [5/25] Loss: 0.0968273642162482, RECONS: 0.09645141909519832, DISTANCE: 0.37594489256540936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9827, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7830, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [6/25] Loss: 0.09678663845573153, RECONS: 0.09641210096223014, DISTANCE: 0.37453780855451313
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7813, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [7/25] Loss: 0.0966891273856163, RECONS: 0.0963160190731287, DISTANCE: 0.3731089234352112
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9803, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7824, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [8/25] Loss: 0.09648728453450733, RECONS: 0.09611597739987904, DISTANCE: 0.37130774392022026
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7838, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [9/25] Loss: 0.09637185856699944, RECONS: 0.09600283429026604, DISTANCE: 0.36902484893798826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7885, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [10/25] Loss: 0.09676968712698329, RECONS: 0.09639999134974046, DISTANCE: 0.36969661712646484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7851, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [11/25] Loss: 0.09672288596630096, RECONS: 0.09635234251618385, DISTANCE: 0.3705441951751709
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9824, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7892, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [12/25] Loss: 0.09681076957629277, RECONS: 0.09644311093367063, DISTANCE: 0.36765928451831525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9767, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7891, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [13/25] Loss: 0.09674919875604766, RECONS: 0.09637485976730074, DISTANCE: 0.3743393336023603
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [14/25] Loss: 0.09686479916175207, RECONS: 0.09649070749680201, DISTANCE: 0.37409215768178306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7846, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [15/25] Loss: 0.09695632383227348, RECONS: 0.09658079175278544, DISTANCE: 0.3755323961377144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9844, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7819, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [16/25] Loss: 0.0970500168554923, RECONS: 0.09667510232504677, DISTANCE: 0.3749146952348597
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7777, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [17/25] Loss: 0.0970694695909818, RECONS: 0.09669233196311527, DISTANCE: 0.377137733830346
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7808, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [18/25] Loss: 0.09717084977187608, RECONS: 0.09679579891656574, DISTANCE: 0.3750511156885247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9719, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7764, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [19/25] Loss: 0.09706744439899921, RECONS: 0.09669320993125438, DISTANCE: 0.37423463463783263
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7767, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [20/25] Loss: 0.09683441228809811, RECONS: 0.09646057621354148, DISTANCE: 0.37383616538274855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7810, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [21/25] Loss: 0.096837213432247, RECONS: 0.09646501629190012, DISTANCE: 0.37219731374220416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7811, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [22/25] Loss: 0.09678831372572028, RECONS: 0.09641462272923926, DISTANCE: 0.37369129968726117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [23/25] Loss: 0.0968062278504173, RECONS: 0.09643346909433603, DISTANCE: 0.37275903423627216
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7896, device='cuda:0', grad_fn=<MeanBackward0>)
Train[26/300] [24/25] Loss: 0.09679814726114273, RECONS: 0.09640644609928131, DISTANCE: 0.39170133113861083
Test[26/300] [0/2] Loss: 0.11190657317638397, RECONS: 0.11145403236150742, DISTANCE: 0.4525405168533325
Test[26/300] [1/2] Loss: 0.11272455751895905, RECONS: 0.11194520443677902, DISTANCE: 0.7793533802032471
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7924, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [0/25] Loss: 0.09776059538125992, RECONS: 0.09735598415136337, DISTANCE: 0.40460991859436035
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9869, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [1/25] Loss: 0.09594583511352539, RECONS: 0.09556179493665695, DISTANCE: 0.3840397596359253
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7909, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [2/25] Loss: 0.09553655982017517, RECONS: 0.09516108284393947, DISTANCE: 0.3754764397939046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7875, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [3/25] Loss: 0.09580659866333008, RECONS: 0.09543446637690067, DISTANCE: 0.37213134765625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7797, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [4/25] Loss: 0.0958729326725006, RECONS: 0.09550326317548752, DISTANCE: 0.3696680784225464
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9760, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7756, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [5/25] Loss: 0.09599441041549046, RECONS: 0.09562911962469418, DISTANCE: 0.3652900656064351
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7763, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [6/25] Loss: 0.09587354851620537, RECONS: 0.09550770904336657, DISTANCE: 0.365838817187718
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7770, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [7/25] Loss: 0.09541831724345684, RECONS: 0.09504414908587933, DISTANCE: 0.3741678148508072
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7766, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [8/25] Loss: 0.0955662147866355, RECONS: 0.09519392748673756, DISTANCE: 0.3722868098153008
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7771, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [9/25] Loss: 0.09549348652362824, RECONS: 0.09512641206383705, DISTANCE: 0.3670738101005554
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9862, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7820, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [10/25] Loss: 0.09525881436738101, RECONS: 0.09488732503219084, DISTANCE: 0.37148902632973413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7798, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [11/25] Loss: 0.09553687088191509, RECONS: 0.09516491244236629, DISTANCE: 0.3719579180081685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [12/25] Loss: 0.09545821925768486, RECONS: 0.09508543060376094, DISTANCE: 0.37278812665205735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7788, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [13/25] Loss: 0.09570954527173724, RECONS: 0.09533913327114922, DISTANCE: 0.37041172810963224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7770, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [14/25] Loss: 0.09556957830985387, RECONS: 0.09518882135550182, DISTANCE: 0.3807567437489828
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7776, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [15/25] Loss: 0.09552523866295815, RECONS: 0.09514585975557566, DISTANCE: 0.3793787285685539
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7780, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [16/25] Loss: 0.0954413685728522, RECONS: 0.09506414830684662, DISTANCE: 0.3772201748455272
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9836, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7822, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [17/25] Loss: 0.09527635615732935, RECONS: 0.09489848920040661, DISTANCE: 0.3778668973180983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7842, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [18/25] Loss: 0.09518998978953612, RECONS: 0.09481357234088998, DISTANCE: 0.37641735453354686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7894, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [19/25] Loss: 0.09509819261729717, RECONS: 0.09472402110695839, DISTANCE: 0.3741712987422943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7892, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [20/25] Loss: 0.09528806841089613, RECONS: 0.0949153978200186, DISTANCE: 0.3726704063869658
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7909, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [21/25] Loss: 0.09524757211858575, RECONS: 0.09487612308426337, DISTANCE: 0.3714488690549677
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7903, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [22/25] Loss: 0.09517993680808855, RECONS: 0.09480693191289902, DISTANCE: 0.3730047474736753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7871, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [23/25] Loss: 0.09525813069194555, RECONS: 0.09488551194469134, DISTANCE: 0.37261863052845
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5931, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7860, device='cuda:0', grad_fn=<MeanBackward0>)
Train[27/300] [24/25] Loss: 0.0955892676115036, RECONS: 0.09520507991313934, DISTANCE: 0.3841874551773071
Test[27/300] [0/2] Loss: 0.1125485897064209, RECONS: 0.1120213195681572, DISTANCE: 0.5272727012634277
Test[27/300] [1/2] Loss: 0.11220481246709824, RECONS: 0.11132219061255455, DISTANCE: 0.8826234936714172
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7759, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [0/25] Loss: 0.09488078951835632, RECONS: 0.09454693645238876, DISTANCE: 0.33385324478149414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7704, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [1/25] Loss: 0.09556806832551956, RECONS: 0.09523490443825722, DISTANCE: 0.33316540718078613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7717, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [2/25] Loss: 0.09540827572345734, RECONS: 0.09506095449129741, DISTANCE: 0.3473234574000041
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7761, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [3/25] Loss: 0.09472008608281612, RECONS: 0.09435988031327724, DISTANCE: 0.3602081537246704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9681, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7782, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [4/25] Loss: 0.09494981616735458, RECONS: 0.09458607882261276, DISTANCE: 0.3637393474578857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7800, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [5/25] Loss: 0.0946771390736103, RECONS: 0.09431463852524757, DISTANCE: 0.3625018199284871
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9766, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7788, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [6/25] Loss: 0.0949917414358684, RECONS: 0.09463300662381309, DISTANCE: 0.35873634474618094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6223, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7768, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [7/25] Loss: 0.09444812964648008, RECONS: 0.09408398810774088, DISTANCE: 0.3641428053379059
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9760, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7814, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [8/25] Loss: 0.09439451081885232, RECONS: 0.09402209603124195, DISTANCE: 0.37241625785827637
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7855, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [9/25] Loss: 0.0944164164364338, RECONS: 0.09404163435101509, DISTANCE: 0.3747836112976074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7811, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [10/25] Loss: 0.09434884177012877, RECONS: 0.09397833658890291, DISTANCE: 0.37050637331875885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7796, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [11/25] Loss: 0.09450921292106311, RECONS: 0.09413693907360236, DISTANCE: 0.3722750743230184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7794, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [12/25] Loss: 0.09451825400957695, RECONS: 0.09414180425497201, DISTANCE: 0.37645097879263073
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7792, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [13/25] Loss: 0.09449219916548048, RECONS: 0.09411093379770007, DISTANCE: 0.3812663895743234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7794, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [14/25] Loss: 0.09436581085125605, RECONS: 0.09398561318715414, DISTANCE: 0.38019866943359376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9732, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7804, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [15/25] Loss: 0.09424127312377095, RECONS: 0.09386127069592476, DISTANCE: 0.38000357151031494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7893, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [16/25] Loss: 0.09427266261156868, RECONS: 0.09389262646436691, DISTANCE: 0.3800371674930348
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7944, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [17/25] Loss: 0.09453374519944191, RECONS: 0.09415558932556047, DISTANCE: 0.37815696001052856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9613, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7875, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [18/25] Loss: 0.09468559411011244, RECONS: 0.09430675953626633, DISTANCE: 0.37883555261712326
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9713, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7774, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [19/25] Loss: 0.09462430737912655, RECONS: 0.09424774535000324, DISTANCE: 0.37656292915344236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7726, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [20/25] Loss: 0.0945617634625662, RECONS: 0.09418539915766035, DISTANCE: 0.37636509395781015
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9788, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7721, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [21/25] Loss: 0.09442479603669861, RECONS: 0.09404976056380705, DISTANCE: 0.3750362612984397
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7728, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [22/25] Loss: 0.09428636308597482, RECONS: 0.09391084086635838, DISTANCE: 0.3755231214606244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7873, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [23/25] Loss: 0.09430723823606968, RECONS: 0.09393236165245374, DISTANCE: 0.37487753729025525
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7865, device='cuda:0', grad_fn=<MeanBackward0>)
Train[28/300] [24/25] Loss: 0.09426854193210601, RECONS: 0.09387972265481949, DISTANCE: 0.38882007598876955
Test[28/300] [0/2] Loss: 0.11024350672960281, RECONS: 0.1096438392996788, DISTANCE: 0.5996642112731934
Test[28/300] [1/2] Loss: 0.11212589591741562, RECONS: 0.11091671511530876, DISTANCE: 1.2091774940490723
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [0/25] Loss: 0.0941828191280365, RECONS: 0.09382941573858261, DISTANCE: 0.3534005880355835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [1/25] Loss: 0.09422192722558975, RECONS: 0.09385473281145096, DISTANCE: 0.36719346046447754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5917, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9773, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7882, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [2/25] Loss: 0.09553622702757518, RECONS: 0.09517186880111694, DISTANCE: 0.36435683568318683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6232, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9651, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7760, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [3/25] Loss: 0.0939590334892273, RECONS: 0.09359408915042877, DISTANCE: 0.3649442195892334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9694, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7775, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [4/25] Loss: 0.09360172897577286, RECONS: 0.09324292838573456, DISTANCE: 0.35880022048950194
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9725, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7701, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [5/25] Loss: 0.09350220486521721, RECONS: 0.09314478933811188, DISTANCE: 0.3574148217837016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7753, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [6/25] Loss: 0.09331780991383962, RECONS: 0.09295845244612012, DISTANCE: 0.359357374055045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7803, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [7/25] Loss: 0.0934967054054141, RECONS: 0.09313124418258667, DISTANCE: 0.36546142399311066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9766, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7823, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [8/25] Loss: 0.093753881752491, RECONS: 0.0933913638194402, DISTANCE: 0.36251793967352974
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7800, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [9/25] Loss: 0.09345343634486199, RECONS: 0.0930904932320118, DISTANCE: 0.3629433989524841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9678, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7844, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [10/25] Loss: 0.09317942573265596, RECONS: 0.09281474622813138, DISTANCE: 0.3646797483617609
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9782, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [11/25] Loss: 0.09328691971798737, RECONS: 0.09292131786545117, DISTANCE: 0.3656022747357686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7857, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [12/25] Loss: 0.09340503811836243, RECONS: 0.09303730611617748, DISTANCE: 0.367732442342318
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7804, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [13/25] Loss: 0.09348002129367419, RECONS: 0.09310302351202283, DISTANCE: 0.37699793917792185
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7758, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [14/25] Loss: 0.09316525161266327, RECONS: 0.09278568724791209, DISTANCE: 0.37956472237904865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9649, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7738, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [15/25] Loss: 0.09325479436665773, RECONS: 0.092873758636415, DISTANCE: 0.3810359388589859
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7747, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [16/25] Loss: 0.09309471705380608, RECONS: 0.09271151440985062, DISTANCE: 0.3832029595094569
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7763, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [17/25] Loss: 0.0930179465148184, RECONS: 0.09263366626368628, DISTANCE: 0.3842804299460517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7809, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [18/25] Loss: 0.09288713139922995, RECONS: 0.09250269908654063, DISTANCE: 0.3844325793416877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9720, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7816, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [19/25] Loss: 0.09285743571817875, RECONS: 0.0924715518951416, DISTANCE: 0.3858841240406036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5960, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9349, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7908, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [20/25] Loss: 0.09309731246460051, RECONS: 0.09271322474593208, DISTANCE: 0.38408805642809185
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9760, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7870, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [21/25] Loss: 0.0930156684057279, RECONS: 0.09263234517791054, DISTANCE: 0.383323533968492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7824, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [22/25] Loss: 0.0929942487374596, RECONS: 0.09261137862568317, DISTANCE: 0.3828702905903692
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7802, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [23/25] Loss: 0.0931687190507849, RECONS: 0.09278610938539107, DISTANCE: 0.3826097249984741
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6253, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7700, device='cuda:0', grad_fn=<MeanBackward0>)
Train[29/300] [24/25] Loss: 0.09302467316389083, RECONS: 0.09262605488300324, DISTANCE: 0.39861843585968015
Test[29/300] [0/2] Loss: 0.10956505686044693, RECONS: 0.10886450856924057, DISTANCE: 0.7005505561828613
Test[29/300] [1/2] Loss: 0.10867990925908089, RECONS: 0.10765818133950233, DISTANCE: 1.0217273235321045
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7703, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [0/25] Loss: 0.09317837655544281, RECONS: 0.09277065843343735, DISTANCE: 0.40771484375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9746, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7718, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [1/25] Loss: 0.09207131713628769, RECONS: 0.09167739376425743, DISTANCE: 0.3939201235771179
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9827, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7659, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [2/25] Loss: 0.09194723516702652, RECONS: 0.09156285226345062, DISTANCE: 0.38438117504119873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9715, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7738, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [3/25] Loss: 0.09129388630390167, RECONS: 0.09090379253029823, DISTANCE: 0.39009231328964233
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9867, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7773, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [4/25] Loss: 0.09151537269353867, RECONS: 0.09112719595432281, DISTANCE: 0.3881749391555786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7856, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [5/25] Loss: 0.09249137217799823, RECONS: 0.09209046761194865, DISTANCE: 0.4009024500846863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7858, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [6/25] Loss: 0.09302123210259847, RECONS: 0.09262663445302419, DISTANCE: 0.39459567410605295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5891, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9602, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7790, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [7/25] Loss: 0.0937790609896183, RECONS: 0.09338566195219755, DISTANCE: 0.3933969587087631
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7704, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [8/25] Loss: 0.09343459208806355, RECONS: 0.09304099695550071, DISTANCE: 0.3935936424467299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9660, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7693, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [9/25] Loss: 0.09327838271856308, RECONS: 0.09288842156529427, DISTANCE: 0.3899595856666565
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7695, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [10/25] Loss: 0.09304542568596927, RECONS: 0.09265965832905336, DISTANCE: 0.3857662569392811
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9725, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7787, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [11/25] Loss: 0.09322586717704932, RECONS: 0.09284211198488872, DISTANCE: 0.3837543527285258
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9770, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7836, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [12/25] Loss: 0.09327494181119479, RECONS: 0.09289418160915375, DISTANCE: 0.38075918417710525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9669, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7854, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [13/25] Loss: 0.09349845988409859, RECONS: 0.09312070693288531, DISTANCE: 0.37775211674826487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9773, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7854, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [14/25] Loss: 0.09355517129103343, RECONS: 0.09318075527747473, DISTANCE: 0.3744153181711833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9759, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7819, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [15/25] Loss: 0.09333149017766118, RECONS: 0.09295968431979418, DISTANCE: 0.3718051463365555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7778, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [16/25] Loss: 0.0931671406416332, RECONS: 0.09279594175955828, DISTANCE: 0.3711981913622688
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7754, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [17/25] Loss: 0.09295464638206694, RECONS: 0.09258497920301226, DISTANCE: 0.36966649691263836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7758, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [18/25] Loss: 0.09287364310339878, RECONS: 0.09250353472797494, DISTANCE: 0.3701078766270688
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7800, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [19/25] Loss: 0.09289650470018387, RECONS: 0.09252786822617054, DISTANCE: 0.3686359167098999
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9767, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7786, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [20/25] Loss: 0.0927634338537852, RECONS: 0.09239448784362703, DISTANCE: 0.3689456099555606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9631, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7850, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [21/25] Loss: 0.09272057495333931, RECONS: 0.09235078604383902, DISTANCE: 0.3697885979305614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7828, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [22/25] Loss: 0.09268515330293904, RECONS: 0.09231685717468677, DISTANCE: 0.36829591315725574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7843, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [23/25] Loss: 0.09274906727174918, RECONS: 0.09237907671680053, DISTANCE: 0.3699903041124344
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9461, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7845, device='cuda:0', grad_fn=<MeanBackward0>)
Train[30/300] [24/25] Loss: 0.09258577853441238, RECONS: 0.09220361828804016, DISTANCE: 0.38216013431549073
Test[30/300] [0/2] Loss: 0.10789146274328232, RECONS: 0.10693474858999252, DISTANCE: 0.9567145109176636
Test[30/300] [1/2] Loss: 0.10907623916864395, RECONS: 0.10764270275831223, DISTANCE: 1.433536946773529
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9680, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7813, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [0/25] Loss: 0.09300188720226288, RECONS: 0.09258117526769638, DISTANCE: 0.420712947845459
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9816, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7775, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [1/25] Loss: 0.09047751873731613, RECONS: 0.09006186947226524, DISTANCE: 0.4156495928764343
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7763, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [2/25] Loss: 0.09169959276914597, RECONS: 0.0913088967402776, DISTANCE: 0.3906962474187215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7771, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [3/25] Loss: 0.09142113476991653, RECONS: 0.09103458561003208, DISTANCE: 0.3865486681461334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9685, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7804, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [4/25] Loss: 0.09154234379529953, RECONS: 0.09113892763853074, DISTANCE: 0.4034162759780884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7802, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [5/25] Loss: 0.09178608655929565, RECONS: 0.09139025832215945, DISTANCE: 0.3958280285199483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7795, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [6/25] Loss: 0.09173739169325147, RECONS: 0.0913423438157354, DISTANCE: 0.3950474091938564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9806, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7789, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [7/25] Loss: 0.09142444003373384, RECONS: 0.09103256743401289, DISTANCE: 0.39187222719192505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9719, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7806, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [8/25] Loss: 0.09133360617690617, RECONS: 0.09094684488243526, DISTANCE: 0.3867606586880154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5941, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7860, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [9/25] Loss: 0.09193602055311204, RECONS: 0.09154507964849472, DISTANCE: 0.39094064235687254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9703, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7818, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [10/25] Loss: 0.0917535505511544, RECONS: 0.09136463566259904, DISTANCE: 0.3889149102297696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5932, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7777, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [11/25] Loss: 0.09201072218517463, RECONS: 0.09162422021230061, DISTANCE: 0.3865021268526713
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7722, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [12/25] Loss: 0.0919686366732304, RECONS: 0.09158278657839848, DISTANCE: 0.38585033783545863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7653, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [13/25] Loss: 0.09207740585718836, RECONS: 0.09169129388672966, DISTANCE: 0.3861123664038522
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7648, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [14/25] Loss: 0.09203073680400849, RECONS: 0.09164611101150513, DISTANCE: 0.3846262057622274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7677, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [15/25] Loss: 0.09183902200311422, RECONS: 0.09145563608035445, DISTANCE: 0.3833862617611885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9682, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7724, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [16/25] Loss: 0.0916872699471081, RECONS: 0.09130452923914965, DISTANCE: 0.3827408411923577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7767, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [17/25] Loss: 0.0916039529773924, RECONS: 0.09122403297159407, DISTANCE: 0.3799201514985826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7825, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [18/25] Loss: 0.0917239036214979, RECONS: 0.09134487807750702, DISTANCE: 0.3790258482882851
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9362, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7835, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [19/25] Loss: 0.09191577918827534, RECONS: 0.09153858050704003, DISTANCE: 0.377198851108551
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9827, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7771, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [20/25] Loss: 0.09179181144351051, RECONS: 0.0914160566670554, DISTANCE: 0.37575485592796687
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9676, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7673, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [21/25] Loss: 0.09168172763152556, RECONS: 0.09130858088081534, DISTANCE: 0.3731469891288064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7678, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [22/25] Loss: 0.09160802383785663, RECONS: 0.09123446176881375, DISTANCE: 0.37356243962826935
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7697, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [23/25] Loss: 0.09147807365904252, RECONS: 0.09110521587232749, DISTANCE: 0.37285810708999634
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9734, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7710, device='cuda:0', grad_fn=<MeanBackward0>)
Train[31/300] [24/25] Loss: 0.09137705445289612, RECONS: 0.09098686963319778, DISTANCE: 0.39018500804901124
Test[31/300] [0/2] Loss: 0.10622823983430862, RECONS: 0.10499363392591476, DISTANCE: 1.2346076965332031
Test[31/300] [1/2] Loss: 0.10684773325920105, RECONS: 0.10512850433588028, DISTANCE: 1.719231128692627
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7756, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [0/25] Loss: 0.08651162683963776, RECONS: 0.08614461123943329, DISTANCE: 0.36701369285583496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7793, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [1/25] Loss: 0.08650955185294151, RECONS: 0.08613623678684235, DISTANCE: 0.3733159303665161
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [2/25] Loss: 0.08722638090451558, RECONS: 0.08686616520086925, DISTANCE: 0.36021506786346436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9684, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7863, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [3/25] Loss: 0.08810674212872982, RECONS: 0.08775018900632858, DISTANCE: 0.35655179619789124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7860, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [4/25] Loss: 0.08889486044645309, RECONS: 0.08852678537368774, DISTANCE: 0.36807348728179934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7809, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [5/25] Loss: 0.08935192848245303, RECONS: 0.08898161848386128, DISTANCE: 0.3703085780143738
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7773, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [6/25] Loss: 0.08986351639032364, RECONS: 0.08949874128614153, DISTANCE: 0.36477410793304443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7705, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [7/25] Loss: 0.08985017519444227, RECONS: 0.08946529775857925, DISTANCE: 0.38487696647644043
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7666, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [8/25] Loss: 0.08983058482408524, RECONS: 0.08945380647977193, DISTANCE: 0.3767780197991265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9754, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7705, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [9/25] Loss: 0.08969714865088463, RECONS: 0.08932336121797561, DISTANCE: 0.37378724813461306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9543, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7770, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [10/25] Loss: 0.08951809528199109, RECONS: 0.08914733339439739, DISTANCE: 0.3707614811983975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7844, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [11/25] Loss: 0.08964214039345582, RECONS: 0.08926855772733688, DISTANCE: 0.373582124710083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9611, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7880, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [12/25] Loss: 0.08969367467440091, RECONS: 0.08932024698991042, DISTANCE: 0.3734271709735577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9735, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7870, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [13/25] Loss: 0.0899971170084817, RECONS: 0.08962145607386317, DISTANCE: 0.37566023213522776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7845, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [14/25] Loss: 0.09008603642384211, RECONS: 0.08971265455087025, DISTANCE: 0.37338106632232665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9735, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7788, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [15/25] Loss: 0.08998219482600689, RECONS: 0.08960863016545773, DISTANCE: 0.37356410175561905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7757, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [16/25] Loss: 0.08995620161294937, RECONS: 0.08958327375790652, DISTANCE: 0.37292742027955894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9722, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7752, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [17/25] Loss: 0.08988799941208628, RECONS: 0.08951626304123136, DISTANCE: 0.3717361092567444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9674, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7726, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [18/25] Loss: 0.08997628602542375, RECONS: 0.0896038177766298, DISTANCE: 0.3724679005773444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9793, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7728, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [19/25] Loss: 0.09010900855064392, RECONS: 0.08973330333828926, DISTANCE: 0.37570486068725584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7703, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [20/25] Loss: 0.09007454734473001, RECONS: 0.08970123848744802, DISTANCE: 0.3733086585998535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9712, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7682, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [21/25] Loss: 0.09004908901723949, RECONS: 0.0896757763217796, DISTANCE: 0.3733126466924494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9505, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7691, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [22/25] Loss: 0.09007767523112505, RECONS: 0.08970658416333406, DISTANCE: 0.37109095117320184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7706, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [23/25] Loss: 0.09008319458613794, RECONS: 0.08971177662412326, DISTANCE: 0.37141787509123486
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7810, device='cuda:0', grad_fn=<MeanBackward0>)
Train[32/300] [24/25] Loss: 0.090122250020504, RECONS: 0.08973859995603561, DISTANCE: 0.38364984035491945
Test[32/300] [0/2] Loss: 0.1081804633140564, RECONS: 0.10643458366394043, DISTANCE: 1.7458810806274414
Test[32/300] [1/2] Loss: 0.10821682214736938, RECONS: 0.10605987906455994, DISTANCE: 2.15694522857666
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5948, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9623, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7752, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [0/25] Loss: 0.09415744245052338, RECONS: 0.0938110500574112, DISTANCE: 0.34639251232147217
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7737, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [1/25] Loss: 0.09130009636282921, RECONS: 0.09093153476715088, DISTANCE: 0.36856216192245483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7728, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [2/25] Loss: 0.09101799627145131, RECONS: 0.09064530084530513, DISTANCE: 0.372696320215861
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9848, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7699, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [3/25] Loss: 0.09078714996576309, RECONS: 0.09042185358703136, DISTANCE: 0.36529725790023804
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6212, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9816, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7707, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [4/25] Loss: 0.08970810770988465, RECONS: 0.08934414237737656, DISTANCE: 0.3639655590057373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9719, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7727, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [5/25] Loss: 0.08942153677344322, RECONS: 0.0890516924361388, DISTANCE: 0.3698439598083496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9498, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7808, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [6/25] Loss: 0.08957620071513313, RECONS: 0.08920436458928245, DISTANCE: 0.37183618545532227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7870, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [7/25] Loss: 0.08954192791134119, RECONS: 0.08916346449404955, DISTANCE: 0.3784634619951248
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9600, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7852, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [8/25] Loss: 0.08962914927138223, RECONS: 0.08925396617915896, DISTANCE: 0.3751828008227878
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7821, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [9/25] Loss: 0.0897258386015892, RECONS: 0.08935528397560119, DISTANCE: 0.3705541491508484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9696, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7779, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [10/25] Loss: 0.08968861401081085, RECONS: 0.08931965922767465, DISTANCE: 0.36895460432226007
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7764, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [11/25] Loss: 0.08988980079690616, RECONS: 0.08951969631016254, DISTANCE: 0.37010443210601807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9574, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7686, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [12/25] Loss: 0.08997489454654548, RECONS: 0.08960258387602292, DISTANCE: 0.37231074846707857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7647, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [13/25] Loss: 0.08996201838765826, RECONS: 0.08959120139479637, DISTANCE: 0.3708170141492571
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7678, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [14/25] Loss: 0.08982337266206741, RECONS: 0.08945203771193823, DISTANCE: 0.3713351329167684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9564, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7719, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [15/25] Loss: 0.08954153815284371, RECONS: 0.0891713360324502, DISTANCE: 0.37020251899957657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9577, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7756, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [16/25] Loss: 0.08939187141025767, RECONS: 0.0890183299779892, DISTANCE: 0.37354176184710336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [17/25] Loss: 0.08946298559506734, RECONS: 0.08909020862645572, DISTANCE: 0.37277746862835354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9342, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7835, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [18/25] Loss: 0.08946321708591361, RECONS: 0.08908926381876595, DISTANCE: 0.37395376280734416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7850, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [19/25] Loss: 0.08941243290901184, RECONS: 0.08904093764722347, DISTANCE: 0.3714958608150482
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7842, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [20/25] Loss: 0.08954168323959623, RECONS: 0.08917038852260226, DISTANCE: 0.37129538967495873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7806, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [21/25] Loss: 0.08956639976664023, RECONS: 0.08919064057144252, DISTANCE: 0.375759867104617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9715, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7739, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [22/25] Loss: 0.08951234558354253, RECONS: 0.0891370345716891, DISTANCE: 0.37531179448832636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7713, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [23/25] Loss: 0.08939839899539948, RECONS: 0.08902453320721786, DISTANCE: 0.37386652330557507
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5695, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7652, device='cuda:0', grad_fn=<MeanBackward0>)
Train[33/300] [24/25] Loss: 0.08994287639856338, RECONS: 0.08955274313688279, DISTANCE: 0.39013386249542237
Test[33/300] [0/2] Loss: 0.10858011990785599, RECONS: 0.10748665034770966, DISTANCE: 1.0934687852859497
Test[33/300] [1/2] Loss: 0.11005930230021477, RECONS: 0.10835835337638855, DISTANCE: 1.7009477019309998
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9746, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7586, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [0/25] Loss: 0.08767784386873245, RECONS: 0.08726929128170013, DISTANCE: 0.408555269241333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7578, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [1/25] Loss: 0.08883773535490036, RECONS: 0.08844530954957008, DISTANCE: 0.39242637157440186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7636, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [2/25] Loss: 0.08884553611278534, RECONS: 0.08846250176429749, DISTANCE: 0.38303407033284503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9646, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7665, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [3/25] Loss: 0.08875046111643314, RECONS: 0.08835294470191002, DISTANCE: 0.39751675724983215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9512, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7748, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [4/25] Loss: 0.08939194083213806, RECONS: 0.0890062466263771, DISTANCE: 0.3856940507888794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7798, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [5/25] Loss: 0.08963547026117642, RECONS: 0.08925546581546466, DISTANCE: 0.3800044258435567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7772, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [6/25] Loss: 0.08959893137216568, RECONS: 0.08922232581036431, DISTANCE: 0.3766054255621774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7733, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [7/25] Loss: 0.08913759887218475, RECONS: 0.08875847328454256, DISTANCE: 0.3791254758834839
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9588, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7701, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [8/25] Loss: 0.0889783071147071, RECONS: 0.08859919591082467, DISTANCE: 0.37911105155944824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9760, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7688, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [9/25] Loss: 0.0889926165342331, RECONS: 0.08861496821045875, DISTANCE: 0.3776481866836548
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9638, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7655, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [10/25] Loss: 0.08896241269328377, RECONS: 0.08858587592840195, DISTANCE: 0.3765364343469793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9693, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7665, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [11/25] Loss: 0.08892083602646987, RECONS: 0.08854215778410435, DISTANCE: 0.3786776562531789
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6234, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9651, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7666, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [12/25] Loss: 0.08864162518427922, RECONS: 0.08826618985487865, DISTANCE: 0.3754349396778987
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9500, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7695, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [13/25] Loss: 0.08845132802213941, RECONS: 0.08807379858834403, DISTANCE: 0.37752928904124666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9441, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7819, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [14/25] Loss: 0.08873889793952307, RECONS: 0.08836279710133871, DISTANCE: 0.3761008103688558
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7819, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [15/25] Loss: 0.08880375837907195, RECONS: 0.08842738717794418, DISTANCE: 0.37637096643447876
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5947, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9540, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7829, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [16/25] Loss: 0.08907827471985537, RECONS: 0.08870259409441668, DISTANCE: 0.37568048168631163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7742, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [17/25] Loss: 0.08895486717422803, RECONS: 0.08858266886737612, DISTANCE: 0.3721983763906691
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7688, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [18/25] Loss: 0.08892322527734857, RECONS: 0.0885504582210591, DISTANCE: 0.37276717236167506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7623, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [19/25] Loss: 0.0889399841427803, RECONS: 0.08856697529554367, DISTANCE: 0.37300896644592285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9580, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7615, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [20/25] Loss: 0.0888423937417212, RECONS: 0.08846997895411082, DISTANCE: 0.37241495223272414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7651, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [21/25] Loss: 0.08864195814186876, RECONS: 0.08827201412482695, DISTANCE: 0.3699441606348211
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7710, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [22/25] Loss: 0.08861097434292668, RECONS: 0.08824052370112875, DISTANCE: 0.37045065216396167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7715, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [23/25] Loss: 0.08856141287833452, RECONS: 0.08819119694332282, DISTANCE: 0.37021584312121075
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9547, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7771, device='cuda:0', grad_fn=<MeanBackward0>)
Train[34/300] [24/25] Loss: 0.08862274885177612, RECONS: 0.08823657482862472, DISTANCE: 0.3861739826202393
Test[34/300] [0/2] Loss: 0.10301815718412399, RECONS: 0.10174094140529633, DISTANCE: 1.2772178649902344
Test[34/300] [1/2] Loss: 0.10376229509711266, RECONS: 0.10201365500688553, DISTANCE: 1.7486395835876465
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7757, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [0/25] Loss: 0.08595099300146103, RECONS: 0.08560272306203842, DISTANCE: 0.3482680320739746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5962, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7771, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [1/25] Loss: 0.08821749687194824, RECONS: 0.08786653727293015, DISTANCE: 0.35095882415771484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7724, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [2/25] Loss: 0.08838125069936116, RECONS: 0.0880151738723119, DISTANCE: 0.3660767873128255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9751, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7650, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [3/25] Loss: 0.08763399161398411, RECONS: 0.08726644143462181, DISTANCE: 0.3675498068332672
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7600, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [4/25] Loss: 0.08747965395450592, RECONS: 0.08711907267570496, DISTANCE: 0.3605811595916748
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7568, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [5/25] Loss: 0.08796904732783635, RECONS: 0.0875973788400491, DISTANCE: 0.3716682195663452
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7580, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [6/25] Loss: 0.08806982317141124, RECONS: 0.08770012216908592, DISTANCE: 0.3697004999433245
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7610, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [7/25] Loss: 0.08793875481933355, RECONS: 0.08756525255739689, DISTANCE: 0.37350165843963623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7641, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [8/25] Loss: 0.08786766479412715, RECONS: 0.08750039752986696, DISTANCE: 0.3672669728597005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9566, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7697, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [9/25] Loss: 0.08773557543754577, RECONS: 0.08737061843276024, DISTANCE: 0.3649564743041992
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9344, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7742, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [10/25] Loss: 0.0876983946019953, RECONS: 0.08733468367294832, DISTANCE: 0.36371023004705255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9336, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7714, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [11/25] Loss: 0.0873575396835804, RECONS: 0.08699619707961877, DISTANCE: 0.3613420824209849
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9793, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7752, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [12/25] Loss: 0.08748421646081485, RECONS: 0.08712285413191868, DISTANCE: 0.36136162281036377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9763, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7702, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [13/25] Loss: 0.08735499903559685, RECONS: 0.08699602793369975, DISTANCE: 0.35897036109651836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7626, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [14/25] Loss: 0.08706695586442947, RECONS: 0.08670850197474161, DISTANCE: 0.35845302740732826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7597, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [15/25] Loss: 0.0869669639505446, RECONS: 0.08660727739334106, DISTANCE: 0.35968562215566635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7579, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [16/25] Loss: 0.08694920601213679, RECONS: 0.08659011300872355, DISTANCE: 0.3590922846513636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7635, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [17/25] Loss: 0.08692922401759359, RECONS: 0.0865695472392771, DISTANCE: 0.35967620876100326
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6229, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7675, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [18/25] Loss: 0.08669903050912053, RECONS: 0.08633839574299361, DISTANCE: 0.36063438340237264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9659, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7746, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [19/25] Loss: 0.08661369010806083, RECONS: 0.08625338710844517, DISTANCE: 0.360302597284317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9410, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7827, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [20/25] Loss: 0.08659925914946057, RECONS: 0.0862390480580784, DISTANCE: 0.3602108558019002
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6254, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9390, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7865, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [21/25] Loss: 0.08638183603232558, RECONS: 0.08602025935595686, DISTANCE: 0.3615766059268605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7855, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [22/25] Loss: 0.08669123571851979, RECONS: 0.08632984725029572, DISTANCE: 0.36138837752134906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9514, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7796, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [23/25] Loss: 0.08660974850257237, RECONS: 0.08624864897380273, DISTANCE: 0.3610995461543401
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9499, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7728, device='cuda:0', grad_fn=<MeanBackward0>)
Train[35/300] [24/25] Loss: 0.08671746134757996, RECONS: 0.08633773565292359, DISTANCE: 0.37972569465637207
Test[35/300] [0/2] Loss: 0.10423160344362259, RECONS: 0.1032039076089859, DISTANCE: 1.027693271636963
Test[35/300] [1/2] Loss: 0.10509442538022995, RECONS: 0.10355865955352783, DISTANCE: 1.5357649326324463
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9725, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7616, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [0/25] Loss: 0.08779425173997879, RECONS: 0.08743660151958466, DISTANCE: 0.3576529026031494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7496, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [1/25] Loss: 0.08789651468396187, RECONS: 0.08751082792878151, DISTANCE: 0.3856891989707947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7461, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [2/25] Loss: 0.086943286160628, RECONS: 0.08656347046295802, DISTANCE: 0.37981752554575604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7521, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [3/25] Loss: 0.08716261200606823, RECONS: 0.08679545484483242, DISTANCE: 0.367158442735672
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5920, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9758, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7556, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [4/25] Loss: 0.0874579519033432, RECONS: 0.08709500133991241, DISTANCE: 0.3629520654678345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9604, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7554, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [5/25] Loss: 0.08762287845214208, RECONS: 0.08726318677266438, DISTANCE: 0.35969237486521405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9754, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7548, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [6/25] Loss: 0.08746214210987091, RECONS: 0.08708834435258593, DISTANCE: 0.3737985406603132
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7608, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [7/25] Loss: 0.08693687058985233, RECONS: 0.0865671131759882, DISTANCE: 0.369758278131485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7711, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [8/25] Loss: 0.08689950737688276, RECONS: 0.08652943786647585, DISTANCE: 0.3700704839494493
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7748, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [9/25] Loss: 0.0865738607943058, RECONS: 0.08620269298553467, DISTANCE: 0.371168327331543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7784, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [10/25] Loss: 0.08659851551055908, RECONS: 0.08622684668410908, DISTANCE: 0.371669509194114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7770, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [11/25] Loss: 0.08671410443882148, RECONS: 0.08633808170755704, DISTANCE: 0.37602365016937256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9546, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7733, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [12/25] Loss: 0.08674346598295066, RECONS: 0.08636795442837936, DISTANCE: 0.37551268247457653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9533, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7665, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [13/25] Loss: 0.08653400944811958, RECONS: 0.08615904673933983, DISTANCE: 0.3749637348311288
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6225, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7632, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [14/25] Loss: 0.08629058003425598, RECONS: 0.08591312517722448, DISTANCE: 0.3774556239446004
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7699, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [15/25] Loss: 0.08606668654829264, RECONS: 0.08569326344877481, DISTANCE: 0.37342359870672226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7777, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [16/25] Loss: 0.08610340821392395, RECONS: 0.08573109525091507, DISTANCE: 0.3723136396969066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9661, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7756, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [17/25] Loss: 0.08611527954538663, RECONS: 0.08574389790495236, DISTANCE: 0.3713822099897597
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7734, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [18/25] Loss: 0.08598074748327858, RECONS: 0.08561039323869504, DISTANCE: 0.37035461475974635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7716, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [19/25] Loss: 0.0858723282814026, RECONS: 0.08550242185592652, DISTANCE: 0.3699069142341614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9565, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7705, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [20/25] Loss: 0.08573127608923685, RECONS: 0.08536194690636226, DISTANCE: 0.3693297704060872
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7704, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [21/25] Loss: 0.08577133816751567, RECONS: 0.08540224114602263, DISTANCE: 0.3690976717255332
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7671, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [22/25] Loss: 0.08577833713396736, RECONS: 0.08541077116261357, DISTANCE: 0.3675667358481366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9584, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7621, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [23/25] Loss: 0.08557479393978913, RECONS: 0.0852081822231412, DISTANCE: 0.3666125535964966
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5883, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9535, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7581, device='cuda:0', grad_fn=<MeanBackward0>)
Train[36/300] [24/25] Loss: 0.08576457262039185, RECONS: 0.08538529336452484, DISTANCE: 0.37928017616271975
Test[36/300] [0/2] Loss: 0.10326910018920898, RECONS: 0.10202677547931671, DISTANCE: 1.242325782775879
Test[36/300] [1/2] Loss: 0.10315774381160736, RECONS: 0.10158786922693253, DISTANCE: 1.569874346256256
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9754, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7526, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [0/25] Loss: 0.08319245278835297, RECONS: 0.08282505720853806, DISTANCE: 0.36739861965179443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9793, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7478, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [1/25] Loss: 0.08350485563278198, RECONS: 0.08312099799513817, DISTANCE: 0.3838586211204529
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9623, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7552, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [2/25] Loss: 0.08350300788879395, RECONS: 0.08312014242013295, DISTANCE: 0.3828671375910441
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7671, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [3/25] Loss: 0.08393027260899544, RECONS: 0.08355631865561008, DISTANCE: 0.37395572662353516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7700, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [4/25] Loss: 0.08348982483148575, RECONS: 0.08312230706214904, DISTANCE: 0.36751954555511473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9290, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7756, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [5/25] Loss: 0.08357046668728192, RECONS: 0.08320923522114754, DISTANCE: 0.36123265822728473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9688, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7775, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [6/25] Loss: 0.0841707672391619, RECONS: 0.08381448153938566, DISTANCE: 0.3562865597861154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9564, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7709, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [7/25] Loss: 0.08378354273736477, RECONS: 0.08343003038316965, DISTANCE: 0.3535133898258209
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9121, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7720, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [8/25] Loss: 0.08365299552679062, RECONS: 0.08329879658089744, DISTANCE: 0.3542000717586941
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9552, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7689, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [9/25] Loss: 0.08405566141009331, RECONS: 0.08370513543486595, DISTANCE: 0.3505266547203064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9538, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7603, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [10/25] Loss: 0.08401801504872063, RECONS: 0.08366713131015951, DISTANCE: 0.3508844592354514
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9856, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7553, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [11/25] Loss: 0.08400202852984269, RECONS: 0.08365230200191338, DISTANCE: 0.3497272531191508
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7575, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [12/25] Loss: 0.0841763993868461, RECONS: 0.08382814320234153, DISTANCE: 0.34825693644010103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7566, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [13/25] Loss: 0.08394206262060575, RECONS: 0.08359243507896151, DISTANCE: 0.3496283122471401
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7618, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [14/25] Loss: 0.08381559799114863, RECONS: 0.08346785604953766, DISTANCE: 0.3477428197860718
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9266, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7724, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [15/25] Loss: 0.08382704202085733, RECONS: 0.08347877534106374, DISTANCE: 0.34826750308275223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9376, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7742, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [16/25] Loss: 0.08396849343005348, RECONS: 0.08362030807663412, DISTANCE: 0.3481859319350299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9475, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7723, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [17/25] Loss: 0.08397866371605131, RECONS: 0.08363002704249488, DISTANCE: 0.34863705105251735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6210, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9617, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7681, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [18/25] Loss: 0.0838005844699709, RECONS: 0.08345048600121548, DISTANCE: 0.3500987040369134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7677, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [19/25] Loss: 0.08378348611295224, RECONS: 0.08343503810465336, DISTANCE: 0.34844807982444764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9564, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7653, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [20/25] Loss: 0.0838157254315558, RECONS: 0.08346397678057353, DISTANCE: 0.3517487332934425
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5875, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9779, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7661, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [21/25] Loss: 0.08416965637694705, RECONS: 0.08381878584623337, DISTANCE: 0.35087052258578216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9924, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7555, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [22/25] Loss: 0.08423346799352895, RECONS: 0.0838814870170925, DISTANCE: 0.3519808572271596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7537, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [23/25] Loss: 0.08430489835639794, RECONS: 0.08395119694372018, DISTANCE: 0.3537013779083888
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7471, device='cuda:0', grad_fn=<MeanBackward0>)
Train[37/300] [24/25] Loss: 0.08434942632913589, RECONS: 0.08397847145795823, DISTANCE: 0.37095495223999025
Test[37/300] [0/2] Loss: 0.09999676048755646, RECONS: 0.09919452667236328, DISTANCE: 0.8022360801696777
Test[37/300] [1/2] Loss: 0.10005985200405121, RECONS: 0.09901684522628784, DISTANCE: 1.0430080890655518
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7436, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [0/25] Loss: 0.08341428637504578, RECONS: 0.08302831649780273, DISTANCE: 0.3859701156616211
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9549, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7520, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [1/25] Loss: 0.08333013206720352, RECONS: 0.08295611664652824, DISTANCE: 0.37401556968688965
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9767, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7538, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [2/25] Loss: 0.08332198858261108, RECONS: 0.08295919001102448, DISTANCE: 0.362798531850179
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7677, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [3/25] Loss: 0.08308625034987926, RECONS: 0.08272966369986534, DISTANCE: 0.35658687353134155
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7696, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [4/25] Loss: 0.08320775926113129, RECONS: 0.0828602984547615, DISTANCE: 0.3474603176116943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7740, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [5/25] Loss: 0.08355281626184781, RECONS: 0.08320756753285725, DISTANCE: 0.34524842103322345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9680, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7732, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [6/25] Loss: 0.08335373550653458, RECONS: 0.08300524950027466, DISTANCE: 0.3484854187284197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9427, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7705, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [7/25] Loss: 0.08383688610047102, RECONS: 0.08348863385617733, DISTANCE: 0.34825214743614197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9551, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7642, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [8/25] Loss: 0.08418216887447569, RECONS: 0.08383510592910978, DISTANCE: 0.3470626009835137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7521, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [9/25] Loss: 0.0839562639594078, RECONS: 0.0836137816309929, DISTANCE: 0.34248197078704834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9766, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7443, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [10/25] Loss: 0.08373050865801898, RECONS: 0.08338976312767375, DISTANCE: 0.34074493971737946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9778, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7442, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [11/25] Loss: 0.083832702289025, RECONS: 0.08349507426222165, DISTANCE: 0.33762765924135846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9488, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7450, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [12/25] Loss: 0.08379274721329029, RECONS: 0.083455391228199, DISTANCE: 0.33735573291778564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9374, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7531, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [13/25] Loss: 0.08382364947881017, RECONS: 0.08348814078739711, DISTANCE: 0.3355086360658918
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7557, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [14/25] Loss: 0.08373676339785258, RECONS: 0.0833993395169576, DISTANCE: 0.33742365837097166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9670, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7572, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [15/25] Loss: 0.08367454260587692, RECONS: 0.083336784504354, DISTANCE: 0.33775802701711655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9624, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7552, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [16/25] Loss: 0.08348595964557984, RECONS: 0.08313792155069463, DISTANCE: 0.3480381825390984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9478, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7620, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [17/25] Loss: 0.08340033392111461, RECONS: 0.08304570325546795, DISTANCE: 0.35463058948516846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6201, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9631, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7639, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [18/25] Loss: 0.0831947679582395, RECONS: 0.08283860942250804, DISTANCE: 0.3561583443691856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7686, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [19/25] Loss: 0.08301859758794308, RECONS: 0.08266065753996373, DISTANCE: 0.35793996453285215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9473, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7759, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [20/25] Loss: 0.0829394261042277, RECONS: 0.08258164461169924, DISTANCE: 0.357781381834121
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9248, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7775, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [21/25] Loss: 0.08295853198929266, RECONS: 0.08260138163512404, DISTANCE: 0.35715031081979925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9463, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7790, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [22/25] Loss: 0.08294351884852284, RECONS: 0.08258767976709035, DISTANCE: 0.35583891557610553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9334, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7742, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [23/25] Loss: 0.08320393258084853, RECONS: 0.08284864295274019, DISTANCE: 0.35528960327307385
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9401, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7656, device='cuda:0', grad_fn=<MeanBackward0>)
Train[38/300] [24/25] Loss: 0.08315449446439743, RECONS: 0.08278430342674255, DISTANCE: 0.37019111156463624
Test[38/300] [0/2] Loss: 0.09791730344295502, RECONS: 0.09738262742757797, DISTANCE: 0.5346760749816895
Test[38/300] [1/2] Loss: 0.09844233468174934, RECONS: 0.09756089001893997, DISTANCE: 0.8814435005187988
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9735, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7523, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [0/25] Loss: 0.08140157163143158, RECONS: 0.08105693012475967, DISTANCE: 0.34464120864868164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9722, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7485, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [1/25] Loss: 0.08185255154967308, RECONS: 0.08150072395801544, DISTANCE: 0.3518291115760803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6212, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9715, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7451, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [2/25] Loss: 0.08148378878831863, RECONS: 0.08109205961227417, DISTANCE: 0.39172955354054767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7513, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [3/25] Loss: 0.08172247372567654, RECONS: 0.08133557811379433, DISTANCE: 0.38689520955085754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9342, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7664, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [4/25] Loss: 0.08168832063674927, RECONS: 0.08130663633346558, DISTANCE: 0.38168385028839114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7775, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [5/25] Loss: 0.08292980616291364, RECONS: 0.08255889018376668, DISTANCE: 0.37091511487960815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9324, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7761, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [6/25] Loss: 0.0828125753573009, RECONS: 0.08244635164737701, DISTANCE: 0.36622345447540283
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9302, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7737, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [7/25] Loss: 0.0830027861520648, RECONS: 0.0826408276334405, DISTANCE: 0.3619585484266281
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9597, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7615, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [8/25] Loss: 0.08269783854484558, RECONS: 0.08233460866742665, DISTANCE: 0.36323006947835285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9565, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7595, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [9/25] Loss: 0.08291178345680236, RECONS: 0.08255003169178962, DISTANCE: 0.361751651763916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7430, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [10/25] Loss: 0.08295801756056873, RECONS: 0.08259879255836661, DISTANCE: 0.35922466624866833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9659, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7467, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [11/25] Loss: 0.08286014261345069, RECONS: 0.08250133631130059, DISTANCE: 0.35880590478579205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7486, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [12/25] Loss: 0.08275137211267765, RECONS: 0.08239292009518696, DISTANCE: 0.35845136642456055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9461, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7549, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [13/25] Loss: 0.08254924576197352, RECONS: 0.08219130071146148, DISTANCE: 0.35794462476457867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9775, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7670, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [14/25] Loss: 0.08262309432029724, RECONS: 0.08226437022288641, DISTANCE: 0.3587237040201823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9500, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7738, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [15/25] Loss: 0.08255412941798568, RECONS: 0.08219782542437315, DISTANCE: 0.356303408741951
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9764, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7733, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [16/25] Loss: 0.08244283541160471, RECONS: 0.08208472763790804, DISTANCE: 0.3581073424395393
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9628, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7689, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [17/25] Loss: 0.08261815872457293, RECONS: 0.08226103749540117, DISTANCE: 0.35712099737591213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7575, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [18/25] Loss: 0.0825351653130431, RECONS: 0.08218091177312951, DISTANCE: 0.35425342384137604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7510, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [19/25] Loss: 0.0825192753225565, RECONS: 0.08216544315218925, DISTANCE: 0.3538321554660797
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7475, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [20/25] Loss: 0.08254960924386978, RECONS: 0.08219677635601588, DISTANCE: 0.35283293042864117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9822, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7465, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [21/25] Loss: 0.08255972645499489, RECONS: 0.0822075442834334, DISTANCE: 0.3521822582591664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9602, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7507, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [22/25] Loss: 0.08251703530550003, RECONS: 0.0821652211572813, DISTANCE: 0.3518141041631284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9448, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7579, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [23/25] Loss: 0.08248471437642972, RECONS: 0.08213183283805847, DISTANCE: 0.35288139184316
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3255, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9204, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7617, device='cuda:0', grad_fn=<MeanBackward0>)
Train[39/300] [24/25] Loss: 0.08251861035823822, RECONS: 0.08215181291103363, DISTANCE: 0.3667972183227539
Test[39/300] [0/2] Loss: 0.09805115312337875, RECONS: 0.09667055308818817, DISTANCE: 1.380603313446045
Test[39/300] [1/2] Loss: 0.09832428023219109, RECONS: 0.09665261581540108, DISTANCE: 1.6716656684875488
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7697, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [0/25] Loss: 0.0772419273853302, RECONS: 0.07693120092153549, DISTANCE: 0.3107271194458008
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7748, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [1/25] Loss: 0.079472366720438, RECONS: 0.0791335217654705, DISTANCE: 0.33884596824645996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9327, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7716, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [2/25] Loss: 0.08083236962556839, RECONS: 0.08048161119222641, DISTANCE: 0.35075807571411133
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7666, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [3/25] Loss: 0.08084294013679028, RECONS: 0.08049584738910198, DISTANCE: 0.34709301590919495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9561, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7646, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [4/25] Loss: 0.08058400899171829, RECONS: 0.08024271428585053, DISTANCE: 0.3412947416305542
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9545, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7623, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [5/25] Loss: 0.0808231346309185, RECONS: 0.08048616722226143, DISTANCE: 0.3369668920834859
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9637, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7587, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [6/25] Loss: 0.08042225667408534, RECONS: 0.08008870056697301, DISTANCE: 0.3335557494844709
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7567, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [7/25] Loss: 0.08079737704247236, RECONS: 0.08045823313295841, DISTANCE: 0.33914344012737274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9497, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7528, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [8/25] Loss: 0.08123183829916848, RECONS: 0.08089168949259652, DISTANCE: 0.3401482767528958
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7528, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [9/25] Loss: 0.0816432535648346, RECONS: 0.08129874691367149, DISTANCE: 0.344506299495697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9551, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7479, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [10/25] Loss: 0.08172431181777608, RECONS: 0.0813782045787031, DISTANCE: 0.34610682184045966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7461, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [11/25] Loss: 0.08199379655222098, RECONS: 0.08164768728117149, DISTANCE: 0.3461085855960846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6307, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9637, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7460, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [12/25] Loss: 0.08172558018794426, RECONS: 0.08137660473585129, DISTANCE: 0.34897485146155727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9201, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7602, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [13/25] Loss: 0.08193180018237659, RECONS: 0.08158435885395322, DISTANCE: 0.3474407196044922
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7655, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [14/25] Loss: 0.08188132296005884, RECONS: 0.08153391381104787, DISTANCE: 0.3474087715148926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9634, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7710, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [15/25] Loss: 0.08176340628415346, RECONS: 0.08141401410102844, DISTANCE: 0.34939178824424744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7676, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [16/25] Loss: 0.08192877515273936, RECONS: 0.08158005949328928, DISTANCE: 0.34871536142685833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9719, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7679, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [17/25] Loss: 0.08209893645511733, RECONS: 0.08175043678945965, DISTANCE: 0.34849945704142254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7621, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [18/25] Loss: 0.08184553290668287, RECONS: 0.08149649987095281, DISTANCE: 0.3490329667141563
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9602, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7571, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [19/25] Loss: 0.08180376328527927, RECONS: 0.08145566806197166, DISTANCE: 0.3480952143669128
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9869, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7505, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [20/25] Loss: 0.08169882957424436, RECONS: 0.08134975355295908, DISTANCE: 0.3490759474890573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9752, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7544, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [21/25] Loss: 0.08176194707101042, RECONS: 0.08141333000226454, DISTANCE: 0.34861705519936304
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7520, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [22/25] Loss: 0.08180279122746509, RECONS: 0.08145261653091597, DISTANCE: 0.3501745255097099
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7530, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [23/25] Loss: 0.08183742345621188, RECONS: 0.08148699626326561, DISTANCE: 0.35042691727479297
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6201, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7531, device='cuda:0', grad_fn=<MeanBackward0>)
Train[40/300] [24/25] Loss: 0.0817728054523468, RECONS: 0.08140655994415283, DISTANCE: 0.36624534606933595
Test[40/300] [0/2] Loss: 0.0982024222612381, RECONS: 0.0966888964176178, DISTANCE: 1.5135250091552734
Test[40/300] [1/2] Loss: 0.09868096932768822, RECONS: 0.09690457209944725, DISTANCE: 1.776397705078125
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9533, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7593, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [0/25] Loss: 0.08004818111658096, RECONS: 0.07968395203351974, DISTANCE: 0.3642282485961914
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9495, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7646, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [1/25] Loss: 0.08220170065760612, RECONS: 0.08186661824584007, DISTANCE: 0.3350830078125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7638, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [2/25] Loss: 0.0826001192132632, RECONS: 0.08227144926786423, DISTANCE: 0.3286714553833008
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5942, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9336, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7643, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [3/25] Loss: 0.08295021578669548, RECONS: 0.08262337744235992, DISTANCE: 0.32683902978897095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9554, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7538, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [4/25] Loss: 0.0823628544807434, RECONS: 0.08202690184116364, DISTANCE: 0.33595283031463624
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9617, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7538, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [5/25] Loss: 0.08200448254744212, RECONS: 0.08166734750072162, DISTANCE: 0.3371346592903137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7518, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [6/25] Loss: 0.0817008763551712, RECONS: 0.08135900007826942, DISTANCE: 0.34187582560947966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7519, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [7/25] Loss: 0.08157781697809696, RECONS: 0.08123140316456556, DISTANCE: 0.34641367197036743
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7572, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [8/25] Loss: 0.08130756931172477, RECONS: 0.0809531302915679, DISTANCE: 0.3544388479656643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7641, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [9/25] Loss: 0.08108283504843712, RECONS: 0.08073005452752113, DISTANCE: 0.35278030633926394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9474, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7673, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [10/25] Loss: 0.08134506710551002, RECONS: 0.08099336312575774, DISTANCE: 0.35170375217090954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9405, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7687, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [11/25] Loss: 0.0810312523196141, RECONS: 0.08068339650829633, DISTANCE: 0.3478558858235677
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7687, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [12/25] Loss: 0.08090752477829273, RECONS: 0.08055252639146951, DISTANCE: 0.3549982951237605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7633, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [13/25] Loss: 0.08070762189371246, RECONS: 0.08035056186573845, DISTANCE: 0.35706009183611187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9462, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7631, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [14/25] Loss: 0.08064373383919397, RECONS: 0.08028641641139984, DISTANCE: 0.35731736024220784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9735, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7630, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [15/25] Loss: 0.08076629135757685, RECONS: 0.08040982810780406, DISTANCE: 0.3564630374312401
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9412, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7667, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [16/25] Loss: 0.08066712801947314, RECONS: 0.08030929679379743, DISTANCE: 0.35783102231867175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9703, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7659, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [17/25] Loss: 0.08082117719782723, RECONS: 0.08046575345926815, DISTANCE: 0.3554236027929518
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7604, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [18/25] Loss: 0.08097639287772931, RECONS: 0.08062012924959785, DISTANCE: 0.3562635998976858
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9836, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7503, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [19/25] Loss: 0.08096332177519798, RECONS: 0.08060804419219494, DISTANCE: 0.3552774965763092
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9605, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7445, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [20/25] Loss: 0.08093012833879107, RECONS: 0.08057592844679243, DISTANCE: 0.3541996479034424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7421, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [21/25] Loss: 0.08089220354502852, RECONS: 0.08053929629650983, DISTANCE: 0.35290717536752875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7421, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [22/25] Loss: 0.08080706194691036, RECONS: 0.08045518787010857, DISTANCE: 0.351874159729999
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9414, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7592, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [23/25] Loss: 0.08077831566333771, RECONS: 0.0804274994879961, DISTANCE: 0.3508162647485733
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7658, device='cuda:0', grad_fn=<MeanBackward0>)
Train[41/300] [24/25] Loss: 0.08085813999176025, RECONS: 0.08048767805099487, DISTANCE: 0.3704620695114136
Test[41/300] [0/2] Loss: 0.09609533101320267, RECONS: 0.09488514065742493, DISTANCE: 1.210189700126648
Test[41/300] [1/2] Loss: 0.0959993451833725, RECONS: 0.09449229761958122, DISTANCE: 1.5070475935935974
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7716, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [0/25] Loss: 0.07655894756317139, RECONS: 0.07619493454694748, DISTANCE: 0.3640146255493164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9588, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7714, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [1/25] Loss: 0.07911841943860054, RECONS: 0.07877214625477791, DISTANCE: 0.34627485275268555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9354, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7680, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [2/25] Loss: 0.07822283109029134, RECONS: 0.07787381112575531, DISTANCE: 0.3490203221638997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9244, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7694, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [3/25] Loss: 0.07870986685156822, RECONS: 0.07836185395717621, DISTANCE: 0.34801316261291504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9398, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7611, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [4/25] Loss: 0.07954832017421723, RECONS: 0.07919786423444748, DISTANCE: 0.35045576095581055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9515, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7521, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [5/25] Loss: 0.07935815180341403, RECONS: 0.07900794471303622, DISTANCE: 0.350206991036733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5912, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7469, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [6/25] Loss: 0.07988869611706052, RECONS: 0.07954080935035433, DISTANCE: 0.3478870221546718
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6224, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7397, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [7/25] Loss: 0.07965334225445986, RECONS: 0.07930186297744513, DISTANCE: 0.35147973895072937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9605, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7380, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [8/25] Loss: 0.07997733023431566, RECONS: 0.07962526463800007, DISTANCE: 0.3520659605662028
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7395, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [9/25] Loss: 0.07996882274746894, RECONS: 0.07961247116327286, DISTANCE: 0.3563516855239868
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9577, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7475, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [10/25] Loss: 0.07999965209852565, RECONS: 0.07964153249155391, DISTANCE: 0.35811989957636053
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9624, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7532, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [11/25] Loss: 0.07990555216868718, RECONS: 0.0795489518592755, DISTANCE: 0.3566005825996399
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9360, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7586, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [12/25] Loss: 0.07996829713766392, RECONS: 0.07960848452953193, DISTANCE: 0.3598129932697003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7603, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [13/25] Loss: 0.07985284924507141, RECONS: 0.07949262378471238, DISTANCE: 0.36022564343043734
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9453, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7649, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [14/25] Loss: 0.07978050907452901, RECONS: 0.07942261795202891, DISTANCE: 0.35789143244425453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9367, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7652, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [15/25] Loss: 0.07954591419547796, RECONS: 0.07918886002153158, DISTANCE: 0.3570544496178627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9475, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7663, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [16/25] Loss: 0.07967674513073529, RECONS: 0.07932167631738327, DISTANCE: 0.35506897814133587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9637, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7640, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [17/25] Loss: 0.07971321667234103, RECONS: 0.07935783598158094, DISTANCE: 0.3553809920946757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9624, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7572, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [18/25] Loss: 0.07954740132156171, RECONS: 0.07919082594545264, DISTANCE: 0.35657559570513275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9382, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7525, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [19/25] Loss: 0.07942061349749566, RECONS: 0.07906493842601776, DISTANCE: 0.35567544102668763
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7523, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [20/25] Loss: 0.07949455295290266, RECONS: 0.07913840455668313, DISTANCE: 0.3561487595240275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9321, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7507, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [21/25] Loss: 0.07939783754673871, RECONS: 0.07904446091164243, DISTANCE: 0.3533771200613542
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9462, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7486, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [22/25] Loss: 0.07928840654051822, RECONS: 0.07893591957247775, DISTANCE: 0.35248757963595184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9545, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7557, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [23/25] Loss: 0.07913960671673219, RECONS: 0.07878738238165776, DISTANCE: 0.3522249013185501
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5934, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9070, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7559, device='cuda:0', grad_fn=<MeanBackward0>)
Train[42/300] [24/25] Loss: 0.07937696993350983, RECONS: 0.07900660157203675, DISTANCE: 0.3703687953948975
Test[42/300] [0/2] Loss: 0.09140470623970032, RECONS: 0.09026962518692017, DISTANCE: 1.1350775957107544
Test[42/300] [1/2] Loss: 0.09104523807764053, RECONS: 0.08946730196475983, DISTANCE: 1.5779343247413635
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9499, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7500, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [0/25] Loss: 0.07728033512830734, RECONS: 0.07690921425819397, DISTANCE: 0.371120810508728
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9361, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7482, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [1/25] Loss: 0.07840345054864883, RECONS: 0.07804398611187935, DISTANCE: 0.35946446657180786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7455, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [2/25] Loss: 0.07924268891414006, RECONS: 0.07888111720482509, DISTANCE: 0.36157214641571045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6210, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7407, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [3/25] Loss: 0.07820045575499535, RECONS: 0.07784455269575119, DISTANCE: 0.3559035360813141
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9562, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7438, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [4/25] Loss: 0.07780479788780212, RECONS: 0.07745117247104645, DISTANCE: 0.35362541675567627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9272, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7486, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [5/25] Loss: 0.07767009486754735, RECONS: 0.0773187056183815, DISTANCE: 0.3513898253440857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9395, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7544, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [6/25] Loss: 0.0778421802180154, RECONS: 0.07749541103839874, DISTANCE: 0.346769962991987
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9300, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7503, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [7/25] Loss: 0.07784651219844818, RECONS: 0.07749377749860287, DISTANCE: 0.3527354747056961
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9559, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7538, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [8/25] Loss: 0.07780904985136455, RECONS: 0.0774570678671201, DISTANCE: 0.351982315381368
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9525, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7514, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [9/25] Loss: 0.0775803841650486, RECONS: 0.07722912430763244, DISTANCE: 0.3512600064277649
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9491, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7552, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [10/25] Loss: 0.07774116911671379, RECONS: 0.07738997719504616, DISTANCE: 0.35119209506294946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9540, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7544, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [11/25] Loss: 0.07745384362836678, RECONS: 0.07710224948823452, DISTANCE: 0.35159457723299664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9524, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7527, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [12/25] Loss: 0.07739452788463005, RECONS: 0.0770373590863668, DISTANCE: 0.3571690137569721
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9548, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7543, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [13/25] Loss: 0.0773056261241436, RECONS: 0.07694984067763601, DISTANCE: 0.35578586374010357
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9168, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7538, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [14/25] Loss: 0.07714619388182958, RECONS: 0.0767892430226008, DISTANCE: 0.3569512844085693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7580, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [15/25] Loss: 0.07708710990846157, RECONS: 0.07672700192779303, DISTANCE: 0.3601081818342209
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7543, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [16/25] Loss: 0.07722803073770859, RECONS: 0.07686611659386579, DISTANCE: 0.36191431213827696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7542, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [17/25] Loss: 0.07722069198886554, RECONS: 0.07686028629541397, DISTANCE: 0.36040600140889484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9549, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7477, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [18/25] Loss: 0.07732297087970533, RECONS: 0.07696368741361719, DISTANCE: 0.3592838488127056
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9563, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7468, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [19/25] Loss: 0.07719730958342552, RECONS: 0.07683851830661297, DISTANCE: 0.3587917387485504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9628, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7492, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [20/25] Loss: 0.07725027345475696, RECONS: 0.07689282191651207, DISTANCE: 0.3574519668306623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7525, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [21/25] Loss: 0.07717416875741699, RECONS: 0.07681251926855608, DISTANCE: 0.3616500442678278
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9503, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7556, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [22/25] Loss: 0.07718918537316115, RECONS: 0.07682829836140508, DISTANCE: 0.360887392707493
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6255, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7530, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [23/25] Loss: 0.07699243165552616, RECONS: 0.07663410281141599, DISTANCE: 0.3583291123310725
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9258, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7577, device='cuda:0', grad_fn=<MeanBackward0>)
Train[43/300] [24/25] Loss: 0.07699523568153381, RECONS: 0.07662113517522812, DISTANCE: 0.3741007947921753
Test[43/300] [0/2] Loss: 0.09110572934150696, RECONS: 0.08952363580465317, DISTANCE: 1.5820951461791992
Test[43/300] [1/2] Loss: 0.08995598182082176, RECONS: 0.08809389546513557, DISTANCE: 1.862088680267334
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9462, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7590, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [0/25] Loss: 0.07986322790384293, RECONS: 0.07949191331863403, DISTANCE: 0.3713129758834839
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9754, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7498, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [1/25] Loss: 0.07805277407169342, RECONS: 0.0777105838060379, DISTANCE: 0.3421894907951355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9597, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7483, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [2/25] Loss: 0.07684034357468288, RECONS: 0.0764827032883962, DISTANCE: 0.35763879617055255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9534, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7444, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [3/25] Loss: 0.07625718414783478, RECONS: 0.07590414956212044, DISTANCE: 0.3530343472957611
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9428, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7451, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [4/25] Loss: 0.07576246410608292, RECONS: 0.07541135847568511, DISTANCE: 0.3511058330535889
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6280, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7449, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [5/25] Loss: 0.07535400738318761, RECONS: 0.07499473914504051, DISTANCE: 0.3592686057090759
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9444, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7533, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [6/25] Loss: 0.07559959696871894, RECONS: 0.07523985419954572, DISTANCE: 0.3597428628376552
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7544, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [7/25] Loss: 0.07542963698506355, RECONS: 0.07506818324327469, DISTANCE: 0.36145375669002533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9326, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7578, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [8/25] Loss: 0.07524401446183522, RECONS: 0.07488158014085558, DISTANCE: 0.362434532907274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9476, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7613, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [9/25] Loss: 0.0749636210501194, RECONS: 0.07460673600435257, DISTANCE: 0.3568850874900818
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9682, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7592, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [10/25] Loss: 0.07509916546669873, RECONS: 0.074738316915252, DISTANCE: 0.36084832928397437
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9078, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7573, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [11/25] Loss: 0.0749707780778408, RECONS: 0.07461166257659595, DISTANCE: 0.35911551117897034
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9653, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7520, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [12/25] Loss: 0.07511522792852841, RECONS: 0.07475683322319618, DISTANCE: 0.358394980430603
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9396, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7456, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [13/25] Loss: 0.07520767088447299, RECONS: 0.07485126491103854, DISTANCE: 0.3564061352184841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9521, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7434, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [14/25] Loss: 0.0753362442056338, RECONS: 0.0749798446893692, DISTANCE: 0.35639965534210205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9572, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7439, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [15/25] Loss: 0.07533384952694178, RECONS: 0.07497849781066179, DISTANCE: 0.35535188019275665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9277, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7471, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [16/25] Loss: 0.07529866563923218, RECONS: 0.07494298324865453, DISTANCE: 0.3556823870714973
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9436, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7502, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [17/25] Loss: 0.07529439528783162, RECONS: 0.07493978904353248, DISTANCE: 0.3546063303947449
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7480, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [18/25] Loss: 0.07513534473745447, RECONS: 0.0747755765914917, DISTANCE: 0.35976817733363103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9161, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7494, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [19/25] Loss: 0.07513401545584202, RECONS: 0.07477488406002522, DISTANCE: 0.3591314911842346
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7482, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [20/25] Loss: 0.07525998673268727, RECONS: 0.07490153717143196, DISTANCE: 0.3584495782852173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9343, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7423, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [21/25] Loss: 0.07529159059578722, RECONS: 0.07493555308742957, DISTANCE: 0.35603761131113226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7356, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [22/25] Loss: 0.07529354775729387, RECONS: 0.07493679646564566, DISTANCE: 0.3567514575046042
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9385, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7348, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [23/25] Loss: 0.07535125905026992, RECONS: 0.07499568692098062, DISTANCE: 0.35557223856449127
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7364, device='cuda:0', grad_fn=<MeanBackward0>)
Train[44/300] [24/25] Loss: 0.07536643505096435, RECONS: 0.074995399415493, DISTANCE: 0.3710356855392456
Test[44/300] [0/2] Loss: 0.08963663876056671, RECONS: 0.0883171409368515, DISTANCE: 1.3195000886917114
Test[44/300] [1/2] Loss: 0.08880076929926872, RECONS: 0.08706933632493019, DISTANCE: 1.7314358353614807
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9524, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7395, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [0/25] Loss: 0.07607164233922958, RECONS: 0.07572391629219055, DISTANCE: 0.34772777557373047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7451, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [1/25] Loss: 0.07457564398646355, RECONS: 0.07424179464578629, DISTANCE: 0.3338491916656494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9415, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7523, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [2/25] Loss: 0.07464449852705002, RECONS: 0.07432117313146591, DISTANCE: 0.32332563400268555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9409, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7523, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [3/25] Loss: 0.07434500567615032, RECONS: 0.07401355914771557, DISTANCE: 0.3314472436904907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9334, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7497, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [4/25] Loss: 0.07427124083042144, RECONS: 0.07393290102481842, DISTANCE: 0.33834066390991213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9384, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7471, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [5/25] Loss: 0.07475276539723079, RECONS: 0.07441295683383942, DISTANCE: 0.33980925877888996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7390, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [6/25] Loss: 0.07457146048545837, RECONS: 0.07422687751906258, DISTANCE: 0.3445835794721331
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9515, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7334, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [7/25] Loss: 0.07459870725870132, RECONS: 0.07424934953451157, DISTANCE: 0.3493584990501404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9408, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7371, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [8/25] Loss: 0.07451728400256899, RECONS: 0.07416347000333998, DISTANCE: 0.35381490654415554
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9488, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7413, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [9/25] Loss: 0.07422333881258965, RECONS: 0.07386430501937866, DISTANCE: 0.3590342879295349
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7429, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [10/25] Loss: 0.07412150705402548, RECONS: 0.07376332919705998, DISTANCE: 0.35817826877940784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7473, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [11/25] Loss: 0.07398014515638351, RECONS: 0.0736231120924155, DISTANCE: 0.3570332924524943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9103, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7527, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [12/25] Loss: 0.07388685643672943, RECONS: 0.07353227528241965, DISTANCE: 0.35458142023820144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7554, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [13/25] Loss: 0.07398167146103722, RECONS: 0.07362982683948108, DISTANCE: 0.351844779082707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7524, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [14/25] Loss: 0.07401943405469259, RECONS: 0.07366706480582555, DISTANCE: 0.3523695548375448
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9312, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7516, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [15/25] Loss: 0.0740231848321855, RECONS: 0.07367061823606491, DISTANCE: 0.3525669500231743
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9214, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7443, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [16/25] Loss: 0.07391427150543999, RECONS: 0.07356201638193692, DISTANCE: 0.35225540048935833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9265, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7471, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [17/25] Loss: 0.07385837410887082, RECONS: 0.07350595874918832, DISTANCE: 0.3524157736036513
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7490, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [18/25] Loss: 0.07375030297982066, RECONS: 0.07339872733542793, DISTANCE: 0.35157584516625656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9703, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7491, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [19/25] Loss: 0.07371455878019333, RECONS: 0.07335933595895767, DISTANCE: 0.35522283911705016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9261, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7494, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [20/25] Loss: 0.07382200693800336, RECONS: 0.073466980386348, DISTANCE: 0.3550266254515875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7414, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [21/25] Loss: 0.07374777814204042, RECONS: 0.07339077917012302, DISTANCE: 0.3569989800453186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9224, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7392, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [22/25] Loss: 0.07374427791522897, RECONS: 0.07338858104270438, DISTANCE: 0.3556967351747596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9318, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7406, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [23/25] Loss: 0.0736829936504364, RECONS: 0.07332499139010906, DISTANCE: 0.3580022603273392
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9371, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7383, device='cuda:0', grad_fn=<MeanBackward0>)
Train[45/300] [24/25] Loss: 0.0737062281370163, RECONS: 0.07332967013120652, DISTANCE: 0.3765581274032593
Test[45/300] [0/2] Loss: 0.08738681674003601, RECONS: 0.0859595388174057, DISTANCE: 1.4272756576538086
Test[45/300] [1/2] Loss: 0.0870276540517807, RECONS: 0.0853627473115921, DISTANCE: 1.6649048328399658
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9547, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7376, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [0/25] Loss: 0.07401911169290543, RECONS: 0.07368787378072739, DISTANCE: 0.3312411308288574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7403, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [1/25] Loss: 0.07410149648785591, RECONS: 0.0737595297396183, DISTANCE: 0.34196698665618896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7376, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [2/25] Loss: 0.0738225628932317, RECONS: 0.07348263263702393, DISTANCE: 0.33992918332417804
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7424, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [3/25] Loss: 0.07280519604682922, RECONS: 0.07246198505163193, DISTANCE: 0.3432106375694275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9496, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7446, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [4/25] Loss: 0.07274671494960785, RECONS: 0.07240287661552429, DISTANCE: 0.3438374996185303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7460, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [5/25] Loss: 0.07275111973285675, RECONS: 0.07241159429152806, DISTANCE: 0.33952534198760986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9231, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7500, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [6/25] Loss: 0.07299329127584185, RECONS: 0.07264516396181923, DISTANCE: 0.34812748432159424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7498, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [7/25] Loss: 0.07311859261244535, RECONS: 0.0727735310792923, DISTANCE: 0.34506213665008545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7411, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [8/25] Loss: 0.07306223114331563, RECONS: 0.07271793319119348, DISTANCE: 0.3442985746595595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9574, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7443, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [9/25] Loss: 0.07277063578367234, RECONS: 0.07242923751473426, DISTANCE: 0.3413991093635559
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9092, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7440, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [10/25] Loss: 0.07269601998004047, RECONS: 0.07235568897290663, DISTANCE: 0.340331879529086
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9261, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7459, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [11/25] Loss: 0.07266538962721825, RECONS: 0.07232618580261867, DISTANCE: 0.3392044007778168
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9245, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7479, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [12/25] Loss: 0.07258722759210147, RECONS: 0.07224885030434681, DISTANCE: 0.3383779250658475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9533, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7507, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [13/25] Loss: 0.07252526442919459, RECONS: 0.07218693888613156, DISTANCE: 0.33832607098988127
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9391, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7509, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [14/25] Loss: 0.07240391274293263, RECONS: 0.07206414590279261, DISTANCE: 0.3397671302159627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7507, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [15/25] Loss: 0.07226954773068428, RECONS: 0.07193009974434972, DISTANCE: 0.3394482508301735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9476, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7478, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [16/25] Loss: 0.07224556365433861, RECONS: 0.07190749531283099, DISTANCE: 0.3380684081245871
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9261, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7403, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [17/25] Loss: 0.07222558930516243, RECONS: 0.07188673193256061, DISTANCE: 0.33885734611087376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9374, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7392, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [18/25] Loss: 0.07212773043858378, RECONS: 0.07178826041911777, DISTANCE: 0.339469828103718
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5912, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9231, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7346, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [19/25] Loss: 0.07232218459248543, RECONS: 0.07198102734982967, DISTANCE: 0.34115710854530334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9361, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [20/25] Loss: 0.07221827620551699, RECONS: 0.07187756363834653, DISTANCE: 0.3407125983919416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7285, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [21/25] Loss: 0.07234046167948029, RECONS: 0.0719993192363869, DISTANCE: 0.3411423780701377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9400, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7336, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [22/25] Loss: 0.07236766685610233, RECONS: 0.07202654720648476, DISTANCE: 0.34111964184304944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6206, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9312, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7391, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [23/25] Loss: 0.07223162272324164, RECONS: 0.07188977425297101, DISTANCE: 0.34184853235880536
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9054, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7527, device='cuda:0', grad_fn=<MeanBackward0>)
Train[46/300] [24/25] Loss: 0.0721933400630951, RECONS: 0.07183304131031036, DISTANCE: 0.36029868602752685
Test[46/300] [0/2] Loss: 0.08710671961307526, RECONS: 0.0858953446149826, DISTANCE: 1.2113723754882812
Test[46/300] [1/2] Loss: 0.08735692501068115, RECONS: 0.08581877127289772, DISTANCE: 1.538151741027832
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9610, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7590, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [0/25] Loss: 0.07273934781551361, RECONS: 0.07237328588962555, DISTANCE: 0.3660619258880615
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9233, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7581, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [1/25] Loss: 0.07142492011189461, RECONS: 0.07106150686740875, DISTANCE: 0.3634117841720581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9304, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7548, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [2/25] Loss: 0.07181295255819957, RECONS: 0.07146203517913818, DISTANCE: 0.35091642538706463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9111, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7500, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [3/25] Loss: 0.07125496864318848, RECONS: 0.07090986892580986, DISTANCE: 0.34509870409965515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9550, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7437, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [4/25] Loss: 0.07137703597545624, RECONS: 0.07103825807571411, DISTANCE: 0.338777756690979
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9455, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7365, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [5/25] Loss: 0.07137768467267354, RECONS: 0.0710415467619896, DISTANCE: 0.3361377517382304
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9659, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7266, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [6/25] Loss: 0.07129135089261192, RECONS: 0.0709572679230145, DISTANCE: 0.334083046231951
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9488, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7307, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [7/25] Loss: 0.07134458888322115, RECONS: 0.07100282330065966, DISTANCE: 0.34176579117774963
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9264, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7393, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [8/25] Loss: 0.07130840337938732, RECONS: 0.07096557401948506, DISTANCE: 0.3428297307756212
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7467, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [9/25] Loss: 0.07116375789046288, RECONS: 0.07082245722413064, DISTANCE: 0.34130082130432127
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7596, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [10/25] Loss: 0.071135859597813, RECONS: 0.07079740952361714, DISTANCE: 0.3384501175446944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7609, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [11/25] Loss: 0.07109707656006019, RECONS: 0.07075414806604385, DISTANCE: 0.34292847911516827
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9329, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7580, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [12/25] Loss: 0.07143326848745346, RECONS: 0.07109154875461872, DISTANCE: 0.3417195540208083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5906, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9168, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7483, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [13/25] Loss: 0.07172570005059242, RECONS: 0.07138494721480779, DISTANCE: 0.3407525675637381
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9301, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7325, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [14/25] Loss: 0.0717212567726771, RECONS: 0.07137837012608846, DISTANCE: 0.3428863207499186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9411, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7222, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [15/25] Loss: 0.07176014175638556, RECONS: 0.07141125574707985, DISTANCE: 0.3488859236240387
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [16/25] Loss: 0.07189551740884781, RECONS: 0.07154402049148784, DISTANCE: 0.351496836718391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9412, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [17/25] Loss: 0.07204019733601147, RECONS: 0.07169091784291798, DISTANCE: 0.3492792579862807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9074, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [18/25] Loss: 0.07195163322122473, RECONS: 0.0716024731334887, DISTANCE: 0.3491598555916234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9081, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7380, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [19/25] Loss: 0.07179371640086174, RECONS: 0.07144415304064751, DISTANCE: 0.34956332445144656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7488, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [20/25] Loss: 0.07173819556122735, RECONS: 0.07138723738136746, DISTANCE: 0.35095828487759545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7544, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [21/25] Loss: 0.07182393392378633, RECONS: 0.07147513600912961, DISTANCE: 0.3487980636683377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9165, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7530, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [22/25] Loss: 0.07171869375135588, RECONS: 0.07136929650669513, DISTANCE: 0.34939730167388916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9594, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7517, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [23/25] Loss: 0.0715832132846117, RECONS: 0.07123371275762717, DISTANCE: 0.349500631292661
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7477, device='cuda:0', grad_fn=<MeanBackward0>)
Train[47/300] [24/25] Loss: 0.07167078971862793, RECONS: 0.07129990160465241, DISTANCE: 0.3708881139755249
Test[47/300] [0/2] Loss: 0.08341119438409805, RECONS: 0.08218520879745483, DISTANCE: 1.2259869575500488
Test[47/300] [1/2] Loss: 0.08331191167235374, RECONS: 0.08183673769235611, DISTANCE: 1.4751760363578796
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9600, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7353, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [0/25] Loss: 0.0685373842716217, RECONS: 0.0681689977645874, DISTANCE: 0.36838579177856445
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9503, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7271, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [1/25] Loss: 0.07138966023921967, RECONS: 0.07103267312049866, DISTANCE: 0.35698777437210083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9316, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [2/25] Loss: 0.0704619934161504, RECONS: 0.07010772575934728, DISTANCE: 0.354266881942749
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9033, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [3/25] Loss: 0.07064232043921947, RECONS: 0.07029545865952969, DISTANCE: 0.3468605875968933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7310, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [4/25] Loss: 0.0705372378230095, RECONS: 0.07019007056951523, DISTANCE: 0.3471667766571045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9297, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7409, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [5/25] Loss: 0.070348276446263, RECONS: 0.07000357160965602, DISTANCE: 0.34470492601394653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9227, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7471, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [6/25] Loss: 0.0702898119177137, RECONS: 0.06994145895753588, DISTANCE: 0.34835330077580046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9115, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7532, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [7/25] Loss: 0.06999419257044792, RECONS: 0.06964640505611897, DISTANCE: 0.3477877825498581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9400, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7586, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [8/25] Loss: 0.07010543594757716, RECONS: 0.06975570569435756, DISTANCE: 0.3497307962841458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7560, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [9/25] Loss: 0.07016931921243667, RECONS: 0.069819276034832, DISTANCE: 0.35004386901855467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7465, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [10/25] Loss: 0.07007380371743982, RECONS: 0.06971523233435371, DISTANCE: 0.3585718328302557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9171, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7378, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [11/25] Loss: 0.07031113281846046, RECONS: 0.06995310944815476, DISTANCE: 0.358024001121521
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9548, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7300, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [12/25] Loss: 0.07024631993128704, RECONS: 0.06989058393698472, DISTANCE: 0.3557366682932927
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7250, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [13/25] Loss: 0.0703674288732665, RECONS: 0.0700105471270425, DISTANCE: 0.3568821975163051
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9106, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7310, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [14/25] Loss: 0.07044793665409088, RECONS: 0.07009123514095943, DISTANCE: 0.3567017157872518
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9446, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7339, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [15/25] Loss: 0.07030490413308144, RECONS: 0.0699465568177402, DISTANCE: 0.35834742337465286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9119, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7325, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [16/25] Loss: 0.07028097484041662, RECONS: 0.0699224252911175, DISTANCE: 0.35854943359599395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7393, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [17/25] Loss: 0.07017316255304548, RECONS: 0.06981637411647373, DISTANCE: 0.3567883041169908
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9144, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7402, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [18/25] Loss: 0.06999830078137548, RECONS: 0.06964269672569476, DISTANCE: 0.3556038078508879
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7400, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [19/25] Loss: 0.07001165077090263, RECONS: 0.06965374276041984, DISTANCE: 0.3579079270362854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7406, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [20/25] Loss: 0.06991551922900337, RECONS: 0.06955948436544054, DISTANCE: 0.35603478408995126
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7421, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [21/25] Loss: 0.06980495154857635, RECONS: 0.06945007328282703, DISTANCE: 0.35487812757492065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9252, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7441, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [22/25] Loss: 0.06967698653107104, RECONS: 0.06932217692551405, DISTANCE: 0.3548095018967338
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7415, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [23/25] Loss: 0.06968703338255484, RECONS: 0.06933040637522936, DISTANCE: 0.3566269775231679
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7357, device='cuda:0', grad_fn=<MeanBackward0>)
Train[48/300] [24/25] Loss: 0.06953033596277237, RECONS: 0.06915845870971679, DISTANCE: 0.37187708854675294
Test[48/300] [0/2] Loss: 0.08100449293851852, RECONS: 0.07983188331127167, DISTANCE: 1.1726129055023193
Test[48/300] [1/2] Loss: 0.08232150971889496, RECONS: 0.08073002845048904, DISTANCE: 1.5914815664291382
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9553, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7320, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [0/25] Loss: 0.06887134164571762, RECONS: 0.06851829588413239, DISTANCE: 0.3530430793762207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9376, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7302, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [1/25] Loss: 0.06850700080394745, RECONS: 0.06814281642436981, DISTANCE: 0.36418431997299194
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7341, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [2/25] Loss: 0.06821734458208084, RECONS: 0.06785037616888683, DISTANCE: 0.3669690688451131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7333, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [3/25] Loss: 0.06797309778630733, RECONS: 0.06761576235294342, DISTANCE: 0.3573363721370697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7438, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [4/25] Loss: 0.06840295046567917, RECONS: 0.06804382801055908, DISTANCE: 0.3591233015060425
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5937, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9122, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7479, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [5/25] Loss: 0.06915836905439694, RECONS: 0.06879559780160587, DISTANCE: 0.3627717097600301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7394, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [6/25] Loss: 0.06891423676695142, RECONS: 0.068546681531838, DISTANCE: 0.36755543095724924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9167, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7314, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [7/25] Loss: 0.06875311024487019, RECONS: 0.06839185114949942, DISTANCE: 0.36125923693180084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9061, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7348, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [8/25] Loss: 0.06873157289293078, RECONS: 0.06837209976381725, DISTANCE: 0.3594731224907769
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7288, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [9/25] Loss: 0.06872246637940407, RECONS: 0.06835957244038582, DISTANCE: 0.36289407014846803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9385, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7240, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [10/25] Loss: 0.06871926107189873, RECONS: 0.06835576891899109, DISTANCE: 0.36349221793088043
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9414, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [11/25] Loss: 0.06866079693039258, RECONS: 0.06829749730726083, DISTANCE: 0.3632995585600535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8886, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7299, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [12/25] Loss: 0.06864235722101651, RECONS: 0.06828143963446984, DISTANCE: 0.3609173481280987
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9745, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7413, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [13/25] Loss: 0.06855606447373118, RECONS: 0.06819698587059975, DISTANCE: 0.35907857758658274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9375, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7484, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [14/25] Loss: 0.06842892666657766, RECONS: 0.06806777069965998, DISTANCE: 0.36115572452545164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7478, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [15/25] Loss: 0.06838372489437461, RECONS: 0.0680224415846169, DISTANCE: 0.3612828701734543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9021, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7446, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [16/25] Loss: 0.0683488964157946, RECONS: 0.06798897113870173, DISTANCE: 0.3599247792187859
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7339, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [17/25] Loss: 0.06825308832857344, RECONS: 0.06789491035872036, DISTANCE: 0.35817748970455593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9349, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7293, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [18/25] Loss: 0.06818060106352757, RECONS: 0.0678237292327379, DISTANCE: 0.35687146688762467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9211, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7241, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [19/25] Loss: 0.06820209324359894, RECONS: 0.06784197241067887, DISTANCE: 0.36012051701545716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9314, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [20/25] Loss: 0.06817404109807242, RECONS: 0.06781579341207232, DISTANCE: 0.35824754692259286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7351, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [21/25] Loss: 0.06814534352584319, RECONS: 0.06778524240309541, DISTANCE: 0.36010091413151135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7377, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [22/25] Loss: 0.0682044145853623, RECONS: 0.06784362734659859, DISTANCE: 0.36078697183857794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5934, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9260, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7400, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [23/25] Loss: 0.0683839110036691, RECONS: 0.06802295707166195, DISTANCE: 0.360953688621521
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7363, device='cuda:0', grad_fn=<MeanBackward0>)
Train[49/300] [24/25] Loss: 0.06829765796661377, RECONS: 0.06792169630527496, DISTANCE: 0.37596134185791014
Test[49/300] [0/2] Loss: 0.0792856439948082, RECONS: 0.07805091142654419, DISTANCE: 1.2347359657287598
Test[49/300] [1/2] Loss: 0.07992802187800407, RECONS: 0.07852474227547646, DISTANCE: 1.403280258178711
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7296, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [0/25] Loss: 0.06917529553174973, RECONS: 0.06883710622787476, DISTANCE: 0.33819055557250977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7208, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [1/25] Loss: 0.06812187656760216, RECONS: 0.06779266521334648, DISTANCE: 0.329212486743927
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [2/25] Loss: 0.06809643407662709, RECONS: 0.06777343899011612, DISTANCE: 0.32299665609995526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9113, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [3/25] Loss: 0.06768916361033916, RECONS: 0.06736358068883419, DISTANCE: 0.325583279132843
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9373, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [4/25] Loss: 0.06729020029306412, RECONS: 0.06695765107870102, DISTANCE: 0.3325490474700928
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7401, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [5/25] Loss: 0.06679610908031464, RECONS: 0.06646536166469257, DISTANCE: 0.33074700832366943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6252, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8924, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7466, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [6/25] Loss: 0.06640595836298806, RECONS: 0.066075470830713, DISTANCE: 0.3304875578199114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9468, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7615, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [7/25] Loss: 0.06735422275960445, RECONS: 0.06702496577054262, DISTANCE: 0.329257071018219
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8816, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7578, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [8/25] Loss: 0.06825580199559529, RECONS: 0.06792270392179489, DISTANCE: 0.33309782875908744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8767, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7488, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [9/25] Loss: 0.06848086640238762, RECONS: 0.06814512833952904, DISTANCE: 0.33573782444000244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9315, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7241, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [10/25] Loss: 0.06842072985389015, RECONS: 0.06808365881443024, DISTANCE: 0.33707079020413483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9361, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [11/25] Loss: 0.06839489564299583, RECONS: 0.06806079049905141, DISTANCE: 0.33410488565762836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [12/25] Loss: 0.06851460555425057, RECONS: 0.06817677731697376, DISTANCE: 0.33782816850222075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9351, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [13/25] Loss: 0.06857433915138245, RECONS: 0.06822945390428815, DISTANCE: 0.3448854088783264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9097, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7242, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [14/25] Loss: 0.06856046517690023, RECONS: 0.06821771164735159, DISTANCE: 0.3427537123362223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9277, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7340, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [15/25] Loss: 0.06840522075071931, RECONS: 0.06806160788983107, DISTANCE: 0.3436130955815315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8783, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7431, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [16/25] Loss: 0.06841118589920156, RECONS: 0.06806602460496566, DISTANCE: 0.3451613257913029
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7458, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [17/25] Loss: 0.06830383009380764, RECONS: 0.067958767629332, DISTANCE: 0.34506268633736503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8716, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7324, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [18/25] Loss: 0.06828401982784271, RECONS: 0.06793733725422307, DISTANCE: 0.3466826551838925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9387, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7259, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [19/25] Loss: 0.06814316660165787, RECONS: 0.06779848560690879, DISTANCE: 0.34468103051185606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9095, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [20/25] Loss: 0.0680619715934708, RECONS: 0.06771682912395113, DISTANCE: 0.345142472357977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7289, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [21/25] Loss: 0.06784974241798575, RECONS: 0.06750356101176956, DISTANCE: 0.3461814685301347
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7290, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [22/25] Loss: 0.0678328275680542, RECONS: 0.067487220077411, DISTANCE: 0.34560758134593134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9477, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7289, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [23/25] Loss: 0.06772212901463111, RECONS: 0.06737690015385549, DISTANCE: 0.34522893528143567
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6201, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8351, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7342, device='cuda:0', grad_fn=<MeanBackward0>)
Train[50/300] [24/25] Loss: 0.06751057282090187, RECONS: 0.06715033710002899, DISTANCE: 0.3602357530593872
Test[50/300] [0/2] Loss: 0.07743529975414276, RECONS: 0.07649095356464386, DISTANCE: 0.9443459510803223
Test[50/300] [1/2] Loss: 0.07765789330005646, RECONS: 0.07643023505806923, DISTANCE: 1.2276580333709717
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9384, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7354, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [0/25] Loss: 0.06482631713151932, RECONS: 0.06448256224393845, DISTANCE: 0.34375715255737305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9049, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7367, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [1/25] Loss: 0.06474632024765015, RECONS: 0.06438524648547173, DISTANCE: 0.36107444763183594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6239, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7410, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [2/25] Loss: 0.06374432022372882, RECONS: 0.0633632093667984, DISTANCE: 0.381110946337382
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9751, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7431, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [3/25] Loss: 0.06535365898162127, RECONS: 0.06497843377292156, DISTANCE: 0.37522566318511963
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8970, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7344, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [4/25] Loss: 0.06539281830191612, RECONS: 0.06502133756875991, DISTANCE: 0.3714815616607666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9553, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7281, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [5/25] Loss: 0.06521233233312766, RECONS: 0.06484041114648183, DISTANCE: 0.3719213604927063
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9450, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7286, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [6/25] Loss: 0.06538584349410874, RECONS: 0.06501960967268262, DISTANCE: 0.36623380865369526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [7/25] Loss: 0.06575774447992444, RECONS: 0.06539176311343908, DISTANCE: 0.3659815639257431
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7261, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [8/25] Loss: 0.06560345946086778, RECONS: 0.0652374890115526, DISTANCE: 0.36597070429060197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7255, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [9/25] Loss: 0.06527242250740528, RECONS: 0.06490684263408183, DISTANCE: 0.3655800223350525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7328, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [10/25] Loss: 0.06539964574304494, RECONS: 0.0650360540232875, DISTANCE: 0.363592191175981
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7361, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [11/25] Loss: 0.06559335223088662, RECONS: 0.06523089949041605, DISTANCE: 0.3624529242515564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8764, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7334, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [12/25] Loss: 0.06542396344817601, RECONS: 0.0650577198427457, DISTANCE: 0.36624370171473575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9335, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7350, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [13/25] Loss: 0.06534261229847159, RECONS: 0.06497782761497158, DISTANCE: 0.36478477716445923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9207, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7312, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [14/25] Loss: 0.06533604338765145, RECONS: 0.06497402265667915, DISTANCE: 0.3620208024978638
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7362, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [15/25] Loss: 0.06526584713719785, RECONS: 0.06490574940107763, DISTANCE: 0.36009765416383743
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7351, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [16/25] Loss: 0.0652300143504844, RECONS: 0.06487033406601232, DISTANCE: 0.35968029499053955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8868, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7350, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [17/25] Loss: 0.06516592101090485, RECONS: 0.06480449789928065, DISTANCE: 0.3614229228761461
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7354, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [18/25] Loss: 0.06510701677516888, RECONS: 0.06474461230008226, DISTANCE: 0.36240441548196894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7338, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [19/25] Loss: 0.06509994808584452, RECONS: 0.06473721247166395, DISTANCE: 0.3627354562282562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9019, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7363, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [20/25] Loss: 0.06521247735335714, RECONS: 0.06484956950658843, DISTANCE: 0.362907676469712
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9207, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7282, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [21/25] Loss: 0.06531677073375745, RECONS: 0.06495478867807171, DISTANCE: 0.36198177662762726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5937, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [22/25] Loss: 0.06539462004666743, RECONS: 0.0650319377689258, DISTANCE: 0.36268216112385626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9087, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [23/25] Loss: 0.06533566288029154, RECONS: 0.06497304684792955, DISTANCE: 0.36261578400929767
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5936, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8965, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[51/300] [24/25] Loss: 0.06546990558505059, RECONS: 0.06509209737181663, DISTANCE: 0.3778080368041992
Test[51/300] [0/2] Loss: 0.077813521027565, RECONS: 0.07652541995048523, DISTANCE: 1.2880990505218506
Test[51/300] [1/2] Loss: 0.0784631073474884, RECONS: 0.07679760456085205, DISTANCE: 1.6655033826828003
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9290, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [0/25] Loss: 0.06620226055383682, RECONS: 0.06583796441555023, DISTANCE: 0.36429595947265625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9302, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [1/25] Loss: 0.06516972184181213, RECONS: 0.06481097638607025, DISTANCE: 0.3587437868118286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7242, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [2/25] Loss: 0.06441569576660792, RECONS: 0.06404405335585277, DISTANCE: 0.3716415564219157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7321, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [3/25] Loss: 0.06546769849956036, RECONS: 0.06510693207383156, DISTANCE: 0.3607651889324188
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8779, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [4/25] Loss: 0.06535978466272355, RECONS: 0.06499721556901931, DISTANCE: 0.3625688076019287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7322, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [5/25] Loss: 0.0652892142534256, RECONS: 0.0649263064066569, DISTANCE: 0.3629077672958374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7308, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [6/25] Loss: 0.06484302346195493, RECONS: 0.06448150745459966, DISTANCE: 0.3615159477506365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9286, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7293, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [7/25] Loss: 0.06505636684596539, RECONS: 0.06469615735113621, DISTANCE: 0.3602096736431122
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [8/25] Loss: 0.06486314038435619, RECONS: 0.0645036862956153, DISTANCE: 0.35945449935065377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8981, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [9/25] Loss: 0.06467403322458268, RECONS: 0.06431953310966491, DISTANCE: 0.3545004606246948
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9116, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [10/25] Loss: 0.06474952873858539, RECONS: 0.06439188867807388, DISTANCE: 0.35764033144170587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9261, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [11/25] Loss: 0.06459248873094718, RECONS: 0.06423852406442165, DISTANCE: 0.353964904944102
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9196, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [12/25] Loss: 0.06450906223975696, RECONS: 0.06415492124282397, DISTANCE: 0.3541413637307974
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8523, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [13/25] Loss: 0.06442419652427946, RECONS: 0.06407297349401883, DISTANCE: 0.35122362204960417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7317, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [14/25] Loss: 0.06430680304765701, RECONS: 0.06395627111196518, DISTANCE: 0.3505322774251302
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8764, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7415, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [15/25] Loss: 0.0644730543717742, RECONS: 0.0641232174821198, DISTANCE: 0.34983713924884796
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7380, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [16/25] Loss: 0.06430033791591139, RECONS: 0.06394765876671847, DISTANCE: 0.35267939287073474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7385, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [17/25] Loss: 0.06423537412451373, RECONS: 0.0638839424484306, DISTANCE: 0.3514317274093628
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7362, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [18/25] Loss: 0.06412022149092272, RECONS: 0.06377090199997551, DISTANCE: 0.34931947055615875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7305, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [19/25] Loss: 0.06408757250756025, RECONS: 0.06373569294810295, DISTANCE: 0.35187950134277346
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8490, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7283, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [20/25] Loss: 0.0639727491708029, RECONS: 0.06362151638382957, DISTANCE: 0.3512327784583682
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7314, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [21/25] Loss: 0.06396609341556375, RECONS: 0.06361504813486879, DISTANCE: 0.3510454134507613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9343, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7281, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [22/25] Loss: 0.06393994747296623, RECONS: 0.06358829691358235, DISTANCE: 0.351650709691255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9167, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [23/25] Loss: 0.06387960662444432, RECONS: 0.06352862544978659, DISTANCE: 0.35098129510879517
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[52/300] [24/25] Loss: 0.06381994575262069, RECONS: 0.0634531843662262, DISTANCE: 0.3667614936828613
Test[52/300] [0/2] Loss: 0.07466179877519608, RECONS: 0.07336392253637314, DISTANCE: 1.2978744506835938
Test[52/300] [1/2] Loss: 0.07426070794463158, RECONS: 0.07272497564554214, DISTANCE: 1.5357327461242676
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8763, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7272, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [0/25] Loss: 0.06488881260156631, RECONS: 0.0645352452993393, DISTANCE: 0.35356760025024414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7314, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [1/25] Loss: 0.06336271576583385, RECONS: 0.06300093978643417, DISTANCE: 0.3617761731147766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6220, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9425, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [2/25] Loss: 0.06248957042892774, RECONS: 0.06212178741892179, DISTANCE: 0.36778279145558673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8554, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7406, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [3/25] Loss: 0.06292297039180994, RECONS: 0.0625579571351409, DISTANCE: 0.36501240730285645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8641, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7386, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [4/25] Loss: 0.0627468153834343, RECONS: 0.062382443249225615, DISTANCE: 0.36437110900878905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8823, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7366, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [5/25] Loss: 0.06247163067261378, RECONS: 0.06209979330499967, DISTANCE: 0.37183650334676105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9528, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7336, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [6/25] Loss: 0.062360863600458415, RECONS: 0.061987479882580895, DISTANCE: 0.3733830622264317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7330, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [7/25] Loss: 0.06251103430986404, RECONS: 0.0621402645483613, DISTANCE: 0.37076881527900696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7257, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [8/25] Loss: 0.06261345744132996, RECONS: 0.06224247896009021, DISTANCE: 0.3709780110253228
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [9/25] Loss: 0.06287978067994118, RECONS: 0.06251105293631554, DISTANCE: 0.3687271595001221
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [10/25] Loss: 0.06277257678183643, RECONS: 0.0624079667031765, DISTANCE: 0.3646095882762562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9510, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [11/25] Loss: 0.06283674202859402, RECONS: 0.062467857263982296, DISTANCE: 0.36888453364372253
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [12/25] Loss: 0.06288941204547882, RECONS: 0.06252084586482781, DISTANCE: 0.3685658069757315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9461, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [13/25] Loss: 0.06276648837540831, RECONS: 0.062399446964263916, DISTANCE: 0.3670411450522287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7242, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [14/25] Loss: 0.06258932327230772, RECONS: 0.062224825968345006, DISTANCE: 0.36449713706970216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7315, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [15/25] Loss: 0.0626154828350991, RECONS: 0.06225520349107683, DISTANCE: 0.36027931421995163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9011, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7309, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [16/25] Loss: 0.06263468129669919, RECONS: 0.062275106635163814, DISTANCE: 0.35957478775697593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8496, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7292, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [17/25] Loss: 0.06259298200408618, RECONS: 0.062234812105695404, DISTANCE: 0.35816999938752914
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8995, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [18/25] Loss: 0.06254620046207779, RECONS: 0.06219019681999558, DISTANCE: 0.35600377383985016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5945, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8937, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [19/25] Loss: 0.06266744155436754, RECONS: 0.062313801236450674, DISTANCE: 0.3536405384540558
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8764, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [20/25] Loss: 0.06264820020823252, RECONS: 0.06229454545038087, DISTANCE: 0.35365493524642216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [21/25] Loss: 0.06261286833746867, RECONS: 0.0622598621994257, DISTANCE: 0.35300632498481055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9035, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [22/25] Loss: 0.06251105180253154, RECONS: 0.06215647867192393, DISTANCE: 0.3545732549999071
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8625, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [23/25] Loss: 0.062456297067304455, RECONS: 0.06210179906338453, DISTANCE: 0.35449807345867157
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6276, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.9058, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[53/300] [24/25] Loss: 0.062358428239822385, RECONS: 0.061987358033657076, DISTANCE: 0.3710702037811279
Test[53/300] [0/2] Loss: 0.07273777574300766, RECONS: 0.07145164906978607, DISTANCE: 1.2861275672912598
Test[53/300] [1/2] Loss: 0.07282879948616028, RECONS: 0.07115773111581802, DISTANCE: 1.671067476272583
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8574, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7305, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [0/25] Loss: 0.06000690907239914, RECONS: 0.05965953692793846, DISTANCE: 0.3473707437515259
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8261, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7413, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [1/25] Loss: 0.059876084327697754, RECONS: 0.05953383818268776, DISTANCE: 0.34224534034729004
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8185, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1., device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7458, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [2/25] Loss: 0.06107866515715917, RECONS: 0.06073133399089178, DISTANCE: 0.3473316828409831
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8641, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7445, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [3/25] Loss: 0.061381698586046696, RECONS: 0.06103303004056215, DISTANCE: 0.34866923093795776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9559, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7343, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [4/25] Loss: 0.061544474214315414, RECONS: 0.06118780672550202, DISTANCE: 0.3566681146621704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8452, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7230, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [5/25] Loss: 0.06185776678224405, RECONS: 0.061499898632367454, DISTANCE: 0.3578681747118632
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8777, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [6/25] Loss: 0.06162956090910094, RECONS: 0.06126792835337775, DISTANCE: 0.3616325003760202
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [7/25] Loss: 0.061678632628172636, RECONS: 0.06132625788450241, DISTANCE: 0.3523745685815811
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [8/25] Loss: 0.061605080548259944, RECONS: 0.061253327462408275, DISTANCE: 0.3517528110080295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9040, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [9/25] Loss: 0.06160081624984741, RECONS: 0.06124752089381218, DISTANCE: 0.3532952666282654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9362, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [10/25] Loss: 0.061373953792181885, RECONS: 0.061024415560744026, DISTANCE: 0.3495380553332242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [11/25] Loss: 0.061206805830200516, RECONS: 0.060853411753972374, DISTANCE: 0.35339386264483136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8386, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [12/25] Loss: 0.061049521542512454, RECONS: 0.06070018903567241, DISTANCE: 0.3493321950619037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7348, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [13/25] Loss: 0.06114610683705125, RECONS: 0.06079599926514285, DISTANCE: 0.3501071674483163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7330, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [14/25] Loss: 0.06121065765619278, RECONS: 0.06086117501060168, DISTANCE: 0.3494823217391968
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5888, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7362, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [15/25] Loss: 0.061549773905426264, RECONS: 0.06120065995492041, DISTANCE: 0.3491135612130165
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8775, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [16/25] Loss: 0.061530855429523135, RECONS: 0.06118361016406732, DISTANCE: 0.34724488679100485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8867, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [17/25] Loss: 0.06152117335134082, RECONS: 0.061172239068481654, DISTANCE: 0.3489338556925456
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [18/25] Loss: 0.06152498173086267, RECONS: 0.06117590183490201, DISTANCE: 0.3490795336271587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8662, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [19/25] Loss: 0.06138162147253752, RECONS: 0.06103127524256706, DISTANCE: 0.35034592151641847
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9638, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [20/25] Loss: 0.06129688255134083, RECONS: 0.060945862460704076, DISTANCE: 0.35101971739814397
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7258, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [21/25] Loss: 0.06141506457193331, RECONS: 0.0610643554140221, DISTANCE: 0.35070882602171466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9406, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7300, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [22/25] Loss: 0.06133843099941378, RECONS: 0.06098837194883305, DISTANCE: 0.3500586748123169
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7300, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [23/25] Loss: 0.06127140081177155, RECONS: 0.0609202596048514, DISTANCE: 0.35114091138044995
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8719, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7244, device='cuda:0', grad_fn=<MeanBackward0>)
Train[54/300] [24/25] Loss: 0.06129135683178902, RECONS: 0.060924702435731885, DISTANCE: 0.3666540670394898
Test[54/300] [0/2] Loss: 0.07249574363231659, RECONS: 0.07122917473316193, DISTANCE: 1.2665724754333496
Test[54/300] [1/2] Loss: 0.07247945666313171, RECONS: 0.07097046822309494, DISTANCE: 1.5089918971061707
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8561, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [0/25] Loss: 0.05971352756023407, RECONS: 0.059371016919612885, DISTANCE: 0.3425121307373047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [1/25] Loss: 0.06018346548080444, RECONS: 0.05983931012451649, DISTANCE: 0.34415602684020996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9112, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [2/25] Loss: 0.059780231366554894, RECONS: 0.059439390897750854, DISTANCE: 0.34084081649780273
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8574, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [3/25] Loss: 0.0602477565407753, RECONS: 0.059904965572059155, DISTANCE: 0.3427913784980774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8633, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [4/25] Loss: 0.06033658683300018, RECONS: 0.059980230033397676, DISTANCE: 0.35635714530944823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8676, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [5/25] Loss: 0.0602637796352307, RECONS: 0.05991482610503832, DISTANCE: 0.34895376364390057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [6/25] Loss: 0.060028230505330224, RECONS: 0.059677909527506144, DISTANCE: 0.3503214291163853
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [7/25] Loss: 0.05981911579146981, RECONS: 0.0594656728208065, DISTANCE: 0.3534434288740158
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9443, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [8/25] Loss: 0.059887839688195124, RECONS: 0.05953374629219373, DISTANCE: 0.3540937238269382
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6213, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9218, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7259, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [9/25] Loss: 0.05962204970419407, RECONS: 0.05926900021731853, DISTANCE: 0.35304962396621703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [10/25] Loss: 0.059426792304624214, RECONS: 0.059075430712916634, DISTANCE: 0.3513616973703558
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8745, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7304, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [11/25] Loss: 0.059644745041926704, RECONS: 0.059293913654983044, DISTANCE: 0.350831538438797
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9133, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [12/25] Loss: 0.05950988227358231, RECONS: 0.05915914017420549, DISTANCE: 0.3507422208786011
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8746, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [13/25] Loss: 0.05954685487917492, RECONS: 0.059198222522224696, DISTANCE: 0.34863236120768953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [14/25] Loss: 0.05956382652123769, RECONS: 0.05921651646494865, DISTANCE: 0.347309939066569
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8902, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [15/25] Loss: 0.05969894025474787, RECONS: 0.05935036949813366, DISTANCE: 0.3485706150531769
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8862, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [16/25] Loss: 0.05967681723482469, RECONS: 0.05932990987511242, DISTANCE: 0.34690722998450785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [17/25] Loss: 0.05959086741010348, RECONS: 0.05924393071068658, DISTANCE: 0.34693655040529037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9401, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [18/25] Loss: 0.05958584735268041, RECONS: 0.059237015482626464, DISTANCE: 0.34883165986914383
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7298, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [19/25] Loss: 0.05942664723843336, RECONS: 0.05907612107694149, DISTANCE: 0.35052589178085325
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7341, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [20/25] Loss: 0.05953251304371016, RECONS: 0.059182311807359965, DISTANCE: 0.3502009142012823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8770, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7351, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [21/25] Loss: 0.0594935417175293, RECONS: 0.05914375964890827, DISTANCE: 0.349781719121066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7317, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [22/25] Loss: 0.05951192424349163, RECONS: 0.05916067067047824, DISTANCE: 0.3512531622596409
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8536, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [23/25] Loss: 0.05937802356978258, RECONS: 0.059026844799518585, DISTANCE: 0.3511783331632614
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[55/300] [24/25] Loss: 0.05938934713602066, RECONS: 0.05902265638113022, DISTANCE: 0.36669025897979735
Test[55/300] [0/2] Loss: 0.07225444912910461, RECONS: 0.07080595940351486, DISTANCE: 1.448486328125
Test[55/300] [1/2] Loss: 0.07202781736850739, RECONS: 0.0702812448143959, DISTANCE: 1.7465693950653076
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [0/25] Loss: 0.06001558527350426, RECONS: 0.05969596654176712, DISTANCE: 0.3196185827255249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [1/25] Loss: 0.05940922349691391, RECONS: 0.05907076969742775, DISTANCE: 0.3384532332420349
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [2/25] Loss: 0.05885536720355352, RECONS: 0.05851864814758301, DISTANCE: 0.33671820163726807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9030, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [3/25] Loss: 0.05887499079108238, RECONS: 0.058533256873488426, DISTANCE: 0.3417331576347351
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [4/25] Loss: 0.05841493457555771, RECONS: 0.05807002037763596, DISTANCE: 0.34491353034973143
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [5/25] Loss: 0.05849404695133368, RECONS: 0.05814529458681742, DISTANCE: 0.3487517436345418
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8561, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [6/25] Loss: 0.05850255489349365, RECONS: 0.05815707519650459, DISTANCE: 0.34547930104391916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [7/25] Loss: 0.05848845420405269, RECONS: 0.05814668070524931, DISTANCE: 0.3417731076478958
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8130, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [8/25] Loss: 0.058362234797742635, RECONS: 0.05802114183704058, DISTANCE: 0.34109249379899764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6187, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8597, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7191, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [9/25] Loss: 0.05823008716106415, RECONS: 0.05788936167955398, DISTANCE: 0.3407251834869385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8542, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7254, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [10/25] Loss: 0.05811899290843443, RECONS: 0.05777940391139551, DISTANCE: 0.3395886096087369
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7267, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [11/25] Loss: 0.05810397397726774, RECONS: 0.05776481299350659, DISTANCE: 0.3391604920228322
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9052, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [12/25] Loss: 0.05815019745093126, RECONS: 0.05781110261495297, DISTANCE: 0.33909428119659424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8298, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [13/25] Loss: 0.05808403396180698, RECONS: 0.05774676001497677, DISTANCE: 0.33727331672395977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8782, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [14/25] Loss: 0.058028239756822586, RECONS: 0.057691196103890736, DISTANCE: 0.33704305489857994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [15/25] Loss: 0.05799162317998707, RECONS: 0.05765214655548334, DISTANCE: 0.33947595208883286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [16/25] Loss: 0.05797690613304868, RECONS: 0.057639666997334534, DISTANCE: 0.3372384169522454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6209, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [17/25] Loss: 0.05783283772567908, RECONS: 0.05749461779163943, DISTANCE: 0.33821919229295516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [18/25] Loss: 0.05772490897460988, RECONS: 0.05738665300764536, DISTANCE: 0.3382553301359478
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8712, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7259, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [19/25] Loss: 0.057808840088546275, RECONS: 0.05746844429522753, DISTANCE: 0.3403951168060303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8535, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7262, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [20/25] Loss: 0.05790592481692632, RECONS: 0.05756493391735213, DISTANCE: 0.3409902538572039
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9211, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [21/25] Loss: 0.057998426258563995, RECONS: 0.05765745009888302, DISTANCE: 0.340975593436848
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [22/25] Loss: 0.05796216201523076, RECONS: 0.057620154126830726, DISTANCE: 0.34200727421304455
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8571, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [23/25] Loss: 0.05790530750527978, RECONS: 0.057563848017404474, DISTANCE: 0.3414589464664459
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5962, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8532, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[56/300] [24/25] Loss: 0.05794630825519562, RECONS: 0.057591829150915146, DISTANCE: 0.35447853088378906
Test[56/300] [0/2] Loss: 0.06874539703130722, RECONS: 0.06739136576652527, DISTANCE: 1.3540325164794922
Test[56/300] [1/2] Loss: 0.06937487050890923, RECONS: 0.06783900409936905, DISTANCE: 1.53586745262146
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9566, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [0/25] Loss: 0.05606226250529289, RECONS: 0.05573121830821037, DISTANCE: 0.33104419708251953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8238, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [1/25] Loss: 0.056057315319776535, RECONS: 0.05570179410278797, DISTANCE: 0.35552072525024414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8514, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [2/25] Loss: 0.05579738443096479, RECONS: 0.055435437709093094, DISTANCE: 0.36194578806559247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [3/25] Loss: 0.056355347856879234, RECONS: 0.05599581357091665, DISTANCE: 0.3595331907272339
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8290, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [4/25] Loss: 0.05614529922604561, RECONS: 0.055788391083478925, DISTANCE: 0.35690720081329347
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8219, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [5/25] Loss: 0.05623046805461248, RECONS: 0.05587675981223583, DISTANCE: 0.35370757182439166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [6/25] Loss: 0.056187961782727926, RECONS: 0.05583488515445164, DISTANCE: 0.35307620252881733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8736, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [7/25] Loss: 0.05634384602308273, RECONS: 0.05598900280892849, DISTANCE: 0.3548426777124405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8504, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [8/25] Loss: 0.05634466972615984, RECONS: 0.05598655425839954, DISTANCE: 0.35811495780944824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8909, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [9/25] Loss: 0.056194540858268735, RECONS: 0.055839181691408155, DISTANCE: 0.35535880327224734
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [10/25] Loss: 0.05633764070543376, RECONS: 0.05598185719414191, DISTANCE: 0.35578322410583496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9517, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [11/25] Loss: 0.05629609618335962, RECONS: 0.05594340960184733, DISTANCE: 0.35268618663152057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8894, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [12/25] Loss: 0.05617478862404823, RECONS: 0.05582048572026766, DISTANCE: 0.35430249801048863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [13/25] Loss: 0.05604238675108978, RECONS: 0.05568459576794079, DISTANCE: 0.35779052121298655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8333, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7261, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [14/25] Loss: 0.05601879954338074, RECONS: 0.05566185812155406, DISTANCE: 0.3569410085678101
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7289, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [15/25] Loss: 0.05608426290564239, RECONS: 0.05572792002931237, DISTANCE: 0.35634247213602066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [16/25] Loss: 0.056024104795035196, RECONS: 0.05566781605867779, DISTANCE: 0.3562884120380177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8275, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [17/25] Loss: 0.05612835039695104, RECONS: 0.05577228135532803, DISTANCE: 0.356068664126926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9125, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [18/25] Loss: 0.05616840347647667, RECONS: 0.05581236473823849, DISTANCE: 0.3560383194371274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6971, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [19/25] Loss: 0.05611495040357113, RECONS: 0.05576078370213509, DISTANCE: 0.3541662395000458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [20/25] Loss: 0.05611903468767802, RECONS: 0.05576419457793236, DISTANCE: 0.3548396541958764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6922, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [21/25] Loss: 0.05616408078507944, RECONS: 0.055811279538002884, DISTANCE: 0.3528007377277721
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9118, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [22/25] Loss: 0.056157563853523, RECONS: 0.05580663648636445, DISTANCE: 0.3509268553360649
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8155, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [23/25] Loss: 0.05608957028016448, RECONS: 0.05573944809536139, DISTANCE: 0.3501216769218445
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5948, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[57/300] [24/25] Loss: 0.05619835659861565, RECONS: 0.055834961533546446, DISTANCE: 0.36339452743530276
Test[57/300] [0/2] Loss: 0.06831044703722, RECONS: 0.06663767248392105, DISTANCE: 1.6727752685546875
Test[57/300] [1/2] Loss: 0.06811748817563057, RECONS: 0.06610153242945671, DISTANCE: 2.0159552097320557
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8539, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [0/25] Loss: 0.05512077733874321, RECONS: 0.05480896681547165, DISTANCE: 0.311808705329895
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8676, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [1/25] Loss: 0.054968684911727905, RECONS: 0.05461183935403824, DISTANCE: 0.3568440079689026
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [2/25] Loss: 0.0552510159711043, RECONS: 0.054909554620583854, DISTANCE: 0.3414599498112996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [3/25] Loss: 0.05535004194825888, RECONS: 0.055006688460707664, DISTANCE: 0.3433527946472168
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8803, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [4/25] Loss: 0.05501196160912514, RECONS: 0.05466218888759613, DISTANCE: 0.3497720718383789
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8644, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [5/25] Loss: 0.05501715838909149, RECONS: 0.05466564123829206, DISTANCE: 0.35151684284210205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6919, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [6/25] Loss: 0.05513613564627511, RECONS: 0.054789824677365165, DISTANCE: 0.3463109391076224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9288, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [7/25] Loss: 0.054943307768553495, RECONS: 0.05459910212084651, DISTANCE: 0.34420570731163025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8391, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [8/25] Loss: 0.05491632968187332, RECONS: 0.054569454242785774, DISTANCE: 0.3468756940629747
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8235, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7253, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [9/25] Loss: 0.055231508985161784, RECONS: 0.0548830259591341, DISTANCE: 0.34848318099975584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8279, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7263, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [10/25] Loss: 0.05552909794178876, RECONS: 0.05518022348934954, DISTANCE: 0.34887461228804156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [11/25] Loss: 0.055331453680992126, RECONS: 0.05497848459829887, DISTANCE: 0.3529692093531291
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8902, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [12/25] Loss: 0.055209812636558823, RECONS: 0.054857966131888904, DISTANCE: 0.35184658490694487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [13/25] Loss: 0.05500558630696365, RECONS: 0.05465165765157768, DISTANCE: 0.353928804397583
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8649, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [14/25] Loss: 0.05490149483084679, RECONS: 0.054547901699940365, DISTANCE: 0.35359322230021156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [15/25] Loss: 0.054876776644960046, RECONS: 0.054524836828932166, DISTANCE: 0.35193981975317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [16/25] Loss: 0.05474601751741241, RECONS: 0.054392284111065024, DISTANCE: 0.35373350451974306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9053, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [17/25] Loss: 0.05460593394107289, RECONS: 0.05424931376344628, DISTANCE: 0.35662025213241577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [18/25] Loss: 0.05458427848000275, RECONS: 0.05422762997056309, DISTANCE: 0.3566486709996274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [19/25] Loss: 0.05472037177532911, RECONS: 0.05436475798487663, DISTANCE: 0.35561385154724123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8362, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [20/25] Loss: 0.05476198771170208, RECONS: 0.0544052989709945, DISTANCE: 0.35668872651599703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8319, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [21/25] Loss: 0.05461414683271538, RECONS: 0.0542590067806569, DISTANCE: 0.35514007915150037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [22/25] Loss: 0.054541010247624436, RECONS: 0.05418501178855482, DISTANCE: 0.355998536814814
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [23/25] Loss: 0.05459295523663362, RECONS: 0.054237112092475094, DISTANCE: 0.35584327081839245
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8192, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[58/300] [24/25] Loss: 0.05452728644013405, RECONS: 0.05415522009134292, DISTANCE: 0.37206647872924803
Test[58/300] [0/2] Loss: 0.06587135791778564, RECONS: 0.06435275077819824, DISTANCE: 1.5186070203781128
Test[58/300] [1/2] Loss: 0.06631062179803848, RECONS: 0.06448127329349518, DISTANCE: 1.8293489813804626
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8460, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6914, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [0/25] Loss: 0.051711827516555786, RECONS: 0.05140708014369011, DISTANCE: 0.3047490119934082
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9511, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [1/25] Loss: 0.05223147012293339, RECONS: 0.05192524380981922, DISTANCE: 0.3062276840209961
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9043, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [2/25] Loss: 0.05269628018140793, RECONS: 0.052369176099697747, DISTANCE: 0.3271048863728841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [3/25] Loss: 0.05341712385416031, RECONS: 0.05308685638010502, DISTANCE: 0.33026838302612305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [4/25] Loss: 0.05328062996268272, RECONS: 0.05294545069336891, DISTANCE: 0.33517980575561523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [5/25] Loss: 0.05330009882648786, RECONS: 0.05296459297339121, DISTANCE: 0.33550628026326496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6221, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [6/25] Loss: 0.052936818450689316, RECONS: 0.052604272429432185, DISTANCE: 0.33254643848964144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [7/25] Loss: 0.05274100322276354, RECONS: 0.05240690754726529, DISTANCE: 0.3340958207845688
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6240, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8533, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [8/25] Loss: 0.05238441709015104, RECONS: 0.0520523956252469, DISTANCE: 0.33202148808373344
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8267, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [9/25] Loss: 0.05234087407588959, RECONS: 0.05200970508158207, DISTANCE: 0.33116902112960817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8233, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [10/25] Loss: 0.05248987674713135, RECONS: 0.05215822600505569, DISTANCE: 0.3316508314826272
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8074, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [11/25] Loss: 0.0524090975522995, RECONS: 0.05207685101777315, DISTANCE: 0.33224670092264813
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6249, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9342, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [12/25] Loss: 0.05221302750018927, RECONS: 0.05188137493454493, DISTANCE: 0.3316526412963867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [13/25] Loss: 0.05233843331890447, RECONS: 0.05200258136859962, DISTANCE: 0.33585197584969656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8572, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [14/25] Loss: 0.052432296921809514, RECONS: 0.052097472548484805, DISTANCE: 0.3348244031270345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5879, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8267, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [15/25] Loss: 0.052669288823381066, RECONS: 0.05233287764713168, DISTANCE: 0.33641109615564346
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8869, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6873, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [16/25] Loss: 0.05279588962302489, RECONS: 0.05245920270681381, DISTANCE: 0.3366868706310497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6788, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [17/25] Loss: 0.052806016264690295, RECONS: 0.05247081733412213, DISTANCE: 0.33519889248741996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5955, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8543, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [18/25] Loss: 0.05292477615569767, RECONS: 0.052589954906388334, DISTANCE: 0.33482128695437785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [19/25] Loss: 0.052878772281110285, RECONS: 0.05254449639469385, DISTANCE: 0.3342759370803833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8481, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [20/25] Loss: 0.05287695888962064, RECONS: 0.052540456964856104, DISTANCE: 0.33650195598602295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8803, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [21/25] Loss: 0.052754318341612816, RECONS: 0.05241831493648616, DISTANCE: 0.3360033631324768
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8264, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [22/25] Loss: 0.05266916427923286, RECONS: 0.05233344079359718, DISTANCE: 0.3357234001159668
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [23/25] Loss: 0.052640104200690985, RECONS: 0.052305410305658974, DISTANCE: 0.33469374974568683
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6210, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[59/300] [24/25] Loss: 0.052496372014284136, RECONS: 0.05214812457561493, DISTANCE: 0.3482472705841064
Test[59/300] [0/2] Loss: 0.06386926770210266, RECONS: 0.06233922764658928, DISTANCE: 1.530036449432373
Test[59/300] [1/2] Loss: 0.06485409662127495, RECONS: 0.06293505616486073, DISTANCE: 1.919039249420166
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5928, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [0/25] Loss: 0.05690772086381912, RECONS: 0.0565970353782177, DISTANCE: 0.3106858730316162
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [1/25] Loss: 0.05544452741742134, RECONS: 0.05512643977999687, DISTANCE: 0.3180878758430481
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8530, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6894, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [2/25] Loss: 0.05415242786208788, RECONS: 0.053819465140501656, DISTANCE: 0.3329629103342692
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8767, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6826, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [3/25] Loss: 0.053232439793646336, RECONS: 0.05289577506482601, DISTANCE: 0.3366648554801941
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6783, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [4/25] Loss: 0.05360031425952912, RECONS: 0.05325906127691269, DISTANCE: 0.3412527561187744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6858, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [5/25] Loss: 0.053155481815338135, RECONS: 0.05281464010477066, DISTANCE: 0.3408416112263997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6913, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [6/25] Loss: 0.052901166890348704, RECONS: 0.05255087465047836, DISTANCE: 0.35029198442186626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [7/25] Loss: 0.05250658420845866, RECONS: 0.05215907841920853, DISTANCE: 0.34750571846961975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8182, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [8/25] Loss: 0.052436519828107625, RECONS: 0.05208941797415415, DISTANCE: 0.34710166189405656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9021, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [9/25] Loss: 0.05243636630475521, RECONS: 0.052090317755937574, DISTANCE: 0.3460482358932495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [10/25] Loss: 0.05251780931245197, RECONS: 0.052169891920956696, DISTANCE: 0.3479170257394964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [11/25] Loss: 0.05249253505220016, RECONS: 0.05214608212312063, DISTANCE: 0.3464525838692983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [12/25] Loss: 0.05249472392293123, RECONS: 0.052148235245392874, DISTANCE: 0.3464884116099431
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8834, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6902, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [13/25] Loss: 0.05230750063700335, RECONS: 0.051958349400333, DISTANCE: 0.3491509131022862
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9145, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6777, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [14/25] Loss: 0.05229310964544614, RECONS: 0.05194351747632027, DISTANCE: 0.3495919386545817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8876, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6748, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [15/25] Loss: 0.052253206027671695, RECONS: 0.0519052071031183, DISTANCE: 0.34799874573946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6806, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [16/25] Loss: 0.052266155753065556, RECONS: 0.05191770962932531, DISTANCE: 0.3484458783093621
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8514, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [17/25] Loss: 0.05212278188102775, RECONS: 0.051776774434579745, DISTANCE: 0.34600721465216744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [18/25] Loss: 0.052093062745897395, RECONS: 0.051745109848285974, DISTANCE: 0.3479526670355546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8408, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7232, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [19/25] Loss: 0.05196836236864329, RECONS: 0.051617357134819034, DISTANCE: 0.3510050058364868
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8475, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7281, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [20/25] Loss: 0.051834747017849056, RECONS: 0.05148477337899662, DISTANCE: 0.34997341746375676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8371, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [21/25] Loss: 0.05183728276328607, RECONS: 0.05148796923458576, DISTANCE: 0.34931331331079657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8208, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [22/25] Loss: 0.05177926288350769, RECONS: 0.05143029501904612, DISTANCE: 0.34896772322447406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8960, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [23/25] Loss: 0.05175879752884308, RECONS: 0.05140844872221351, DISTANCE: 0.3503485967715581
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6900, device='cuda:0', grad_fn=<MeanBackward0>)
Train[60/300] [24/25] Loss: 0.05167992502450943, RECONS: 0.051314148157835006, DISTANCE: 0.36577667713165285
Test[60/300] [0/2] Loss: 0.06288362294435501, RECONS: 0.06143706291913986, DISTANCE: 1.4465608596801758
Test[60/300] [1/2] Loss: 0.06411007046699524, RECONS: 0.062232084572315216, DISTANCE: 1.8779857158660889
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8297, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6831, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [0/25] Loss: 0.05098975822329521, RECONS: 0.05062055587768555, DISTANCE: 0.3692026138305664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8806, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6809, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [1/25] Loss: 0.050102196633815765, RECONS: 0.04975162073969841, DISTANCE: 0.35057687759399414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6896, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [2/25] Loss: 0.05025853092471758, RECONS: 0.04989875480532646, DISTANCE: 0.35977645715077716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8194, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [3/25] Loss: 0.04992155730724335, RECONS: 0.04956740140914917, DISTANCE: 0.35415610671043396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [4/25] Loss: 0.04983415678143501, RECONS: 0.04946770891547203, DISTANCE: 0.36644806861877444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [5/25] Loss: 0.04950642337401708, RECONS: 0.04914899729192257, DISTANCE: 0.3574262460072835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8368, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [6/25] Loss: 0.049433860927820206, RECONS: 0.049071695655584335, DISTANCE: 0.3621652466910226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5877, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8040, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [7/25] Loss: 0.05038454011082649, RECONS: 0.05002242000773549, DISTANCE: 0.36211995780467987
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [8/25] Loss: 0.050427223245302834, RECONS: 0.050065831591685615, DISTANCE: 0.36139149136013454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8465, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6880, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [9/25] Loss: 0.05020916610956192, RECONS: 0.04985127635300159, DISTANCE: 0.357889723777771
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6794, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [10/25] Loss: 0.05008918284015222, RECONS: 0.049732766368172386, DISTANCE: 0.35641642050309613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6754, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [11/25] Loss: 0.05016250039140383, RECONS: 0.04980847053229809, DISTANCE: 0.35402995347976685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8995, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6770, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [12/25] Loss: 0.0502602976675217, RECONS: 0.04990611769832098, DISTANCE: 0.35417998754061186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6782, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [13/25] Loss: 0.050208527860896926, RECONS: 0.049855870593871386, DISTANCE: 0.3526571648461478
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8347, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6834, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [14/25] Loss: 0.050215326994657514, RECONS: 0.0498640442887942, DISTANCE: 0.35128249327341715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9091, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6873, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [15/25] Loss: 0.050153784453868866, RECONS: 0.049802274676039815, DISTANCE: 0.35150960832834244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9177, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [16/25] Loss: 0.05017051188384786, RECONS: 0.04982126701404067, DISTANCE: 0.3492446156109081
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8183, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [17/25] Loss: 0.050085030082199306, RECONS: 0.049732887289590307, DISTANCE: 0.3521426452530755
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [18/25] Loss: 0.049984470990143325, RECONS: 0.04963552324395431, DISTANCE: 0.34894754384693344
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [19/25] Loss: 0.04984293170273304, RECONS: 0.049496034532785414, DISTANCE: 0.3468969464302063
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8384, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [20/25] Loss: 0.049788908944243475, RECONS: 0.04944257065653801, DISTANCE: 0.34633801096961614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8586, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [21/25] Loss: 0.0496591641144319, RECONS: 0.04931378042833372, DISTANCE: 0.3453833948482167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [22/25] Loss: 0.04962108608173287, RECONS: 0.049275388050338494, DISTANCE: 0.34569782796113385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [23/25] Loss: 0.049597498029470444, RECONS: 0.04925005572537581, DISTANCE: 0.347442165017128
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6921, device='cuda:0', grad_fn=<MeanBackward0>)
Train[61/300] [24/25] Loss: 0.049517265111207964, RECONS: 0.049155211299657824, DISTANCE: 0.3620536708831787
Test[61/300] [0/2] Loss: 0.05881301686167717, RECONS: 0.05752643942832947, DISTANCE: 1.28657865524292
Test[61/300] [1/2] Loss: 0.05894124694168568, RECONS: 0.057210277765989304, DISTANCE: 1.7309696674346924
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6898, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [0/25] Loss: 0.048251837491989136, RECONS: 0.04790893942117691, DISTANCE: 0.3428964614868164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6906, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [1/25] Loss: 0.04783652722835541, RECONS: 0.047473907470703125, DISTANCE: 0.3626185655593872
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8661, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6944, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [2/25] Loss: 0.048214320093393326, RECONS: 0.04783914859096209, DISTANCE: 0.3751703103383382
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [3/25] Loss: 0.04831204377114773, RECONS: 0.04794520232826471, DISTANCE: 0.36684083938598633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8119, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [4/25] Loss: 0.04833450615406036, RECONS: 0.04797681495547294, DISTANCE: 0.35769095420837405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7963, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [5/25] Loss: 0.048180339857935905, RECONS: 0.04782682533065478, DISTANCE: 0.3535141547520955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8373, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [6/25] Loss: 0.04828613411102976, RECONS: 0.047935039337192266, DISTANCE: 0.35109427997044157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9214, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [7/25] Loss: 0.04817699594423175, RECONS: 0.04782574251294136, DISTANCE: 0.35125283896923065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8303, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [8/25] Loss: 0.048232853412628174, RECONS: 0.047883030441072255, DISTANCE: 0.34982256094614667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [9/25] Loss: 0.04839675314724445, RECONS: 0.04804319851100445, DISTANCE: 0.35355414152145387
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [10/25] Loss: 0.04824706674976782, RECONS: 0.04789384149692275, DISTANCE: 0.3532246459614147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9125, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [11/25] Loss: 0.04806331389894088, RECONS: 0.04771143818895022, DISTANCE: 0.35187514623006183
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7916, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-1.0000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [12/25] Loss: 0.04800657899333881, RECONS: 0.047655289562848896, DISTANCE: 0.35128898804004377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8620, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [13/25] Loss: 0.048033760860562325, RECONS: 0.04768232282783304, DISTANCE: 0.3514376793588911
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8152, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6912, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [14/25] Loss: 0.04804659560322762, RECONS: 0.047698485851287845, DISTANCE: 0.34810950756073
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6897, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [15/25] Loss: 0.048065524315461516, RECONS: 0.04771961085498333, DISTANCE: 0.3459132984280586
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6867, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [16/25] Loss: 0.04807390886194566, RECONS: 0.04772658514625886, DISTANCE: 0.3473235298605526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8634, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6859, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [17/25] Loss: 0.04802393064730697, RECONS: 0.04767526872456074, DISTANCE: 0.3486618399620056
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5904, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8538, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6942, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [18/25] Loss: 0.048206890492062816, RECONS: 0.04785966324178796, DISTANCE: 0.34722718439604106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7859, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6928, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [19/25] Loss: 0.04809692278504372, RECONS: 0.047749773040413855, DISTANCE: 0.34714962244033815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [20/25] Loss: 0.0480758116713592, RECONS: 0.04772918600411642, DISTANCE: 0.3466254983629499
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8665, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6905, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [21/25] Loss: 0.04802219722081314, RECONS: 0.04767521741715344, DISTANCE: 0.3469796722585505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6895, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [22/25] Loss: 0.04792455405644749, RECONS: 0.0475781359102415, DISTANCE: 0.34641796609629755
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6897, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [23/25] Loss: 0.04787594514588515, RECONS: 0.04753018884609143, DISTANCE: 0.3457561532656352
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6915, device='cuda:0', grad_fn=<MeanBackward0>)
Train[62/300] [24/25] Loss: 0.04782480984926224, RECONS: 0.047464182525873186, DISTANCE: 0.36062719345092775
Test[62/300] [0/2] Loss: 0.057599589228630066, RECONS: 0.05624775215983391, DISTANCE: 1.3518357276916504
Test[62/300] [1/2] Loss: 0.05716133676469326, RECONS: 0.05562104657292366, DISTANCE: 1.5402887463569641
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8309, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [0/25] Loss: 0.04857253655791283, RECONS: 0.04824954271316528, DISTANCE: 0.3229924440383911
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8080, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [1/25] Loss: 0.0485756229609251, RECONS: 0.048222508281469345, DISTANCE: 0.35311442613601685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8489, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [2/25] Loss: 0.04745624586939812, RECONS: 0.04712152977784475, DISTANCE: 0.33471635977427167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8104, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [3/25] Loss: 0.04738754592835903, RECONS: 0.04704873450100422, DISTANCE: 0.3388120234012604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6934, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [4/25] Loss: 0.047395802289247516, RECONS: 0.047039149701595305, DISTANCE: 0.35665342807769773
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6850, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [5/25] Loss: 0.04743432564040025, RECONS: 0.04707874419788519, DISTANCE: 0.35558201869328815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6808, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [6/25] Loss: 0.047506269067525864, RECONS: 0.047151203134230206, DISTANCE: 0.3550663675580706
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8366, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6727, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [7/25] Loss: 0.047554682940244675, RECONS: 0.047198007348924875, DISTANCE: 0.35667604207992554
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8348, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6758, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [8/25] Loss: 0.047549032502704196, RECONS: 0.04719480747977892, DISTANCE: 0.3542255295647515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6791, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [9/25] Loss: 0.047356510907411574, RECONS: 0.04700219668447971, DISTANCE: 0.35431479215621947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6875, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [10/25] Loss: 0.04732665114782073, RECONS: 0.04697555743835189, DISTANCE: 0.3510943759571422
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [11/25] Loss: 0.04718225635588169, RECONS: 0.046828029987712703, DISTANCE: 0.354226956764857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [12/25] Loss: 0.04730003699660301, RECONS: 0.046945480486521356, DISTANCE: 0.3545569639939528
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [13/25] Loss: 0.047122026926704814, RECONS: 0.04676695407501289, DISTANCE: 0.3550733838762556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8335, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [14/25] Loss: 0.047074177612861, RECONS: 0.04671348507205645, DISTANCE: 0.36069297790527344
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [15/25] Loss: 0.046890876488760114, RECONS: 0.046531221363693476, DISTANCE: 0.35965561866760254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [16/25] Loss: 0.04678265158744419, RECONS: 0.04642420525059981, DISTANCE: 0.35844676634844613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6918, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [17/25] Loss: 0.046683543258243136, RECONS: 0.04632669024997287, DISTANCE: 0.35685346523920697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6881, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [18/25] Loss: 0.04669243626688656, RECONS: 0.04633675280370211, DISTANCE: 0.35568392276763916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8008, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [19/25] Loss: 0.04656447768211365, RECONS: 0.046209607645869254, DISTANCE: 0.35487045645713805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6883, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [20/25] Loss: 0.04645518497342155, RECONS: 0.04610135583650498, DISTANCE: 0.3538296109154111
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8664, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6900, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [21/25] Loss: 0.04633987627246163, RECONS: 0.04598713530735536, DISTANCE: 0.3527413715015758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8107, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [22/25] Loss: 0.046266737677480865, RECONS: 0.045915901984857475, DISTANCE: 0.35083609041960345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [23/25] Loss: 0.04629707150161266, RECONS: 0.045946737906585135, DISTANCE: 0.35033400853474933
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7298, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6908, device='cuda:0', grad_fn=<MeanBackward0>)
Train[63/300] [24/25] Loss: 0.04631691947579384, RECONS: 0.04595128238201141, DISTANCE: 0.3656374788284302
Test[63/300] [0/2] Loss: 0.05379992350935936, RECONS: 0.052648987621068954, DISTANCE: 1.150937557220459
Test[63/300] [1/2] Loss: 0.054118840023875237, RECONS: 0.05262690596282482, DISTANCE: 1.4919340014457703
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6891, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [0/25] Loss: 0.04519059136509895, RECONS: 0.04488895460963249, DISTANCE: 0.3016359806060791
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8070, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6820, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [1/25] Loss: 0.045441290363669395, RECONS: 0.045122889801859856, DISTANCE: 0.3183993101119995
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8198, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6847, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [2/25] Loss: 0.04567020510633787, RECONS: 0.045345849047104515, DISTANCE: 0.324355681737264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6872, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [3/25] Loss: 0.04556697141379118, RECONS: 0.04524404648691416, DISTANCE: 0.32292479276657104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8652, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6920, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [4/25] Loss: 0.04572167620062828, RECONS: 0.04539090320467949, DISTANCE: 0.33077311515808105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6925, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [5/25] Loss: 0.045966423427065216, RECONS: 0.045633181308706604, DISTANCE: 0.3332420587539673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8161, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6869, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [6/25] Loss: 0.04590014421514103, RECONS: 0.045567343809774945, DISTANCE: 0.33280021803719656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8081, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6833, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [7/25] Loss: 0.04584205849096179, RECONS: 0.04550750693306327, DISTANCE: 0.3345513641834259
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8294, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6809, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [8/25] Loss: 0.045690514561202794, RECONS: 0.04535280250840717, DISTANCE: 0.3377117845747206
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8164, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6852, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [9/25] Loss: 0.04535960592329502, RECONS: 0.045021742954850195, DISTANCE: 0.3378627896308899
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [10/25] Loss: 0.04529783773151311, RECONS: 0.04495974291454662, DISTANCE: 0.33809472214091907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [11/25] Loss: 0.04527968013038238, RECONS: 0.04493957944214344, DISTANCE: 0.34010061621665955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7434, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [12/25] Loss: 0.045205261558294296, RECONS: 0.04486619910368553, DISTANCE: 0.33906233310699463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7495, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [13/25] Loss: 0.04541697273296969, RECONS: 0.045079667919448445, DISTANCE: 0.3373048050062997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [14/25] Loss: 0.04546508093674977, RECONS: 0.04512706100940704, DISTANCE: 0.33801985581715904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6801, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [15/25] Loss: 0.045369580620899796, RECONS: 0.04503230517730117, DISTANCE: 0.3372754380106926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6715, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [16/25] Loss: 0.04537858551039415, RECONS: 0.04504155148478115, DISTANCE: 0.33703399405759926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9294, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6704, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [17/25] Loss: 0.04541204124689102, RECONS: 0.045076424049006567, DISTANCE: 0.33561711178885567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8281, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6712, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [18/25] Loss: 0.04537632884947877, RECONS: 0.045041718765308984, DISTANCE: 0.334610054367467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6785, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [19/25] Loss: 0.045291443914175035, RECONS: 0.04495773520320654, DISTANCE: 0.33370866179466246
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8654, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6867, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [20/25] Loss: 0.0452386217103118, RECONS: 0.04490389674901962, DISTANCE: 0.3347248917534238
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7316, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [21/25] Loss: 0.045277353206818756, RECONS: 0.04494397765533491, DISTANCE: 0.3333755514838479
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [22/25] Loss: 0.04533432505053023, RECONS: 0.04500048461815585, DISTANCE: 0.33384042719136114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [23/25] Loss: 0.045206610734264054, RECONS: 0.044873909248660006, DISTANCE: 0.3327014793952306
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[64/300] [24/25] Loss: 0.04520023390650749, RECONS: 0.04485330641269684, DISTANCE: 0.3469274663925171
Test[64/300] [0/2] Loss: 0.052710141986608505, RECONS: 0.05187489837408066, DISTANCE: 0.8352440595626831
Test[64/300] [1/2] Loss: 0.05222650244832039, RECONS: 0.051056936383247375, DISTANCE: 1.169566810131073
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7946, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6838, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [0/25] Loss: 0.04332612454891205, RECONS: 0.0429910272359848, DISTANCE: 0.33509862422943115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6807, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [1/25] Loss: 0.04297746531665325, RECONS: 0.042638543993234634, DISTANCE: 0.33892130851745605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6789, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [2/25] Loss: 0.04347431908051173, RECONS: 0.04313954462607702, DISTANCE: 0.3347747325897217
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6855, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [3/25] Loss: 0.04353921953588724, RECONS: 0.04320697207003832, DISTANCE: 0.3322477340698242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7575, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6885, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [4/25] Loss: 0.04375725015997887, RECONS: 0.04343037232756615, DISTANCE: 0.32687816619873045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6895, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [5/25] Loss: 0.04344156011939049, RECONS: 0.04310333666702112, DISTANCE: 0.33822359641393024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9999, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [6/25] Loss: 0.04329327919653484, RECONS: 0.04295918079359191, DISTANCE: 0.33409873076847624
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7162, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [7/25] Loss: 0.04362855292856693, RECONS: 0.043294636998325586, DISTANCE: 0.33391621708869934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8905, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6876, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [8/25] Loss: 0.04342012769646115, RECONS: 0.04308768982688586, DISTANCE: 0.3324381245507134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6846, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [9/25] Loss: 0.04352601356804371, RECONS: 0.043196024000644685, DISTANCE: 0.3299898862838745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8401, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6776, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [10/25] Loss: 0.04360728372227062, RECONS: 0.043276087465611374, DISTANCE: 0.3311964598569003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8621, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6734, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [11/25] Loss: 0.04359512869268656, RECONS: 0.04326314510156711, DISTANCE: 0.33198362588882446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8474, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6789, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [12/25] Loss: 0.043550470700630776, RECONS: 0.04321977610771473, DISTANCE: 0.33069462042588454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7837, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6892, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [13/25] Loss: 0.04337356239557266, RECONS: 0.04304106480308941, DISTANCE: 0.3324976478304182
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7507, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [14/25] Loss: 0.043372720728317896, RECONS: 0.04303964401284854, DISTANCE: 0.3330768346786499
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7229, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [15/25] Loss: 0.04326716670766473, RECONS: 0.042934785364195704, DISTANCE: 0.3323814645409584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [16/25] Loss: 0.04328983846832724, RECONS: 0.04295786294867011, DISTANCE: 0.3319757405449362
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7591, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [17/25] Loss: 0.043399406803978816, RECONS: 0.04306706889635987, DISTANCE: 0.3323380880885654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8255, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6842, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [18/25] Loss: 0.043415891300690804, RECONS: 0.04308261820360234, DISTANCE: 0.33327324766861766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7965, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6656, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [19/25] Loss: 0.04345880039036274, RECONS: 0.04312697183340788, DISTANCE: 0.3318286657333374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8776, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6541, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [20/25] Loss: 0.04356512214456286, RECONS: 0.043233437020154225, DISTANCE: 0.33168515704926993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6570, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [21/25] Loss: 0.0436763677068732, RECONS: 0.04334117692302574, DISTANCE: 0.3351907350800254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8495, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6665, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [22/25] Loss: 0.043672244024017585, RECONS: 0.04333674907684326, DISTANCE: 0.335494849992835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6827, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [23/25] Loss: 0.043582088934878506, RECONS: 0.04324632044881582, DISTANCE: 0.3357684016227722
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6236, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.8223, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[65/300] [24/25] Loss: 0.04352148815989494, RECONS: 0.043168384581804276, DISTANCE: 0.3531034278869629
Test[65/300] [0/2] Loss: 0.053232692182064056, RECONS: 0.05220489203929901, DISTANCE: 1.0278000831604004
Test[65/300] [1/2] Loss: 0.05299223028123379, RECONS: 0.051560912281274796, DISTANCE: 1.4313170313835144
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [0/25] Loss: 0.043472275137901306, RECONS: 0.043155502527952194, DISTANCE: 0.3167722225189209
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8547, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [1/25] Loss: 0.04383614659309387, RECONS: 0.04353086277842522, DISTANCE: 0.3052828907966614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [2/25] Loss: 0.04440920675794283, RECONS: 0.04409664496779442, DISTANCE: 0.31256139278411865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7902, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6876, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [3/25] Loss: 0.044212210923433304, RECONS: 0.0438964469358325, DISTANCE: 0.31576400995254517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8302, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6691, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [4/25] Loss: 0.043658440560102464, RECONS: 0.04334171190857887, DISTANCE: 0.3167283535003662
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8125, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6577, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [5/25] Loss: 0.04374790067474047, RECONS: 0.043430995816985764, DISTANCE: 0.3169047435124715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6556, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [6/25] Loss: 0.043819401413202286, RECONS: 0.04349741818649428, DISTANCE: 0.32198309898376465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6670, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [7/25] Loss: 0.04362715547904372, RECONS: 0.04330590786412358, DISTANCE: 0.32124747335910797
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6797, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [8/25] Loss: 0.043302950345807605, RECONS: 0.04297722793287701, DISTANCE: 0.325722336769104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6949, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [9/25] Loss: 0.043173250183463095, RECONS: 0.04284627363085747, DISTANCE: 0.32697635889053345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7381, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [10/25] Loss: 0.04313777590339834, RECONS: 0.04280417480252006, DISTANCE: 0.33360083536668256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7777, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [11/25] Loss: 0.04311593621969223, RECONS: 0.04278199685116609, DISTANCE: 0.33393924434979755
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [12/25] Loss: 0.04301605918086492, RECONS: 0.04267947891583809, DISTANCE: 0.33658024897942174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7080, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6922, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [13/25] Loss: 0.04308595322072506, RECONS: 0.042744796190943034, DISTANCE: 0.3411570702280317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8200, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6752, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [14/25] Loss: 0.04304218366742134, RECONS: 0.04269871513048808, DISTANCE: 0.34346848328908286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6605, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [15/25] Loss: 0.04308901773765683, RECONS: 0.0427464316599071, DISTANCE: 0.3425859287381172
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6544, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [16/25] Loss: 0.04311445903252153, RECONS: 0.04277010722195401, DISTANCE: 0.3443517334320966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6560, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [17/25] Loss: 0.043161073699593544, RECONS: 0.04281825344595644, DISTANCE: 0.342820147673289
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6685, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [18/25] Loss: 0.04309038739455374, RECONS: 0.04274713542116316, DISTANCE: 0.3432517867339285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7914, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6854, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [19/25] Loss: 0.04300438947975636, RECONS: 0.04266313165426254, DISTANCE: 0.34125772714614866
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [20/25] Loss: 0.04289362153836659, RECONS: 0.0425536192598797, DISTANCE: 0.34000221320561
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [21/25] Loss: 0.04290635951540687, RECONS: 0.0425670693882487, DISTANCE: 0.33929004994305695
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6562, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [22/25] Loss: 0.04289906569149183, RECONS: 0.04256136440064596, DISTANCE: 0.33770126363505487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7354, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [23/25] Loss: 0.0428679664619267, RECONS: 0.04253092578922709, DISTANCE: 0.33704065283139545
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6207, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6878, device='cuda:0', grad_fn=<MeanBackward0>)
Train[66/300] [24/25] Loss: 0.04269574254751205, RECONS: 0.04234096392989159, DISTANCE: 0.3547785663604736
Test[66/300] [0/2] Loss: 0.04951376095414162, RECONS: 0.04865507408976555, DISTANCE: 0.8586870431900024
Test[66/300] [1/2] Loss: 0.04972612112760544, RECONS: 0.04851225204765797, DISTANCE: 1.213869869709015
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7413, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6771, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [0/25] Loss: 0.041228558868169785, RECONS: 0.040879830718040466, DISTANCE: 0.3487274646759033
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8900, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6639, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [1/25] Loss: 0.04188242368400097, RECONS: 0.04153537563979626, DISTANCE: 0.34704750776290894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5908, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8364, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6639, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [2/25] Loss: 0.042172043273846306, RECONS: 0.04184486096103986, DISTANCE: 0.3271825313568115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8584, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6613, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [3/25] Loss: 0.04201057367026806, RECONS: 0.04169092420488596, DISTANCE: 0.31964927911758423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8162, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6631, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [4/25] Loss: 0.0419576533138752, RECONS: 0.041633055359125135, DISTANCE: 0.32459800243377684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9162, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6727, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [5/25] Loss: 0.04199872103830179, RECONS: 0.0416717796276013, DISTANCE: 0.3269411524136861
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8090, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6871, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [6/25] Loss: 0.041676588888679235, RECONS: 0.04134602951151984, DISTANCE: 0.3305592026029314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7986, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6908, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [7/25] Loss: 0.04155188985168934, RECONS: 0.041226756293326616, DISTANCE: 0.32513327896595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [8/25] Loss: 0.041298314515087337, RECONS: 0.04096702403492398, DISTANCE: 0.33129016558329266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7780, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [9/25] Loss: 0.041009512916207316, RECONS: 0.04067087508738041, DISTANCE: 0.33863751888275145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6888, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [10/25] Loss: 0.04103713143955578, RECONS: 0.040702095085924324, DISTANCE: 0.3350361802361228
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6822, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [11/25] Loss: 0.04097260752071937, RECONS: 0.04063700263698896, DISTANCE: 0.33560482660929364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7894, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6764, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [12/25] Loss: 0.040840081010873504, RECONS: 0.04050458251283719, DISTANCE: 0.3354983329772949
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8114, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6766, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [13/25] Loss: 0.04077162114637239, RECONS: 0.04043568750577314, DISTANCE: 0.3359335405485971
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.9195, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6800, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [14/25] Loss: 0.04067003652453423, RECONS: 0.04033437892794609, DISTANCE: 0.33565741380055747
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7496, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6791, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [15/25] Loss: 0.040615756530314684, RECONS: 0.04027825011871755, DISTANCE: 0.3375062718987465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6803, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [16/25] Loss: 0.04052628598668996, RECONS: 0.04019032440641347, DISTANCE: 0.33596134887022133
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8291, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6795, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [17/25] Loss: 0.04059318618641959, RECONS: 0.04025717224511835, DISTANCE: 0.33601366811328465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7424, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6801, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [18/25] Loss: 0.040612364481938515, RECONS: 0.040276311141879934, DISTANCE: 0.3360530702691329
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7696, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6739, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [19/25] Loss: 0.04054848812520504, RECONS: 0.04021375328302383, DISTANCE: 0.33473458886146545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8396, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6708, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [20/25] Loss: 0.040556839002030234, RECONS: 0.04022328236273357, DISTANCE: 0.33355640797387986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6745, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [21/25] Loss: 0.040568175640973175, RECONS: 0.0402346554804932, DISTANCE: 0.3335199627009305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7385, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6820, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [22/25] Loss: 0.040475696973178696, RECONS: 0.040140967816114426, DISTANCE: 0.3347289095754209
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7410, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6908, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [23/25] Loss: 0.04042861765871445, RECONS: 0.04009261215105653, DISTANCE: 0.3360052555799484
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5828, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[67/300] [24/25] Loss: 0.04072262674570084, RECONS: 0.04037203535437584, DISTANCE: 0.3505911493301392
Test[67/300] [0/2] Loss: 0.047874778509140015, RECONS: 0.04679381102323532, DISTANCE: 1.0809683799743652
Test[67/300] [1/2] Loss: 0.0475014578551054, RECONS: 0.04609060473740101, DISTANCE: 1.410853624343872
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7580, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6833, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [0/25] Loss: 0.03892258554697037, RECONS: 0.03856111317873001, DISTANCE: 0.36147308349609375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6753, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [1/25] Loss: 0.039432937279343605, RECONS: 0.039085911586880684, DISTANCE: 0.3470253348350525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6653, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [2/25] Loss: 0.03976130113005638, RECONS: 0.03942654778560003, DISTANCE: 0.3347526391347249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6232, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8590, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6568, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [3/25] Loss: 0.04021192714571953, RECONS: 0.03988210670650005, DISTANCE: 0.329819917678833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7728, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6638, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [4/25] Loss: 0.03978140577673912, RECONS: 0.039445523917675016, DISTANCE: 0.33588147163391113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8822, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6777, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [5/25] Loss: 0.039478798086444535, RECONS: 0.03914345925052961, DISTANCE: 0.3353383143742879
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6942, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [6/25] Loss: 0.039579161043678014, RECONS: 0.039242446954761236, DISTANCE: 0.33671368871416363
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.7014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [7/25] Loss: 0.039624794851988554, RECONS: 0.039283032063394785, DISTANCE: 0.34176260232925415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [8/25] Loss: 0.039533066666788526, RECONS: 0.039191736529270806, DISTANCE: 0.34132982624901664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6923, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [9/25] Loss: 0.03983463384211063, RECONS: 0.03949334211647511, DISTANCE: 0.3412914276123047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7461, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6762, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [10/25] Loss: 0.039747819643129005, RECONS: 0.039405805482105774, DISTANCE: 0.34201405265114526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6626, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [11/25] Loss: 0.03961908010145029, RECONS: 0.03928077562401692, DISTANCE: 0.3383043209711711
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8586, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6600, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [12/25] Loss: 0.03962138868295229, RECONS: 0.03928294806526257, DISTANCE: 0.3384403448838454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8294, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6593, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [13/25] Loss: 0.03958813952548163, RECONS: 0.039250214983310015, DISTANCE: 0.33792427607945036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6572, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [14/25] Loss: 0.03948098868131637, RECONS: 0.039144890507062276, DISTANCE: 0.33609782059987386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8329, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6618, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [15/25] Loss: 0.039498670026659966, RECONS: 0.039163687732070684, DISTANCE: 0.3349819555878639
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8384, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6739, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [16/25] Loss: 0.03948797175989432, RECONS: 0.039153228349545426, DISTANCE: 0.3347431982264799
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6850, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [17/25] Loss: 0.0395132162504726, RECONS: 0.03917911917799049, DISTANCE: 0.33409691519207424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6896, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [18/25] Loss: 0.03944050501051702, RECONS: 0.039104279522833074, DISTANCE: 0.3362254155309577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7424, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6901, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [19/25] Loss: 0.039501767791807654, RECONS: 0.039166759327054025, DISTANCE: 0.3350083589553833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7308, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6826, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [20/25] Loss: 0.03937682917430287, RECONS: 0.03904120677283832, DISTANCE: 0.33562233334495906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6783, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [21/25] Loss: 0.0392911151390184, RECONS: 0.03895599953830242, DISTANCE: 0.3351155302741311
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6751, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [22/25] Loss: 0.039232481432997665, RECONS: 0.038897669347731964, DISTANCE: 0.33481195180312445
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7504, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6741, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [23/25] Loss: 0.03913925417388479, RECONS: 0.038804759892324604, DISTANCE: 0.33449420829614
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6723, device='cuda:0', grad_fn=<MeanBackward0>)
Train[68/300] [24/25] Loss: 0.03917799025774002, RECONS: 0.0388268780708313, DISTANCE: 0.35111213207244873
Test[68/300] [0/2] Loss: 0.046055253595113754, RECONS: 0.04522714018821716, DISTANCE: 0.8281149864196777
Test[68/300] [1/2] Loss: 0.046575894579291344, RECONS: 0.045313671231269836, DISTANCE: 1.2622246742248535
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7245, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6672, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [0/25] Loss: 0.03723488003015518, RECONS: 0.03687727451324463, DISTANCE: 0.3576045036315918
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8469, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6714, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [1/25] Loss: 0.03640027716755867, RECONS: 0.0360636692494154, DISTANCE: 0.3366078734397888
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7380, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6785, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [2/25] Loss: 0.037136729806661606, RECONS: 0.03679809346795082, DISTANCE: 0.33863604068756104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8043, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6808, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [3/25] Loss: 0.03753327205777168, RECONS: 0.03718333970755339, DISTANCE: 0.34993186593055725
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7059, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6757, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [4/25] Loss: 0.03791100829839707, RECONS: 0.03756130263209343, DISTANCE: 0.34970500469207766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6694, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [5/25] Loss: 0.03777867121001085, RECONS: 0.037432013700405754, DISTANCE: 0.3466566801071167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7247, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6654, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [6/25] Loss: 0.0377363030399595, RECONS: 0.03738519762243543, DISTANCE: 0.3511049066271101
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7365, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6650, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [7/25] Loss: 0.03765146713703871, RECONS: 0.037299913354218006, DISTANCE: 0.35155346989631653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8582, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6699, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [8/25] Loss: 0.037553798821237355, RECONS: 0.03719985195332103, DISTANCE: 0.35394647386338973
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7848, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6758, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [9/25] Loss: 0.037564107403159144, RECONS: 0.037214424833655356, DISTANCE: 0.3496821641921997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6784, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [10/25] Loss: 0.03764124316248027, RECONS: 0.03729335523464463, DISTANCE: 0.34788749434731225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7197, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6789, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [11/25] Loss: 0.037594265304505825, RECONS: 0.0372466758514444, DISTANCE: 0.3475891749064128
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6777, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [12/25] Loss: 0.03762453364638182, RECONS: 0.03727698354766919, DISTANCE: 0.34754985112410325
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8413, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6729, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [13/25] Loss: 0.03752440746341433, RECONS: 0.037180588713714054, DISTANCE: 0.34381846870694843
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6649, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [14/25] Loss: 0.03744705195228259, RECONS: 0.03710279514392217, DISTANCE: 0.3442565361658732
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5939, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6696, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [15/25] Loss: 0.03746134205721319, RECONS: 0.03711450006812811, DISTANCE: 0.34684178978204727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6684, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [16/25] Loss: 0.037402745336294174, RECONS: 0.03705589188372388, DISTANCE: 0.34685327025020823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8232, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6687, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [17/25] Loss: 0.03731932925681273, RECONS: 0.03697405672735638, DISTANCE: 0.34527236885494655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7766, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6760, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [18/25] Loss: 0.037336700644932296, RECONS: 0.03699049098711265, DISTANCE: 0.34620951351366547
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6745, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [19/25] Loss: 0.03725068625062704, RECONS: 0.03690686747431755, DISTANCE: 0.3438186049461365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7735, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6776, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [20/25] Loss: 0.037215755808921086, RECONS: 0.036872510044347676, DISTANCE: 0.34324558008284795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7580, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6773, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [21/25] Loss: 0.03711305812678554, RECONS: 0.03677047856829383, DISTANCE: 0.34257943521846423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6797, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [22/25] Loss: 0.03707814281401427, RECONS: 0.03673479965199595, DISTANCE: 0.3433430661325869
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5907, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8140, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6786, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [23/25] Loss: 0.03714884181196491, RECONS: 0.036804566935946546, DISTANCE: 0.3442748387654622
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6715, device='cuda:0', grad_fn=<MeanBackward0>)
Train[69/300] [24/25] Loss: 0.037060615569353104, RECONS: 0.03670299336314201, DISTANCE: 0.3576221084594727
Test[69/300] [0/2] Loss: 0.04280548170208931, RECONS: 0.04186182841658592, DISTANCE: 0.9436535835266113
Test[69/300] [1/2] Loss: 0.043471403419971466, RECONS: 0.04192374274134636, DISTANCE: 1.5476605892181396
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8358, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6686, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [0/25] Loss: 0.036327507346868515, RECONS: 0.03598649427294731, DISTANCE: 0.3410145044326782
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6679, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [1/25] Loss: 0.03593139909207821, RECONS: 0.03559138439595699, DISTANCE: 0.34001511335372925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8341, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9997, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6695, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [2/25] Loss: 0.03625130529205004, RECONS: 0.03591456264257431, DISTANCE: 0.33674291769663495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7269, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9985, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6676, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [3/25] Loss: 0.03622325323522091, RECONS: 0.03587866947054863, DISTANCE: 0.3445841073989868
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8668, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6719, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [4/25] Loss: 0.036094880849123004, RECONS: 0.03575359135866165, DISTANCE: 0.3412898302078247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7428, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6782, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [5/25] Loss: 0.035996212934454284, RECONS: 0.035651283959547676, DISTANCE: 0.34492939710617065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7248, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6790, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [6/25] Loss: 0.03604602813720703, RECONS: 0.03569874752845083, DISTANCE: 0.34728103024618967
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7101, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6792, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [7/25] Loss: 0.03618425177410245, RECONS: 0.03583622770383954, DISTANCE: 0.3480245918035507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6220, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6695, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [8/25] Loss: 0.035956511480940714, RECONS: 0.03561147509349717, DISTANCE: 0.34503697024451363
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8394, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6692, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [9/25] Loss: 0.035972295328974724, RECONS: 0.035624343529343606, DISTANCE: 0.34795217514038085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7052, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6686, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [10/25] Loss: 0.03581237860701301, RECONS: 0.03546296601945704, DISTANCE: 0.349412820555947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7864, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6715, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [11/25] Loss: 0.03584810129056374, RECONS: 0.03550002506623665, DISTANCE: 0.3480765720208486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5932, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7278, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6696, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [12/25] Loss: 0.035956634065279595, RECONS: 0.03560924845246168, DISTANCE: 0.3473860025405884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6613, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [13/25] Loss: 0.03588631509670189, RECONS: 0.03553970557238374, DISTANCE: 0.34660978828157696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7436, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6614, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [14/25] Loss: 0.035916542261838914, RECONS: 0.03557094931602478, DISTANCE: 0.3455932219823202
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6602, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [15/25] Loss: 0.03589371591806412, RECONS: 0.03555112867616117, DISTANCE: 0.34258756786584854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7520, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9985, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6599, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [16/25] Loss: 0.03584598969010746, RECONS: 0.03550177198999068, DISTANCE: 0.344217952559976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7900, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6656, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [17/25] Loss: 0.035840750568442874, RECONS: 0.03549589734110567, DISTANCE: 0.34485348727968
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6732, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [18/25] Loss: 0.03582605797993509, RECONS: 0.035484048292825095, DISTANCE: 0.3420098518070422
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6664, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6801, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [19/25] Loss: 0.03582778051495552, RECONS: 0.03548646587878466, DISTANCE: 0.3413148641586304
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6826, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [20/25] Loss: 0.035814051649400165, RECONS: 0.035473303603274484, DISTANCE: 0.3407482135863531
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7283, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9984, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6781, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [21/25] Loss: 0.03577348285100677, RECONS: 0.03543366153131832, DISTANCE: 0.33982139825820923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7928, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9985, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6685, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [22/25] Loss: 0.035749161696952324, RECONS: 0.03540915364156599, DISTANCE: 0.34000814997631573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7589, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6577, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [23/25] Loss: 0.035731205406288304, RECONS: 0.03539000218734145, DISTANCE: 0.34120326737562817
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6559, device='cuda:0', grad_fn=<MeanBackward0>)
Train[70/300] [24/25] Loss: 0.035712727904319765, RECONS: 0.035358594059944154, DISTANCE: 0.3541339349746704
Test[70/300] [0/2] Loss: 0.04165298491716385, RECONS: 0.040791105479002, DISTANCE: 0.8618811368942261
Test[70/300] [1/2] Loss: 0.04234774969518185, RECONS: 0.04107159934937954, DISTANCE: 1.276150643825531
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6574, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [0/25] Loss: 0.03428627923130989, RECONS: 0.033959586173295975, DISTANCE: 0.3266916275024414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6632, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [1/25] Loss: 0.03429049253463745, RECONS: 0.0339669082313776, DISTANCE: 0.3235827684402466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6220, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7323, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6726, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [2/25] Loss: 0.0340546319882075, RECONS: 0.03372266267736753, DISTANCE: 0.33196767171223956
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6865, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [3/25] Loss: 0.03512335941195488, RECONS: 0.03479680232703686, DISTANCE: 0.3265562355518341
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5936, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7148, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6853, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [4/25] Loss: 0.03590817078948021, RECONS: 0.03558256551623344, DISTANCE: 0.32560455799102783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6755, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [5/25] Loss: 0.035736542815963425, RECONS: 0.03540588480730852, DISTANCE: 0.3306571841239929
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9985, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6623, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [6/25] Loss: 0.03564430666821344, RECONS: 0.03531729908926146, DISTANCE: 0.32700683389391216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7391, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6495, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [7/25] Loss: 0.03558581741526723, RECONS: 0.03525902749970555, DISTANCE: 0.326789453625679
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7684, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6522, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [8/25] Loss: 0.035416768242915474, RECONS: 0.03508674643105931, DISTANCE: 0.3300214476055569
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7638, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6590, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [9/25] Loss: 0.035258623957633975, RECONS: 0.034925204887986186, DISTANCE: 0.33341857194900515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5929, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6742, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [10/25] Loss: 0.0353589342399077, RECONS: 0.035025657577948136, DISTANCE: 0.33327610926194623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6768, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [11/25] Loss: 0.03522291531165441, RECONS: 0.034891956175367035, DISTANCE: 0.33095865448315936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6796, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [12/25] Loss: 0.03507720048610981, RECONS: 0.03474459911768253, DISTANCE: 0.3326008228155283
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7601, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6763, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [13/25] Loss: 0.03492719014840467, RECONS: 0.0345957987010479, DISTANCE: 0.33139107057026457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6758, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [14/25] Loss: 0.03482238327463468, RECONS: 0.03449252744515737, DISTANCE: 0.32985557715098063
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6745, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [15/25] Loss: 0.03469088883139193, RECONS: 0.034363036742433906, DISTANCE: 0.32785192877054214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7374, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6702, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [16/25] Loss: 0.03458739554180818, RECONS: 0.034260870560127145, DISTANCE: 0.3265248326694264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6820, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6670, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [17/25] Loss: 0.03449327229625649, RECONS: 0.034167412047584854, DISTANCE: 0.32586009634865654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5956, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7551, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6663, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [18/25] Loss: 0.03456722082276093, RECONS: 0.03423996034421419, DISTANCE: 0.3272603373778494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6617, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [19/25] Loss: 0.03450321834534407, RECONS: 0.03417400177568197, DISTANCE: 0.3292165219783783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6566, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [20/25] Loss: 0.03446455867517562, RECONS: 0.03413482808641025, DISTANCE: 0.3297305277415684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6553, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [21/25] Loss: 0.03445502065799453, RECONS: 0.03412452052262696, DISTANCE: 0.3304999958385121
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9984, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6512, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [22/25] Loss: 0.034421143972355385, RECONS: 0.034089444934026054, DISTANCE: 0.3316988945007324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6540, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [23/25] Loss: 0.034385713282972574, RECONS: 0.034052887776245676, DISTANCE: 0.33282539745171863
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7091, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6584, device='cuda:0', grad_fn=<MeanBackward0>)
Train[71/300] [24/25] Loss: 0.03437760353088379, RECONS: 0.03402735158801079, DISTANCE: 0.3502518177032471
Test[71/300] [0/2] Loss: 0.04014569893479347, RECONS: 0.03932544216513634, DISTANCE: 0.8202581405639648
Test[71/300] [1/2] Loss: 0.0404385719448328, RECONS: 0.03925389237701893, DISTANCE: 1.1846802830696106
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9975, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6662, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [0/25] Loss: 0.03259727731347084, RECONS: 0.03228243812918663, DISTANCE: 0.31484079360961914
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7376, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6763, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [1/25] Loss: 0.03411206975579262, RECONS: 0.03377808444201946, DISTANCE: 0.3339853882789612
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9980, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6759, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [2/25] Loss: 0.0334667923549811, RECONS: 0.03312500442067782, DISTANCE: 0.34178797403971356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7282, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6764, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [3/25] Loss: 0.03356434125453234, RECONS: 0.03323179390281439, DISTANCE: 0.33254754543304443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6703, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [4/25] Loss: 0.0334649533033371, RECONS: 0.033134407550096515, DISTANCE: 0.33054609298706056
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6622, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [5/25] Loss: 0.03346657194197178, RECONS: 0.03313631067673365, DISTANCE: 0.3302614688873291
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6533, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [6/25] Loss: 0.03349995293787548, RECONS: 0.033171026834419796, DISTANCE: 0.32892606939588276
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7548, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6497, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [7/25] Loss: 0.03333503007888794, RECONS: 0.03300033835694194, DISTANCE: 0.3346916437149048
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9977, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6524, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [8/25] Loss: 0.03334011178877619, RECONS: 0.0330068493882815, DISTANCE: 0.333262390560574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7279, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6534, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [9/25] Loss: 0.03325866833329201, RECONS: 0.03292601369321346, DISTANCE: 0.3326547145843506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7330, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9994, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6576, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [10/25] Loss: 0.033131630244580185, RECONS: 0.03279904174533757, DISTANCE: 0.3325884992426092
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9984, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6674, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [11/25] Loss: 0.033117808712025486, RECONS: 0.032786100171506405, DISTANCE: 0.3317086199919383
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6708, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [12/25] Loss: 0.032992818321173005, RECONS: 0.03265782517309372, DISTANCE: 0.33499333491692174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6965, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9974, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6736, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [13/25] Loss: 0.032857918446617465, RECONS: 0.03252332777317081, DISTANCE: 0.3345908522605896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6102, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6776, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [14/25] Loss: 0.03283792349199454, RECONS: 0.03250479213893413, DISTANCE: 0.3331316312154134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9985, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6751, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [15/25] Loss: 0.03285954741295427, RECONS: 0.03252765967044979, DISTANCE: 0.33188796043395996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7148, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9977, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6633, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [16/25] Loss: 0.032871837453807104, RECONS: 0.032535054556587166, DISTANCE: 0.3367830164292279
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8020, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6503, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [17/25] Loss: 0.032778766834073596, RECONS: 0.032440510785414114, DISTANCE: 0.33825617366366917
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7685, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6437, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [18/25] Loss: 0.03280220533672132, RECONS: 0.03246425317698404, DISTANCE: 0.33795218718679326
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7327, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6500, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [19/25] Loss: 0.032811561785638335, RECONS: 0.03247413514181972, DISTANCE: 0.3374265909194946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7320, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6564, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [20/25] Loss: 0.032749275189070476, RECONS: 0.032412413596397356, DISTANCE: 0.33686151958647226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8662, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6734, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [21/25] Loss: 0.032856775617057625, RECONS: 0.03251948537812992, DISTANCE: 0.3372901407155124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6760, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [22/25] Loss: 0.032752755381490875, RECONS: 0.03241395342933095, DISTANCE: 0.33880186599233875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7146, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6740, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [23/25] Loss: 0.0327014314631621, RECONS: 0.032362645802398525, DISTANCE: 0.3387855440378189
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6322, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6750, device='cuda:0', grad_fn=<MeanBackward0>)
Train[72/300] [24/25] Loss: 0.032632451057434085, RECONS: 0.032272443920373914, DISTANCE: 0.36000699996948243
Test[72/300] [0/2] Loss: 0.037473563104867935, RECONS: 0.036654867231845856, DISTANCE: 0.8186959028244019
Test[72/300] [1/2] Loss: 0.03792402893304825, RECONS: 0.03682872839272022, DISTANCE: 1.095299780368805
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8081, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6685, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [0/25] Loss: 0.03180966153740883, RECONS: 0.03145735710859299, DISTANCE: 0.35230588912963867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9974, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6618, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [1/25] Loss: 0.03207950294017792, RECONS: 0.03173641301691532, DISTANCE: 0.3430910110473633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6566, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [2/25] Loss: 0.03218318521976471, RECONS: 0.03184004252155622, DISTANCE: 0.34314393997192383
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7290, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6471, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [3/25] Loss: 0.03192509338259697, RECONS: 0.03158933715894818, DISTANCE: 0.335757315158844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7530, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6463, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [4/25] Loss: 0.032044562697410586, RECONS: 0.03170228190720081, DISTANCE: 0.3422813892364502
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7268, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9975, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6475, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [5/25] Loss: 0.03208669709662596, RECONS: 0.03174752090126276, DISTANCE: 0.33917661507924396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6541, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [6/25] Loss: 0.03180034777947834, RECONS: 0.03145773123417582, DISTANCE: 0.34261700085231234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9985, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6600, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [7/25] Loss: 0.031758015509694815, RECONS: 0.031420531682670116, DISTANCE: 0.33748410642147064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6776, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9977, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6693, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [8/25] Loss: 0.03181245343552695, RECONS: 0.03147538254658381, DISTANCE: 0.3370709816614787
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6532, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6721, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [9/25] Loss: 0.031648014299571516, RECONS: 0.03130601234734058, DISTANCE: 0.34200209379196167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9969, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6728, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [10/25] Loss: 0.03134699199687351, RECONS: 0.031005434691905975, DISTANCE: 0.3415574919093739
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7520, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6698, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [11/25] Loss: 0.03129996716355284, RECONS: 0.030958975820491712, DISTANCE: 0.34099148710568744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9973, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6681, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [12/25] Loss: 0.031599604309751436, RECONS: 0.0312605040291181, DISTANCE: 0.3391004250599788
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6587, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [13/25] Loss: 0.031534643577677865, RECONS: 0.03119617687272174, DISTANCE: 0.3384668401309422
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7418, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6492, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [14/25] Loss: 0.03148114817837874, RECONS: 0.031143040334184965, DISTANCE: 0.33810795148213707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6258, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7431, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6485, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [15/25] Loss: 0.0314534961944446, RECONS: 0.031115430174395442, DISTANCE: 0.3380661755800247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9975, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6585, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [16/25] Loss: 0.03138802759349346, RECONS: 0.031050662345745984, DISTANCE: 0.33736536082099466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9980, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6692, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [17/25] Loss: 0.03131239954382181, RECONS: 0.03097458618382613, DISTANCE: 0.33781343036227757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9980, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6753, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [18/25] Loss: 0.031247201326646303, RECONS: 0.030911985294599282, DISTANCE: 0.3352161206697163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6056, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9985, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6808, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [19/25] Loss: 0.031192205287516116, RECONS: 0.030857013165950777, DISTANCE: 0.33519220948219297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5923, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6763, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [20/25] Loss: 0.03129202553204128, RECONS: 0.030954177358320782, DISTANCE: 0.33784817513965426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9974, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6636, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [21/25] Loss: 0.03120701980184425, RECONS: 0.030868814496154137, DISTANCE: 0.33820532126860187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7417, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9975, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6459, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [22/25] Loss: 0.031192647455179173, RECONS: 0.03085321924932625, DISTANCE: 0.33942825897880224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9978, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6371, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [23/25] Loss: 0.03116304931851725, RECONS: 0.03082258525925378, DISTANCE: 0.34046409527460736
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.7923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9964, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[73/300] [24/25] Loss: 0.031231471076607703, RECONS: 0.030872611179947853, DISTANCE: 0.35885987281799314
Test[73/300] [0/2] Loss: 0.03790193051099777, RECONS: 0.037156231701374054, DISTANCE: 0.7456989288330078
Test[73/300] [1/2] Loss: 0.03828654997050762, RECONS: 0.0370925348252058, DISTANCE: 1.1940158605575562
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7754, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6412, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [0/25] Loss: 0.0309493038803339, RECONS: 0.030604887753725052, DISTANCE: 0.3444164991378784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7334, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9973, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6518, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [1/25] Loss: 0.030718370340764523, RECONS: 0.030373101122677326, DISTANCE: 0.3452691435813904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9977, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6681, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [2/25] Loss: 0.02999808577199777, RECONS: 0.02964266079167525, DISTANCE: 0.3554251591364543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9965, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6774, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [3/25] Loss: 0.03048666985705495, RECONS: 0.030134481843560934, DISTANCE: 0.35218772292137146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6806, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6790, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [4/25] Loss: 0.03024934120476246, RECONS: 0.029901769384741782, DISTANCE: 0.3475717306137085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6805, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9961, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6749, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [5/25] Loss: 0.030738686832288902, RECONS: 0.03039012694110473, DISTANCE: 0.3485600749651591
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6238, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9971, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6651, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [6/25] Loss: 0.03084950494979109, RECONS: 0.03049942691411291, DISTANCE: 0.3500783784048898
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6524, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [7/25] Loss: 0.03071491909213364, RECONS: 0.030367080122232437, DISTANCE: 0.34783920645713806
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6411, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [8/25] Loss: 0.030659126531746652, RECONS: 0.030315377439061802, DISTANCE: 0.34374939070807564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7664, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9984, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6426, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [9/25] Loss: 0.030672536790370943, RECONS: 0.030331837013363838, DISTANCE: 0.3406999945640564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7319, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6445, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [10/25] Loss: 0.030726715922355652, RECONS: 0.030389533124186775, DISTANCE: 0.337182879447937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6492, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [11/25] Loss: 0.030675103422254324, RECONS: 0.03033777978271246, DISTANCE: 0.33732377489407855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7822, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9976, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6556, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [12/25] Loss: 0.030550763870661076, RECONS: 0.030212383717298508, DISTANCE: 0.33838025423196644
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7530, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9977, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6667, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [13/25] Loss: 0.030433734878897667, RECONS: 0.03009589601840292, DISTANCE: 0.3378389818327768
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6460, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9971, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6737, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [14/25] Loss: 0.03040276877582073, RECONS: 0.030067240943511327, DISTANCE: 0.3355279366175334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5917, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6742, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [15/25] Loss: 0.030564247048459947, RECONS: 0.030229117954149842, DISTANCE: 0.33512918651103973
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6720, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9977, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6654, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [16/25] Loss: 0.03052471567164449, RECONS: 0.0301878327394233, DISTANCE: 0.3368829979616053
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9966, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6512, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [17/25] Loss: 0.030409219881726637, RECONS: 0.030068308528926637, DISTANCE: 0.3409114016426934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7279, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6480, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [18/25] Loss: 0.030391324311494827, RECONS: 0.030051657145744877, DISTANCE: 0.339667232413041
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7542, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9970, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6428, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [19/25] Loss: 0.03035639626905322, RECONS: 0.03001642683520913, DISTANCE: 0.3399695336818695
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9957, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6483, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [20/25] Loss: 0.030350332902300926, RECONS: 0.030011134399544625, DISTANCE: 0.33919858932495117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7573, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9963, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6539, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [21/25] Loss: 0.03028072611513463, RECONS: 0.029941542836075478, DISTANCE: 0.33918337388472125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7521, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9964, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6620, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [22/25] Loss: 0.030223258487556293, RECONS: 0.02988235960188119, DISTANCE: 0.34089896989905316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6770, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9964, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6673, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [23/25] Loss: 0.030261895541722577, RECONS: 0.029922381819536287, DISTANCE: 0.3395138184229533
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6149, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9967, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6651, device='cuda:0', grad_fn=<MeanBackward0>)
Train[74/300] [24/25] Loss: 0.030217078402638434, RECONS: 0.02986138127744198, DISTANCE: 0.3556972122192383
Test[74/300] [0/2] Loss: 0.03502644971013069, RECONS: 0.034081872552633286, DISTANCE: 0.9445775747299194
Test[74/300] [1/2] Loss: 0.03479561768472195, RECONS: 0.033704595640301704, DISTANCE: 1.0910231471061707
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6494, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9962, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6569, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [0/25] Loss: 0.02870314195752144, RECONS: 0.028348399326205254, DISTANCE: 0.35474205017089844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6487, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [1/25] Loss: 0.029044251888990402, RECONS: 0.028688780032098293, DISTANCE: 0.3554719090461731
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9967, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6420, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [2/25] Loss: 0.02904123067855835, RECONS: 0.028681231662631035, DISTANCE: 0.3599989016850789
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.8907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9978, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6385, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [3/25] Loss: 0.029221179895102978, RECONS: 0.0288764089345932, DISTANCE: 0.34477096796035767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9987, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6486, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [4/25] Loss: 0.02905050627887249, RECONS: 0.028711920604109764, DISTANCE: 0.3385858297348022
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7491, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6595, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [5/25] Loss: 0.02910912875086069, RECONS: 0.028766074838737648, DISTANCE: 0.343054195245107
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9963, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6684, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [6/25] Loss: 0.029552916064858437, RECONS: 0.029203910114509717, DISTANCE: 0.34900643144335064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7066, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6629, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [7/25] Loss: 0.029372152406722307, RECONS: 0.029024503426626325, DISTANCE: 0.3476494997739792
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7144, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9978, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6534, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [8/25] Loss: 0.029392222356465127, RECONS: 0.029045977319280308, DISTANCE: 0.34624559349483913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9978, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6447, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [9/25] Loss: 0.029281419515609742, RECONS: 0.02893954552710056, DISTANCE: 0.3418744444847107
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6989, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9970, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6478, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [10/25] Loss: 0.02925736660307104, RECONS: 0.028918427499857815, DISTANCE: 0.33893952586434106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9985, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6613, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [11/25] Loss: 0.029239363502711058, RECONS: 0.028901774436235428, DISTANCE: 0.33758945266405743
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9976, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6661, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [12/25] Loss: 0.02915873364187204, RECONS: 0.028821136945715316, DISTANCE: 0.3375970491996178
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9959, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6668, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [13/25] Loss: 0.029058821366301606, RECONS: 0.028724519136760916, DISTANCE: 0.3343025190489633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6223, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9960, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6662, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [14/25] Loss: 0.029140698040525118, RECONS: 0.028808432444930077, DISTANCE: 0.33226590951283774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6258, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6605, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6522, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [15/25] Loss: 0.02901066152844578, RECONS: 0.02867407735902816, DISTANCE: 0.3365844339132309
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6486, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [16/25] Loss: 0.028965541983351988, RECONS: 0.028628738925737494, DISTANCE: 0.3368033381069408
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7092, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9966, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6466, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [17/25] Loss: 0.028874945723348193, RECONS: 0.028537638692392245, DISTANCE: 0.3373073074552748
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9973, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6463, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [18/25] Loss: 0.028820649377609555, RECONS: 0.028484278995739788, DISTANCE: 0.336370681461535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7409, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9970, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6509, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [19/25] Loss: 0.02876883465796709, RECONS: 0.02843111678957939, DISTANCE: 0.3377181112766266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6271, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9968, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6575, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [20/25] Loss: 0.02871024865834486, RECONS: 0.02837334360395159, DISTANCE: 0.3369052693957374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6652, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9974, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6635, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [21/25] Loss: 0.028606296093626457, RECONS: 0.028269409456036308, DISTANCE: 0.3368868340145458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6298, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6666, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [22/25] Loss: 0.028643523383399715, RECONS: 0.02830842526062675, DISTANCE: 0.3350983132486758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9980, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6601, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [23/25] Loss: 0.02860725810751319, RECONS: 0.028274270240217447, DISTANCE: 0.33298807839552563
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6289, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9963, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6527, device='cuda:0', grad_fn=<MeanBackward0>)
Train[75/300] [24/25] Loss: 0.02857398584485054, RECONS: 0.028227539733052254, DISTANCE: 0.34644628047943116
Test[75/300] [0/2] Loss: 0.03348655626177788, RECONS: 0.032333385199308395, DISTANCE: 1.153170108795166
Test[75/300] [1/2] Loss: 0.03336130641400814, RECONS: 0.0319951307028532, DISTANCE: 1.3661751747131348
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9976, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6452, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [0/25] Loss: 0.028187615796923637, RECONS: 0.027797987684607506, DISTANCE: 0.38962793350219727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9971, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6416, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [1/25] Loss: 0.028090231120586395, RECONS: 0.027701569721102715, DISTANCE: 0.38866162300109863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9984, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6388, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [2/25] Loss: 0.02789175882935524, RECONS: 0.027522996068000793, DISTANCE: 0.3687628110249837
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9967, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6407, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [3/25] Loss: 0.027983239851891994, RECONS: 0.02761268150061369, DISTANCE: 0.37055861949920654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9961, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6451, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [4/25] Loss: 0.027831872180104255, RECONS: 0.027473605051636697, DISTANCE: 0.3582672119140625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7299, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9970, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6537, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [5/25] Loss: 0.027878083288669586, RECONS: 0.02752676357825597, DISTANCE: 0.3513198693593343
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6778, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6529, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [6/25] Loss: 0.027814645586269244, RECONS: 0.027467579447797368, DISTANCE: 0.3470663513456072
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7455, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9974, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6542, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [7/25] Loss: 0.0275171238463372, RECONS: 0.027173401322215796, DISTANCE: 0.34372277557849884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9986, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6563, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [8/25] Loss: 0.027485661415590182, RECONS: 0.027142355425490275, DISTANCE: 0.34330619706047905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6226, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7039, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9976, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6507, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [9/25] Loss: 0.027359288930892945, RECONS: 0.027015313878655432, DISTANCE: 0.3439751863479614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7209, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6567, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [10/25] Loss: 0.027395528148521076, RECONS: 0.027049925686283546, DISTANCE: 0.3456025340340354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9976, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6547, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [11/25] Loss: 0.027300167984018724, RECONS: 0.02695465413853526, DISTANCE: 0.34551388025283813
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6192, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9970, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6542, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [12/25] Loss: 0.02723153093113349, RECONS: 0.02688246091397909, DISTANCE: 0.3490699804746188
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9974, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6524, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [13/25] Loss: 0.02712378092110157, RECONS: 0.026770912509943758, DISTANCE: 0.3528683696474348
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7288, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9976, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6551, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [14/25] Loss: 0.0270040741811196, RECONS: 0.02665401908258597, DISTANCE: 0.3500550111134847
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6202, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6529, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9964, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6551, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [15/25] Loss: 0.026903650374151766, RECONS: 0.02655558695551008, DISTANCE: 0.3480633646249771
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6415, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9969, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6593, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [16/25] Loss: 0.026863899301080144, RECONS: 0.02651561237871647, DISTANCE: 0.3482868881786571
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9963, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6559, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [17/25] Loss: 0.026803795248270035, RECONS: 0.02645849467565616, DISTANCE: 0.3453005486064487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6669, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9971, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6530, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [18/25] Loss: 0.02677145325823834, RECONS: 0.026423896515839977, DISTANCE: 0.34755673533991766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9959, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6525, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [19/25] Loss: 0.026747932191938162, RECONS: 0.026401338260620834, DISTANCE: 0.346593964099884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9961, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6488, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [20/25] Loss: 0.026695416619380314, RECONS: 0.026349545500817754, DISTANCE: 0.3458711873917353
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9977, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6487, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [21/25] Loss: 0.026664200238883495, RECONS: 0.026319531300528484, DISTANCE: 0.3446689627387307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7115, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9963, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6486, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [22/25] Loss: 0.02662486526305261, RECONS: 0.0262818764085355, DISTANCE: 0.3429888694182686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7341, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9964, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6498, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [23/25] Loss: 0.026570121680075925, RECONS: 0.026229234412312508, DISTANCE: 0.34088729321956635
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6302, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9957, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6485, device='cuda:0', grad_fn=<MeanBackward0>)
Train[76/300] [24/25] Loss: 0.026566554829478263, RECONS: 0.026210913211107256, DISTANCE: 0.3556416177749634
Test[76/300] [0/2] Loss: 0.030524414032697678, RECONS: 0.029671605676412582, DISTANCE: 0.8528079986572266
Test[76/300] [1/2] Loss: 0.030860042199492455, RECONS: 0.029625415802001953, DISTANCE: 1.2346265316009521
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9960, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6469, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [0/25] Loss: 0.026677465066313744, RECONS: 0.02635551616549492, DISTANCE: 0.3219485282897949
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6321, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9964, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6399, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [1/25] Loss: 0.026150669902563095, RECONS: 0.02581870276480913, DISTANCE: 0.331966757774353
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6727, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9969, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6403, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [2/25] Loss: 0.02577037736773491, RECONS: 0.025438659513990085, DISTANCE: 0.33171741167704266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9959, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6464, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [3/25] Loss: 0.025622868444770575, RECONS: 0.025298133492469788, DISTANCE: 0.32473477721214294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6030, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9949, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6516, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [4/25] Loss: 0.025726408511400223, RECONS: 0.02539457231760025, DISTANCE: 0.3318361520767212
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6029, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9952, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6540, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [5/25] Loss: 0.02574293687939644, RECONS: 0.02541300654411316, DISTANCE: 0.32993024587631226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9976, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6522, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [6/25] Loss: 0.025652885969196047, RECONS: 0.025321574615580694, DISTANCE: 0.3313112940107073
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9955, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6470, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [7/25] Loss: 0.025631533935666084, RECONS: 0.025299900444224477, DISTANCE: 0.33163344860076904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7056, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9969, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6417, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [8/25] Loss: 0.02553545269701216, RECONS: 0.025204772129654884, DISTANCE: 0.3306804762946235
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9949, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6401, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [9/25] Loss: 0.025515502877533437, RECONS: 0.025187269784510136, DISTANCE: 0.328233003616333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9951, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6430, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [10/25] Loss: 0.025529966266317802, RECONS: 0.02520105903121558, DISTANCE: 0.3289071429859508
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9956, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6433, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [11/25] Loss: 0.025520042671511572, RECONS: 0.02519205616166194, DISTANCE: 0.32798634966214496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6511, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [12/25] Loss: 0.025517378718807146, RECONS: 0.025188322393940046, DISTANCE: 0.32905618044046253
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6611, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9946, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6549, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [13/25] Loss: 0.025472569279372692, RECONS: 0.02514424973300525, DISTANCE: 0.32831941332135883
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9952, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6596, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [14/25] Loss: 0.025435499101877212, RECONS: 0.025107028956214587, DISTANCE: 0.32846998373667396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9966, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6584, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [15/25] Loss: 0.025348704191856086, RECONS: 0.025022079120390117, DISTANCE: 0.32662494480609894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6283, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9949, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6594, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [16/25] Loss: 0.02534013778409537, RECONS: 0.025014371337259516, DISTANCE: 0.32576635304619284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6544, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [17/25] Loss: 0.025341693208449416, RECONS: 0.025016459532909922, DISTANCE: 0.3252335720592075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6834, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9961, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6480, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [18/25] Loss: 0.02530812109379392, RECONS: 0.024982537093915437, DISTANCE: 0.32558386576803106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6986, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9971, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6441, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [19/25] Loss: 0.02528140423819423, RECONS: 0.024954118207097052, DISTANCE: 0.3272859215736389
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9943, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6397, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [20/25] Loss: 0.025270695132868632, RECONS: 0.024944569294651348, DISTANCE: 0.32612575803484234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6224, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6728, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9967, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6401, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [21/25] Loss: 0.02521958616985516, RECONS: 0.024892494675110687, DISTANCE: 0.32709143378517846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6583, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9964, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6489, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [22/25] Loss: 0.025207056056546127, RECONS: 0.02487917738440244, DISTANCE: 0.32787862031356146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6563, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9936, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6517, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [23/25] Loss: 0.025204672245308757, RECONS: 0.02487645026606818, DISTANCE: 0.3282219370206197
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5536, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9972, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6492, device='cuda:0', grad_fn=<MeanBackward0>)
Train[77/300] [24/25] Loss: 0.02513522617518902, RECONS: 0.02478813663125038, DISTANCE: 0.3470894813537598
Test[77/300] [0/2] Loss: 0.029706167057156563, RECONS: 0.02861080877482891, DISTANCE: 1.095357894897461
Test[77/300] [1/2] Loss: 0.029879093170166016, RECONS: 0.028480893932282925, DISTANCE: 1.3981991410255432
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9980, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6484, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [0/25] Loss: 0.02355128899216652, RECONS: 0.02323858253657818, DISTANCE: 0.31270647048950195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5942, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9957, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6492, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [1/25] Loss: 0.02547958679497242, RECONS: 0.02515874244272709, DISTANCE: 0.32084399461746216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6439, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9948, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6366, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [2/25] Loss: 0.024871936688820522, RECONS: 0.024531307940681774, DISTANCE: 0.3406283458073934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6452, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9951, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6344, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [3/25] Loss: 0.024539887439459562, RECONS: 0.024207662791013718, DISTANCE: 0.33222442865371704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6362, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9940, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6355, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [4/25] Loss: 0.02454969845712185, RECONS: 0.02421310618519783, DISTANCE: 0.336591911315918
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9979, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6413, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [5/25] Loss: 0.02451614507784446, RECONS: 0.024181805551052094, DISTANCE: 0.3343391418457031
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9961, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6501, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [6/25] Loss: 0.0243906346814973, RECONS: 0.024042691503252302, DISTANCE: 0.3479428972516741
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6401, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9948, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6579, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [7/25] Loss: 0.024326186859980226, RECONS: 0.023980592843145132, DISTANCE: 0.34559379518032074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6227, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9921, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6615, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [8/25] Loss: 0.02469697387682067, RECONS: 0.024354376105798617, DISTANCE: 0.3425976302888658
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9911, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6551, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [9/25] Loss: 0.024583503045141696, RECONS: 0.024243470281362534, DISTANCE: 0.34003256559371947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6738, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9959, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6421, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [10/25] Loss: 0.024554232135415077, RECONS: 0.024217062714425, DISTANCE: 0.33716924624009564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9937, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6408, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [11/25] Loss: 0.02451336771870653, RECONS: 0.0241768976363043, DISTANCE: 0.3364698489507039
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9945, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6386, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [12/25] Loss: 0.024468300720820062, RECONS: 0.024131494502608593, DISTANCE: 0.33680599469404954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6410, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9952, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6453, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [13/25] Loss: 0.02438502505953823, RECONS: 0.024050226967249597, DISTANCE: 0.3347978251320975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9956, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6491, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [14/25] Loss: 0.024293375636140504, RECONS: 0.023957055434584616, DISTANCE: 0.33631989161173503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9966, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6521, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [15/25] Loss: 0.02421549486462027, RECONS: 0.023878833279013634, DISTANCE: 0.33666133880615234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9932, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6540, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [16/25] Loss: 0.024116057573872453, RECONS: 0.02378139863995945, DISTANCE: 0.334658706889433
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6326, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9964, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6540, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [17/25] Loss: 0.02411142136487696, RECONS: 0.0237770505870382, DISTANCE: 0.33437056011623806
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5590, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9949, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6481, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [18/25] Loss: 0.02410192611186128, RECONS: 0.02376767453786574, DISTANCE: 0.3342513410668624
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9931, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6395, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [19/25] Loss: 0.024055708944797517, RECONS: 0.023723021429032088, DISTANCE: 0.3326872706413269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6584, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9946, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6314, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [20/25] Loss: 0.02402092374506451, RECONS: 0.023688768613196555, DISTANCE: 0.3321548984164283
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9943, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [21/25] Loss: 0.023961987854404884, RECONS: 0.023631603287702255, DISTANCE: 0.3303843303160234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9948, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6363, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [22/25] Loss: 0.02394158984331981, RECONS: 0.023610450327396393, DISTANCE: 0.3311393209125685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6374, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9927, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6417, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [23/25] Loss: 0.023934221050391596, RECONS: 0.023603758697087567, DISTANCE: 0.3304621825615565
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6364, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6171, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9915, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6427, device='cuda:0', grad_fn=<MeanBackward0>)
Train[78/300] [24/25] Loss: 0.023978794515132903, RECONS: 0.023630503118038177, DISTANCE: 0.34829126358032225
Test[78/300] [0/2] Loss: 0.028752978891134262, RECONS: 0.027477113530039787, DISTANCE: 1.275864601135254
Test[78/300] [1/2] Loss: 0.028999153524637222, RECONS: 0.027161826379597187, DISTANCE: 1.8373271226882935
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6556, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9926, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6560, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [0/25] Loss: 0.02374161034822464, RECONS: 0.02343124710023403, DISTANCE: 0.31036293506622314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6238, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9919, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6630, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [1/25] Loss: 0.024144192226231098, RECONS: 0.02381184045225382, DISTANCE: 0.3323512673377991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6291, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5554, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9934, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6589, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [2/25] Loss: 0.02326977315048377, RECONS: 0.022941691800951958, DISTANCE: 0.3280807336171468
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5948, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6272, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9956, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6603, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [3/25] Loss: 0.02417029021307826, RECONS: 0.023837444838136435, DISTANCE: 0.3328450322151184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9935, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6514, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [4/25] Loss: 0.0240113478153944, RECONS: 0.023677300661802292, DISTANCE: 0.33404686450958254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6456, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9943, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6398, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [5/25] Loss: 0.02386817242950201, RECONS: 0.023540298454463482, DISTANCE: 0.3278735876083374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9926, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6333, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [6/25] Loss: 0.023724802902766635, RECONS: 0.023400521970220974, DISTANCE: 0.32428070477076937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9912, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6310, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [7/25] Loss: 0.023728239350020885, RECONS: 0.023400294594466686, DISTANCE: 0.32794448733329773
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7056, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9932, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6322, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [8/25] Loss: 0.023586366118656263, RECONS: 0.023258857429027557, DISTANCE: 0.32750848929087323
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6227, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6679, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9938, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6378, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [9/25] Loss: 0.02349364086985588, RECONS: 0.023164620622992516, DISTANCE: 0.3290199875831604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9954, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6529, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [10/25] Loss: 0.023382592607628216, RECONS: 0.023053478788245808, DISTANCE: 0.32911350510337134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9889, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6615, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [11/25] Loss: 0.023322063498198986, RECONS: 0.022991629938284557, DISTANCE: 0.3304332693417867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9916, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6632, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [12/25] Loss: 0.02338110125408723, RECONS: 0.02305061799975542, DISTANCE: 0.33048298725715053
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6215, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9913, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6545, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [13/25] Loss: 0.02335044595279864, RECONS: 0.023018472029694488, DISTANCE: 0.33197373151779175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9936, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6430, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [14/25] Loss: 0.023382814973592757, RECONS: 0.02304815165698528, DISTANCE: 0.3346631129582723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9910, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6275, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [15/25] Loss: 0.023344680317677557, RECONS: 0.023011476849205792, DISTANCE: 0.3332032635807991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9906, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [16/25] Loss: 0.02335185743868351, RECONS: 0.023019421736107153, DISTANCE: 0.33243552376242247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7236, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9923, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6262, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [17/25] Loss: 0.023356666271057393, RECONS: 0.023024127818644047, DISTANCE: 0.33253823386298287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7137, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9916, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6328, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [18/25] Loss: 0.02330858289803329, RECONS: 0.022978662268111582, DISTANCE: 0.32992041738409744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6321, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9902, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6456, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [19/25] Loss: 0.023316498566418885, RECONS: 0.02298531085252762, DISTANCE: 0.3311875581741333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6720, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9933, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6528, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [20/25] Loss: 0.02327399275132588, RECONS: 0.022942893029678436, DISTANCE: 0.3310995328994024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6132, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9919, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6488, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [21/25] Loss: 0.023245693269101055, RECONS: 0.02291534620929848, DISTANCE: 0.33034690943631256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9955, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6454, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [22/25] Loss: 0.023125227297777714, RECONS: 0.022795212981493576, DISTANCE: 0.33001414589259936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6304, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9896, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6410, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [23/25] Loss: 0.023108091748630006, RECONS: 0.022776901644344132, DISTANCE: 0.33118995030721027
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9908, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6395, device='cuda:0', grad_fn=<MeanBackward0>)
Train[79/300] [24/25] Loss: 0.02309915117919445, RECONS: 0.022754646688699722, DISTANCE: 0.3445043659210205
Test[79/300] [0/2] Loss: 0.025935493409633636, RECONS: 0.02495940588414669, DISTANCE: 0.9760870933532715
Test[79/300] [1/2] Loss: 0.026416846551001072, RECONS: 0.02514250297099352, DISTANCE: 1.274343490600586
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6217, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9910, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6404, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [0/25] Loss: 0.020764803513884544, RECONS: 0.020417021587491035, DISTANCE: 0.3477811813354492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6039, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9883, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6447, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [1/25] Loss: 0.021834897808730602, RECONS: 0.021486871875822544, DISTANCE: 0.3480253219604492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6067, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9932, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6455, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [2/25] Loss: 0.021622196460763615, RECONS: 0.02128793050845464, DISTANCE: 0.3342652718226115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6481, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9936, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6446, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [3/25] Loss: 0.021888351999223232, RECONS: 0.021552936639636755, DISTANCE: 0.3354150354862213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9876, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6396, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [4/25] Loss: 0.02180173173546791, RECONS: 0.021478714793920516, DISTANCE: 0.32301671504974366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6308, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9897, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6413, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [5/25] Loss: 0.021761327981948853, RECONS: 0.021441552167137463, DISTANCE: 0.3197755614916484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6339, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9930, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6378, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [6/25] Loss: 0.02169735117682389, RECONS: 0.02137365777577673, DISTANCE: 0.32369325842176166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9936, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6370, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [7/25] Loss: 0.02159167709760368, RECONS: 0.02127006696537137, DISTANCE: 0.3216099441051483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6342, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9925, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6391, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [8/25] Loss: 0.021548321470618248, RECONS: 0.0212247624165482, DISTANCE: 0.32355878088209367
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6288, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9909, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6396, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [9/25] Loss: 0.021536228992044926, RECONS: 0.021211478486657144, DISTANCE: 0.32475035190582274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6646, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9897, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6412, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [10/25] Loss: 0.02159153026613322, RECONS: 0.021266167983412743, DISTANCE: 0.3253620971332897
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9903, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6390, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [11/25] Loss: 0.021500880209108193, RECONS: 0.021167929749935865, DISTANCE: 0.33295021454493207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6242, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9872, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6402, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [12/25] Loss: 0.02146277891901823, RECONS: 0.021128666658814136, DISTANCE: 0.3341119747895461
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6954, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9902, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6378, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [13/25] Loss: 0.021379081532359123, RECONS: 0.02104462536850146, DISTANCE: 0.33445593288966585
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6245, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9920, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6430, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [14/25] Loss: 0.021362122893333436, RECONS: 0.021028408035635947, DISTANCE: 0.33371458848317465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9911, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6475, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [15/25] Loss: 0.02143098192755133, RECONS: 0.02109594235662371, DISTANCE: 0.33503932505846024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9917, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6432, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [16/25] Loss: 0.021400454070638206, RECONS: 0.021068188635741964, DISTANCE: 0.332265250823077
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9911, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6394, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [17/25] Loss: 0.021328455458084743, RECONS: 0.020995655200547643, DISTANCE: 0.332800030708313
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9896, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6397, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [18/25] Loss: 0.021300005971601133, RECONS: 0.020967340194865278, DISTANCE: 0.33266553753300715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6243, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9883, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6421, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [19/25] Loss: 0.021279966924339533, RECONS: 0.02094799969345331, DISTANCE: 0.33196701407432555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6533, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9889, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6410, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [20/25] Loss: 0.02129618867876984, RECONS: 0.020964547991752625, DISTANCE: 0.33164046491895405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7490, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9863, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6387, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [21/25] Loss: 0.021298410878940063, RECONS: 0.020966897887939758, DISTANCE: 0.33151277086951514
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7442, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9860, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6319, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [22/25] Loss: 0.021270587878382725, RECONS: 0.020938794897950214, DISTANCE: 0.33179278477378515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9874, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6289, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [23/25] Loss: 0.02126123437968393, RECONS: 0.0209311256185174, DISTANCE: 0.3301085978746414
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6234, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9889, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[80/300] [24/25] Loss: 0.02125474289059639, RECONS: 0.020910415649414062, DISTANCE: 0.3443270540237427
Test[80/300] [0/2] Loss: 0.02377091720700264, RECONS: 0.023149944841861725, DISTANCE: 0.6209726333618164
Test[80/300] [1/2] Loss: 0.024159234017133713, RECONS: 0.02313322015106678, DISTANCE: 1.0260136127471924
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6254, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9889, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6350, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [0/25] Loss: 0.020070739090442657, RECONS: 0.01975744031369686, DISTANCE: 0.31329941749572754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9907, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6471, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [1/25] Loss: 0.02101621776819229, RECONS: 0.02070280723273754, DISTANCE: 0.3134111166000366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5886, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9893, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6510, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [2/25] Loss: 0.02094392105937004, RECONS: 0.020623082295060158, DISTANCE: 0.32083884874979657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5751, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9907, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6490, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [3/25] Loss: 0.020867399871349335, RECONS: 0.020550149958580732, DISTANCE: 0.3172498941421509
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9861, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6392, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [4/25] Loss: 0.02064393162727356, RECONS: 0.02032383717596531, DISTANCE: 0.3200943946838379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9931, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6341, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [5/25] Loss: 0.020547662551204365, RECONS: 0.02022484814127286, DISTANCE: 0.32281432549158734
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9858, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6336, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [6/25] Loss: 0.020464385194437846, RECONS: 0.02013913488813809, DISTANCE: 0.32525014877319336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6244, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9897, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6326, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [7/25] Loss: 0.020447990158572793, RECONS: 0.02012282097712159, DISTANCE: 0.32516902685165405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9906, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6383, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [8/25] Loss: 0.02035728593667348, RECONS: 0.020031804632809427, DISTANCE: 0.32548124260372585
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9907, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6415, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [9/25] Loss: 0.020323431678116323, RECONS: 0.019997728429734705, DISTANCE: 0.32570317983627317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9861, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6451, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [10/25] Loss: 0.020219926129687916, RECONS: 0.019892795688726685, DISTANCE: 0.32713035019961273
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6640, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9913, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6450, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [11/25] Loss: 0.02013369183987379, RECONS: 0.019804377108812332, DISTANCE: 0.32931456963221234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9861, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6464, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [12/25] Loss: 0.020115010870190766, RECONS: 0.01978440425143792, DISTANCE: 0.3306064789111798
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5347, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9871, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6476, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [13/25] Loss: 0.020195608027279377, RECONS: 0.019864374372575964, DISTANCE: 0.3312334844044277
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9875, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6386, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [14/25] Loss: 0.020127718771497407, RECONS: 0.019796123852332433, DISTANCE: 0.33159470558166504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6419, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9842, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6312, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [15/25] Loss: 0.02009720087517053, RECONS: 0.019765381584875286, DISTANCE: 0.3318191319704056
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6304, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [16/25] Loss: 0.020142703481456813, RECONS: 0.019809721476014924, DISTANCE: 0.3329818529241225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9878, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6273, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [17/25] Loss: 0.02010508274866475, RECONS: 0.01977144440429078, DISTANCE: 0.33363821771409774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9833, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6323, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [18/25] Loss: 0.02009409264122185, RECONS: 0.01976074709704048, DISTANCE: 0.33334540065966156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6722, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9863, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6346, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [19/25] Loss: 0.02009712066501379, RECONS: 0.01976444907486439, DISTANCE: 0.3326714515686035
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9839, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6321, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [20/25] Loss: 0.020087210461497307, RECONS: 0.019753812679222653, DISTANCE: 0.3333976836431594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7192, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9867, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6344, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [21/25] Loss: 0.020065388303588737, RECONS: 0.019732476381415672, DISTANCE: 0.3329118165102872
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6311, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9848, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6376, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [22/25] Loss: 0.020033946017856182, RECONS: 0.019700763828080635, DISTANCE: 0.33318210684734845
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6462, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9816, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6352, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [23/25] Loss: 0.02001636226971944, RECONS: 0.019682952513297398, DISTANCE: 0.3334096868832906
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9851, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6366, device='cuda:0', grad_fn=<MeanBackward0>)
Train[81/300] [24/25] Loss: 0.019941434785723685, RECONS: 0.01959253668785095, DISTANCE: 0.3488980531692505
Test[81/300] [0/2] Loss: 0.023449411615729332, RECONS: 0.022409170866012573, DISTANCE: 1.040241003036499
Test[81/300] [1/2] Loss: 0.023870627395808697, RECONS: 0.022342577576637268, DISTANCE: 1.5280498266220093
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6574, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9868, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6427, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [0/25] Loss: 0.018795713782310486, RECONS: 0.01846562884747982, DISTANCE: 0.33008432388305664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6254, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9856, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6468, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [1/25] Loss: 0.0198581013828516, RECONS: 0.019538567401468754, DISTANCE: 0.3195335268974304
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5752, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9857, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6441, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [2/25] Loss: 0.01971857746442159, RECONS: 0.01937936805188656, DISTANCE: 0.3392091989517212
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5588, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9828, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6338, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [3/25] Loss: 0.019425366539508104, RECONS: 0.01908410945907235, DISTANCE: 0.3412569463253021
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9898, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [4/25] Loss: 0.0194318525493145, RECONS: 0.01908237338066101, DISTANCE: 0.349479079246521
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9875, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [5/25] Loss: 0.019389837980270386, RECONS: 0.019047236690918606, DISTANCE: 0.342601219813029
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6280, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9869, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [6/25] Loss: 0.019340945407748222, RECONS: 0.019002864137291908, DISTANCE: 0.33808112144470215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9855, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6297, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [7/25] Loss: 0.019345293752849102, RECONS: 0.019007392693310976, DISTANCE: 0.3379010111093521
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9876, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6406, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [8/25] Loss: 0.01925264588660664, RECONS: 0.01891434399618043, DISTANCE: 0.3383018175760905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6330, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9850, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6500, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [9/25] Loss: 0.019276463612914085, RECONS: 0.018937998265028, DISTANCE: 0.3384653449058533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5862, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9855, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6548, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [10/25] Loss: 0.019177867268974132, RECONS: 0.01883672821250829, DISTANCE: 0.3411390889774669
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5134, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9870, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6600, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [11/25] Loss: 0.01916903117671609, RECONS: 0.018827250227332115, DISTANCE: 0.34178104996681213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9843, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6539, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [12/25] Loss: 0.01918985594350558, RECONS: 0.01884985013076892, DISTANCE: 0.34000585629389835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5140, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9806, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6419, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [13/25] Loss: 0.019126669503748417, RECONS: 0.01878893335482904, DISTANCE: 0.3377361808504377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6510, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9844, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6274, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [14/25] Loss: 0.019093581909934678, RECONS: 0.01875539335111777, DISTANCE: 0.33818855285644533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6425, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9831, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [15/25] Loss: 0.019128530751913786, RECONS: 0.018789890338666737, DISTANCE: 0.3386404290795326
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6438, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9842, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [16/25] Loss: 0.01909416957813151, RECONS: 0.01875531191335005, DISTANCE: 0.3388576577691471
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9858, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6262, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [17/25] Loss: 0.019104158298836812, RECONS: 0.01876563195967012, DISTANCE: 0.33852629529105294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9883, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6257, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [18/25] Loss: 0.0190802832183085, RECONS: 0.018744225858857756, DISTANCE: 0.3360573178843448
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9836, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6297, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [19/25] Loss: 0.019032237865030766, RECONS: 0.01869722157716751, DISTANCE: 0.33501628041267395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9860, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6379, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [20/25] Loss: 0.019012581734430222, RECONS: 0.01867806122061752, DISTANCE: 0.3345205443246024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9805, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6403, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [21/25] Loss: 0.01898693877526305, RECONS: 0.018652673133394936, DISTANCE: 0.33426569266752765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9883, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6379, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [22/25] Loss: 0.018947671531983044, RECONS: 0.018612966589305713, DISTANCE: 0.33470502625341003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9826, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6396, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [23/25] Loss: 0.018979362367341917, RECONS: 0.018644808636357386, DISTANCE: 0.334553783138593
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5952, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4546, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9855, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6380, device='cuda:0', grad_fn=<MeanBackward0>)
Train[82/300] [24/25] Loss: 0.01903267577290535, RECONS: 0.018682792037725448, DISTANCE: 0.34988380908966066
Test[82/300] [0/2] Loss: 0.021646520122885704, RECONS: 0.020757028833031654, DISTANCE: 0.8894906044006348
Test[82/300] [1/2] Loss: 0.02211306244134903, RECONS: 0.020822961814701557, DISTANCE: 1.2901003956794739
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5674, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9871, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6272, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [0/25] Loss: 0.018567558377981186, RECONS: 0.018244348466396332, DISTANCE: 0.3232100009918213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7165, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9796, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [1/25] Loss: 0.01853572018444538, RECONS: 0.01821888517588377, DISTANCE: 0.31683528423309326
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6986, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9864, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [2/25] Loss: 0.018695882211128872, RECONS: 0.018381912882129352, DISTANCE: 0.31396937370300293
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9891, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [3/25] Loss: 0.01885383203625679, RECONS: 0.018537218682467937, DISTANCE: 0.3166136145591736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6637, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9853, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [4/25] Loss: 0.018909915164113045, RECONS: 0.01859303191304207, DISTANCE: 0.3168835163116455
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6218, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9882, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6328, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [5/25] Loss: 0.01875647995620966, RECONS: 0.01844366764028867, DISTANCE: 0.3128126660982768
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6115, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9823, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6436, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [6/25] Loss: 0.018629162705370357, RECONS: 0.018320495528834208, DISTANCE: 0.3086674043110439
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9839, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6467, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [7/25] Loss: 0.01846218924038112, RECONS: 0.01814951514825225, DISTANCE: 0.3126743733882904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9809, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6481, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [8/25] Loss: 0.018492019838756986, RECONS: 0.01817446243431833, DISTANCE: 0.31755773226420086
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5443, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9824, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6442, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [9/25] Loss: 0.018506052531301977, RECONS: 0.018192383274435998, DISTANCE: 0.3136696100234985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6255, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9815, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6336, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [10/25] Loss: 0.0185269872573289, RECONS: 0.018210948529568585, DISTANCE: 0.31603906371376733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6266, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [11/25] Loss: 0.018449596595019102, RECONS: 0.01813358999788761, DISTANCE: 0.31600695848464966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6257, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9873, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6194, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [12/25] Loss: 0.018518807366490364, RECONS: 0.018202559162790958, DISTANCE: 0.31624850860008824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6141, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9822, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [13/25] Loss: 0.01851081768316882, RECONS: 0.01819208769926003, DISTANCE: 0.3187302436147417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6480, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9853, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6352, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [14/25] Loss: 0.018515752255916597, RECONS: 0.018197533736626307, DISTANCE: 0.3182187716166178
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9883, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6425, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [15/25] Loss: 0.018520805169828236, RECONS: 0.018200546968728304, DISTANCE: 0.3202584609389305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6434, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [16/25] Loss: 0.018481393947320825, RECONS: 0.018163691000903353, DISTANCE: 0.31770318395951214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6330, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9837, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6383, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [17/25] Loss: 0.018473639463384945, RECONS: 0.018152369186282158, DISTANCE: 0.32127051220999825
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5783, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9841, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6278, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [18/25] Loss: 0.018420413038448283, RECONS: 0.01809978220415743, DISTANCE: 0.32063104604419906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6178, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9828, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6287, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [19/25] Loss: 0.018350248225033283, RECONS: 0.01803164593875408, DISTANCE: 0.3186024785041809
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [20/25] Loss: 0.018289983006460325, RECONS: 0.0179695322932232, DISTANCE: 0.3204508963085356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6338, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6310, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [21/25] Loss: 0.01820343944498084, RECONS: 0.017882332967763596, DISTANCE: 0.32110669396140357
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9856, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6342, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [22/25] Loss: 0.018158666222639706, RECONS: 0.01783751785431219, DISTANCE: 0.3211486028588336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6274, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5759, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9807, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6371, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [23/25] Loss: 0.018098599277436733, RECONS: 0.017776404585068423, DISTANCE: 0.3221949140230815
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5942, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5319, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9809, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6457, device='cuda:0', grad_fn=<MeanBackward0>)
Train[83/300] [24/25] Loss: 0.01817654460668564, RECONS: 0.017838907912373542, DISTANCE: 0.3376368713378906
Test[83/300] [0/2] Loss: 0.020954512059688568, RECONS: 0.020155688747763634, DISTANCE: 0.7988241910934448
Test[83/300] [1/2] Loss: 0.020864302292466164, RECONS: 0.019678927026689053, DISTANCE: 1.1853753328323364
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9905, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6436, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [0/25] Loss: 0.018009454011917114, RECONS: 0.0176902636885643, DISTANCE: 0.31918954849243164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9779, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6309, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [1/25] Loss: 0.01757340505719185, RECONS: 0.01724437065422535, DISTANCE: 0.32903367280960083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9847, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [2/25] Loss: 0.017302133763829868, RECONS: 0.016981724028786022, DISTANCE: 0.3204091787338257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9817, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [3/25] Loss: 0.017575396690517664, RECONS: 0.017252306919544935, DISTANCE: 0.3230894207954407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6255, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9796, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [4/25] Loss: 0.017624252662062644, RECONS: 0.0173006784170866, DISTANCE: 0.3235738277435303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9857, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [5/25] Loss: 0.01749513732890288, RECONS: 0.01717549003660679, DISTANCE: 0.31964703400929767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9854, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6329, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [6/25] Loss: 0.017376974491136416, RECONS: 0.01705170582447733, DISTANCE: 0.3252683367047991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9773, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6389, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [7/25] Loss: 0.01726801274344325, RECONS: 0.016943753929808736, DISTANCE: 0.3242585062980652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6069, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9837, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6429, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [8/25] Loss: 0.017222884835468397, RECONS: 0.01689439680841234, DISTANCE: 0.328487753868103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5923, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5591, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9786, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6424, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [9/25] Loss: 0.017457444034516812, RECONS: 0.017126699164509773, DISTANCE: 0.33074469566345216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5796, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9784, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6316, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [10/25] Loss: 0.01736873659220609, RECONS: 0.017032146115194668, DISTANCE: 0.33659033341841266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6236, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9779, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6260, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [11/25] Loss: 0.017310543761899073, RECONS: 0.0169741902500391, DISTANCE: 0.3363533318042755
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9806, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6312, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [12/25] Loss: 0.017351990279096823, RECONS: 0.017006892567643754, DISTANCE: 0.3450974959593553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5366, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6347, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [13/25] Loss: 0.017258472740650177, RECONS: 0.016916269037340368, DISTANCE: 0.34220350640160696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5256, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6370, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [14/25] Loss: 0.01719628485540549, RECONS: 0.016854037965337434, DISTANCE: 0.34224671522776284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6429, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9858, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6453, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [15/25] Loss: 0.017266610637307167, RECONS: 0.016924500348977745, DISTANCE: 0.3421100899577141
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6423, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [16/25] Loss: 0.017309347934582654, RECONS: 0.016968715497676062, DISTANCE: 0.34063227036420035
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5536, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9827, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6311, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [17/25] Loss: 0.017310327850282192, RECONS: 0.016969430984722242, DISTANCE: 0.34089675214555526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6180, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9753, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [18/25] Loss: 0.01731126529997901, RECONS: 0.016969662061647364, DISTANCE: 0.34160308461440236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6228, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6508, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9813, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [19/25] Loss: 0.017360260430723428, RECONS: 0.01701834090054035, DISTANCE: 0.3419194042682648
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6258, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [20/25] Loss: 0.01730804420298054, RECONS: 0.016966194978782108, DISTANCE: 0.34184908866882324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5938, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5506, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9817, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6370, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [21/25] Loss: 0.017392915419556877, RECONS: 0.017053378745913506, DISTANCE: 0.3395365259864114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9799, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6367, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [22/25] Loss: 0.017304747810830242, RECONS: 0.016966336528244225, DISTANCE: 0.3384111549543298
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9803, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6398, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [23/25] Loss: 0.017320152294511598, RECONS: 0.016981456040715177, DISTANCE: 0.3386961321036021
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5242, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6330, device='cuda:0', grad_fn=<MeanBackward0>)
Train[84/300] [24/25] Loss: 0.017272102609276772, RECONS: 0.016920515857636927, DISTANCE: 0.3515865993499756
Test[84/300] [0/2] Loss: 0.019194534048438072, RECONS: 0.018529651686549187, DISTANCE: 0.6648820638656616
Test[84/300] [1/2] Loss: 0.01964013185352087, RECONS: 0.018499325029551983, DISTANCE: 1.1408070921897888
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6149, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9718, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6289, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [0/25] Loss: 0.016362126916646957, RECONS: 0.016068952158093452, DISTANCE: 0.2931748628616333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9826, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6278, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [1/25] Loss: 0.016148547641932964, RECONS: 0.015837895218282938, DISTANCE: 0.31065255403518677
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9800, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [2/25] Loss: 0.016298847272992134, RECONS: 0.01598611070464055, DISTANCE: 0.31273682912190753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9794, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [3/25] Loss: 0.016376886516809464, RECONS: 0.01606908836401999, DISTANCE: 0.30779826641082764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5473, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9800, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6296, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [4/25] Loss: 0.01633920259773731, RECONS: 0.016008788160979746, DISTANCE: 0.3304143905639648
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6326, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [5/25] Loss: 0.016239752682546776, RECONS: 0.015919089782983065, DISTANCE: 0.3206628163655599
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6341, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [6/25] Loss: 0.01621672883629799, RECONS: 0.01589439290442637, DISTANCE: 0.3223357541220529
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6171, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6327, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [7/25] Loss: 0.016313528642058372, RECONS: 0.01599137031007558, DISTANCE: 0.32215823233127594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5538, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9710, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6261, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [8/25] Loss: 0.016271895004643336, RECONS: 0.015950073695017233, DISTANCE: 0.32182112005021835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6213, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9735, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [9/25] Loss: 0.01629368867725134, RECONS: 0.015964708756655455, DISTANCE: 0.32897974252700807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9807, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6289, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [10/25] Loss: 0.016241303052414547, RECONS: 0.015909927981820973, DISTANCE: 0.3313748294656927
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5696, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9843, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6352, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [11/25] Loss: 0.01616318275531133, RECONS: 0.015832631615921855, DISTANCE: 0.330550879240036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5477, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9739, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6424, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [12/25] Loss: 0.01615657313511922, RECONS: 0.015827312564047482, DISTANCE: 0.3292603401037363
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5419, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6402, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [13/25] Loss: 0.016094336020095006, RECONS: 0.015762294975242445, DISTANCE: 0.3320408122880118
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5864, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5442, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6365, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [14/25] Loss: 0.01621223787466685, RECONS: 0.01587863148500522, DISTANCE: 0.333606227238973
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6372, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6244, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [15/25] Loss: 0.016209667432121933, RECONS: 0.015877385216299444, DISTANCE: 0.332282118499279
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [16/25] Loss: 0.016193279777379596, RECONS: 0.015861793969045666, DISTANCE: 0.3314857693279491
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [17/25] Loss: 0.01621105708181858, RECONS: 0.015880145287762087, DISTANCE: 0.33091172244813705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9688, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [18/25] Loss: 0.01619706342094823, RECONS: 0.015867292047723344, DISTANCE: 0.3297713242079082
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5746, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9808, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6298, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [19/25] Loss: 0.016203110571950674, RECONS: 0.01587396333925426, DISTANCE: 0.3291472017765045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9715, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6380, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [20/25] Loss: 0.016210248250336873, RECONS: 0.01588053260708139, DISTANCE: 0.3297156379336402
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5388, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9843, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6402, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [21/25] Loss: 0.016237543811174957, RECONS: 0.01590974446894093, DISTANCE: 0.3277993581511758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5486, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6383, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [22/25] Loss: 0.016179962326651035, RECONS: 0.01585337305036576, DISTANCE: 0.32658928891886835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9758, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6316, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [23/25] Loss: 0.01613017194904387, RECONS: 0.015804244438186288, DISTANCE: 0.3259275108575821
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6302, device='cuda:0', grad_fn=<MeanBackward0>)
Train[85/300] [24/25] Loss: 0.016130877807736397, RECONS: 0.01578796487301588, DISTANCE: 0.3429129219055176
Test[85/300] [0/2] Loss: 0.01851494424045086, RECONS: 0.017489731311798096, DISTANCE: 1.0252132415771484
Test[85/300] [1/2] Loss: 0.01890546642243862, RECONS: 0.017672144807875156, DISTANCE: 1.2333220839500427
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6027, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9641, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [0/25] Loss: 0.015133251436054707, RECONS: 0.01477467268705368, DISTANCE: 0.3585784435272217
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.7035, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [1/25] Loss: 0.015241788700222969, RECONS: 0.014899100176990032, DISTANCE: 0.3426884412765503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9751, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6287, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [2/25] Loss: 0.015159837901592255, RECONS: 0.014838728122413158, DISTANCE: 0.32110969225565594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9739, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6411, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [3/25] Loss: 0.015469385776668787, RECONS: 0.015143380733206868, DISTANCE: 0.32600516080856323
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9826, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6412, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [4/25] Loss: 0.015558944270014762, RECONS: 0.015236525796353817, DISTANCE: 0.3224184513092041
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5590, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6359, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [5/25] Loss: 0.015512789754817883, RECONS: 0.015185213492562374, DISTANCE: 0.32757629950841266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5512, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9805, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [6/25] Loss: 0.015509987782154764, RECONS: 0.015187670609780721, DISTANCE: 0.32231717450278147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5598, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [7/25] Loss: 0.015506759868003428, RECONS: 0.015181902097538114, DISTANCE: 0.32485775649547577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [8/25] Loss: 0.01546711122824086, RECONS: 0.015133743484814962, DISTANCE: 0.3333677053451538
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6097, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9715, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [9/25] Loss: 0.015461490396410227, RECONS: 0.015128315985202789, DISTANCE: 0.3331744074821472
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9640, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [10/25] Loss: 0.015402425927194681, RECONS: 0.015068411657756025, DISTANCE: 0.3340142315084284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9799, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6301, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [11/25] Loss: 0.015505015073964993, RECONS: 0.015166026695321003, DISTANCE: 0.33898837367693585
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9798, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6318, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [12/25] Loss: 0.015412790127671681, RECONS: 0.015069539443804668, DISTANCE: 0.3432506506259625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6337, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [13/25] Loss: 0.015308719327939408, RECONS: 0.014966651464679412, DISTANCE: 0.34206784623009817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9815, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6377, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [14/25] Loss: 0.015329164452850819, RECONS: 0.014985637180507183, DISTANCE: 0.3435272534688314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5371, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6325, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [15/25] Loss: 0.015398851304780692, RECONS: 0.015052605362143368, DISTANCE: 0.3462459444999695
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5524, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9650, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6251, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [16/25] Loss: 0.015380994855042766, RECONS: 0.015036848921547918, DISTANCE: 0.3441459150875316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5286, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9748, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [17/25] Loss: 0.015355515397257276, RECONS: 0.015011294693168666, DISTANCE: 0.34422067138883805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6220, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [18/25] Loss: 0.015406828079568712, RECONS: 0.015062683752100719, DISTANCE: 0.3441442753139295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [19/25] Loss: 0.015385313611477613, RECONS: 0.01504244483076036, DISTANCE: 0.34286872744560243
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6121, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6350, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [20/25] Loss: 0.015363559836433047, RECONS: 0.015021304067756449, DISTANCE: 0.34225569452558247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5694, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6374, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [21/25] Loss: 0.015340888534079899, RECONS: 0.015000463759695942, DISTANCE: 0.3404247218912298
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6369, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [22/25] Loss: 0.015293795251004074, RECONS: 0.014954396766488966, DISTANCE: 0.33939843074135156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5474, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6389, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [23/25] Loss: 0.015273958793841302, RECONS: 0.014937231278357407, DISTANCE: 0.33672744532426196
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6356, device='cuda:0', grad_fn=<MeanBackward0>)
Train[86/300] [24/25] Loss: 0.015395293794572353, RECONS: 0.015042646341025829, DISTANCE: 0.3526474094390869
Test[86/300] [0/2] Loss: 0.01706472411751747, RECONS: 0.016345210373401642, DISTANCE: 0.7195143699645996
Test[86/300] [1/2] Loss: 0.017475503496825695, RECONS: 0.016343438997864723, DISTANCE: 1.1320646405220032
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5030, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [0/25] Loss: 0.014655325561761856, RECONS: 0.01435087900608778, DISTANCE: 0.3044466972351074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9672, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [1/25] Loss: 0.014514998067170382, RECONS: 0.014197800774127245, DISTANCE: 0.3171975016593933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6124, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [2/25] Loss: 0.014533217065036297, RECONS: 0.01421187569697698, DISTANCE: 0.3213416337966919
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5760, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [3/25] Loss: 0.014697120524942875, RECONS: 0.014371626079082489, DISTANCE: 0.3254946172237396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5669, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9680, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6192, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [4/25] Loss: 0.014706880599260331, RECONS: 0.014381761848926543, DISTANCE: 0.3251189231872559
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6125, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9753, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6250, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [5/25] Loss: 0.014672115289916595, RECONS: 0.014349171736588081, DISTANCE: 0.322943647702535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5746, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9731, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6315, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [6/25] Loss: 0.014547328331640788, RECONS: 0.01421997496592147, DISTANCE: 0.3273534093584333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6387, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [7/25] Loss: 0.014488426968455315, RECONS: 0.014160960796289146, DISTANCE: 0.3274662047624588
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4711, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6401, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [8/25] Loss: 0.014457632270124223, RECONS: 0.014130604660345448, DISTANCE: 0.32702767848968506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6338, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [9/25] Loss: 0.014521990623325109, RECONS: 0.014196812920272351, DISTANCE: 0.325177800655365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5109, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9799, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6272, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [10/25] Loss: 0.014527699486775831, RECONS: 0.014202697371894663, DISTANCE: 0.3250022367997603
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5685, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9685, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [11/25] Loss: 0.01457905963373681, RECONS: 0.014254702798401317, DISTANCE: 0.3243569831053416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5605, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9712, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [12/25] Loss: 0.014539861335204197, RECONS: 0.014214037845914181, DISTANCE: 0.32582364632533145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [13/25] Loss: 0.014558937533625535, RECONS: 0.014235958456993103, DISTANCE: 0.322979211807251
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6256, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6348, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [14/25] Loss: 0.014682689681649208, RECONS: 0.014358075459798177, DISTANCE: 0.3246143658955892
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6286, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6321, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [15/25] Loss: 0.014677256811410189, RECONS: 0.014353035599924624, DISTANCE: 0.3242213726043701
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5199, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6423, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [16/25] Loss: 0.014677746221423149, RECONS: 0.014351425473304355, DISTANCE: 0.32632092167349425
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9667, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6424, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [17/25] Loss: 0.014596967595732875, RECONS: 0.014264609923379289, DISTANCE: 0.33235781060324776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6408, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [18/25] Loss: 0.014524096034859357, RECONS: 0.014191010623778167, DISTANCE: 0.33308551813426773
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5215, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9694, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6351, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [19/25] Loss: 0.014520556153729557, RECONS: 0.014187040226534008, DISTANCE: 0.33351601362228395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9728, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6288, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [20/25] Loss: 0.014525743910954111, RECONS: 0.01419304683804512, DISTANCE: 0.332697175797962
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9644, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [21/25] Loss: 0.014498063701797615, RECONS: 0.014166301920671354, DISTANCE: 0.3317618803544478
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [22/25] Loss: 0.014506261269359486, RECONS: 0.014176831418729347, DISTANCE: 0.3294299374455991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6365, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9710, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [23/25] Loss: 0.014493442683791121, RECONS: 0.014163791745280227, DISTANCE: 0.3296510378519694
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5621, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[87/300] [24/25] Loss: 0.014540417417883873, RECONS: 0.014195521883666516, DISTANCE: 0.3448956298828125
Test[87/300] [0/2] Loss: 0.016742298379540443, RECONS: 0.015877854079008102, DISTANCE: 0.8644442558288574
Test[87/300] [1/2] Loss: 0.017037834972143173, RECONS: 0.015694639645516872, DISTANCE: 1.343195617198944
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6247, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [0/25] Loss: 0.013528742827475071, RECONS: 0.01320431288331747, DISTANCE: 0.3244297504425049
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9774, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [1/25] Loss: 0.013411034364253283, RECONS: 0.013084996957331896, DISTANCE: 0.32603710889816284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9710, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6258, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [2/25] Loss: 0.013628373543421427, RECONS: 0.013298683178921541, DISTANCE: 0.3296902577082316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6301, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [3/25] Loss: 0.013545055640861392, RECONS: 0.013217546744272113, DISTANCE: 0.3275087773799896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4622, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6326, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [4/25] Loss: 0.013684878498315812, RECONS: 0.013353758677840232, DISTANCE: 0.331119704246521
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5920, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4914, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9698, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6322, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [5/25] Loss: 0.014115373293558756, RECONS: 0.013788098158935705, DISTANCE: 0.3272749384244283
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5492, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [6/25] Loss: 0.014023952984384127, RECONS: 0.013692839071154594, DISTANCE: 0.3311137982777187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5995, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [7/25] Loss: 0.014014918473549187, RECONS: 0.013679156079888344, DISTANCE: 0.33576224744319916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9686, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [8/25] Loss: 0.014029783093267016, RECONS: 0.013698452048831515, DISTANCE: 0.33133089542388916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6187, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [9/25] Loss: 0.014018689468502998, RECONS: 0.013681331556290388, DISTANCE: 0.3373578190803528
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9644, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [10/25] Loss: 0.014035460793159225, RECONS: 0.013700283809819004, DISTANCE: 0.33517692305824975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5388, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9684, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6293, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [11/25] Loss: 0.013977067933107415, RECONS: 0.013642504811286926, DISTANCE: 0.3345630466938019
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5035, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9649, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6309, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [12/25] Loss: 0.013917579100682186, RECONS: 0.013582880895298261, DISTANCE: 0.3346981176963219
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5532, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6326, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [13/25] Loss: 0.013828498244817768, RECONS: 0.013491699272500617, DISTANCE: 0.33679890632629395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5889, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4694, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6339, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [14/25] Loss: 0.014019386159876983, RECONS: 0.01368360910564661, DISTANCE: 0.33577699661254884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6232, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6241, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [15/25] Loss: 0.013957076007500291, RECONS: 0.013621392485219985, DISTANCE: 0.3356834948062897
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [16/25] Loss: 0.013893465237582432, RECONS: 0.013557518668034497, DISTANCE: 0.33594656691831704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5007, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6297, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [17/25] Loss: 0.013838597366379367, RECONS: 0.013504312270217471, DISTANCE: 0.33428508043289185
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5323, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6277, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [18/25] Loss: 0.013798885733673447, RECONS: 0.013463622547293963, DISTANCE: 0.3352631832423963
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5551, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6292, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [19/25] Loss: 0.01376575380563736, RECONS: 0.013430041912943124, DISTANCE: 0.33571189641952515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [20/25] Loss: 0.013729857147804328, RECONS: 0.013394509619545369, DISTANCE: 0.3353475218727475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5617, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6244, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [21/25] Loss: 0.01374098988757892, RECONS: 0.013406554914333603, DISTANCE: 0.33443498611450195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [22/25] Loss: 0.013712130203519178, RECONS: 0.013378696880586769, DISTANCE: 0.33343331710152
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [23/25] Loss: 0.01368244388140738, RECONS: 0.013350580896561345, DISTANCE: 0.3318629761536916
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5935, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5738, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9748, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[88/300] [24/25] Loss: 0.013736537732183933, RECONS: 0.01338900249451399, DISTANCE: 0.34753522396087644
Test[88/300] [0/2] Loss: 0.015901679173111916, RECONS: 0.015148049220442772, DISTANCE: 0.7536306381225586
Test[88/300] [1/2] Loss: 0.01575234904885292, RECONS: 0.014753487426787615, DISTANCE: 0.9988617897033691
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [0/25] Loss: 0.013353219255805016, RECONS: 0.013010683469474316, DISTANCE: 0.34253597259521484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6188, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [1/25] Loss: 0.013118618167936802, RECONS: 0.01280206348747015, DISTANCE: 0.3165547847747803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5485, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6254, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [2/25] Loss: 0.01290150141964356, RECONS: 0.012584766993920008, DISTANCE: 0.31673447291056317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6365, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [3/25] Loss: 0.012935556704178452, RECONS: 0.012615765444934368, DISTANCE: 0.31979134678840637
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6386, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [4/25] Loss: 0.012764898128807545, RECONS: 0.012443717941641808, DISTANCE: 0.32118027210235595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5549, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6403, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [5/25] Loss: 0.01349410026644667, RECONS: 0.013172450785835585, DISTANCE: 0.3216494719187419
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5489, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9598, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [6/25] Loss: 0.013347563999039786, RECONS: 0.013029008305498533, DISTANCE: 0.3185556786400931
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5562, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [7/25] Loss: 0.013353211688809097, RECONS: 0.01302935800049454, DISTANCE: 0.3238537013530731
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9651, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [8/25] Loss: 0.013376508839428425, RECONS: 0.013052936229440901, DISTANCE: 0.323572662141588
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6262, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [9/25] Loss: 0.013356002885848284, RECONS: 0.013029604405164718, DISTANCE: 0.32639853954315184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [10/25] Loss: 0.013328302058983933, RECONS: 0.013000871816819365, DISTANCE: 0.3274302699349143
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5775, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [11/25] Loss: 0.013258433667942882, RECONS: 0.012932328274473548, DISTANCE: 0.32610541582107544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5324, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6346, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [12/25] Loss: 0.013210137804540304, RECONS: 0.012884986586868763, DISTANCE: 0.3251512050628662
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5894, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6379, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [13/25] Loss: 0.01329235965386033, RECONS: 0.012967392868761505, DISTANCE: 0.32496674571718487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5714, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9596, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6273, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [14/25] Loss: 0.013194347421328226, RECONS: 0.012869359614948431, DISTANCE: 0.3249877770741781
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [15/25] Loss: 0.013171547616366297, RECONS: 0.01284471689723432, DISTANCE: 0.3268306702375412
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6247, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9686, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [16/25] Loss: 0.013199356110656963, RECONS: 0.012873510227483861, DISTANCE: 0.32584581655614514
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [17/25] Loss: 0.013159319965375794, RECONS: 0.01283274663405286, DISTANCE: 0.3265732460551792
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5151, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9641, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6263, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [18/25] Loss: 0.013110319593627202, RECONS: 0.012784089500966826, DISTANCE: 0.32623000521408885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6352, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [19/25] Loss: 0.013050704356282949, RECONS: 0.012726384960114957, DISTANCE: 0.32431929707527163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6201, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6371, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [20/25] Loss: 0.012974426105973266, RECONS: 0.01265283159556843, DISTANCE: 0.32159442561013357
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5183, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6366, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [21/25] Loss: 0.01294491020962596, RECONS: 0.012623130555518648, DISTANCE: 0.32177958163348114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4711, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6316, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [22/25] Loss: 0.012902644503375759, RECONS: 0.012580279625304367, DISTANCE: 0.32236479157986847
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5269, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [23/25] Loss: 0.012876304409777125, RECONS: 0.012555320397950709, DISTANCE: 0.3209839314222336
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5842, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4541, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6192, device='cuda:0', grad_fn=<MeanBackward0>)
Train[89/300] [24/25] Loss: 0.01293419010937214, RECONS: 0.01259990520775318, DISTANCE: 0.3342848062515259
Test[89/300] [0/2] Loss: 0.015000169165432453, RECONS: 0.014062194153666496, DISTANCE: 0.9379745721817017
Test[89/300] [1/2] Loss: 0.015323426108807325, RECONS: 0.013967971317470074, DISTANCE: 1.3554542660713196
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [0/25] Loss: 0.01257261075079441, RECONS: 0.01222437433898449, DISTANCE: 0.3482365608215332
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5738, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [1/25] Loss: 0.012368644587695599, RECONS: 0.012030769605189562, DISTANCE: 0.3378748893737793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [2/25] Loss: 0.01222888876994451, RECONS: 0.011884756075839201, DISTANCE: 0.3441327015558879
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6182, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [3/25] Loss: 0.012339504901319742, RECONS: 0.012007446261122823, DISTANCE: 0.3320586383342743
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4973, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6288, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [4/25] Loss: 0.012174202501773835, RECONS: 0.011848199926316739, DISTANCE: 0.32600257396697996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4954, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6332, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [5/25] Loss: 0.012378410746653875, RECONS: 0.012057238258421421, DISTANCE: 0.3211725354194641
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5093, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6274, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [6/25] Loss: 0.012324800847896509, RECONS: 0.012001012584992818, DISTANCE: 0.32378831931522917
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5130, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [7/25] Loss: 0.012362145003862679, RECONS: 0.012039692606776953, DISTANCE: 0.3224524259567261
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5109, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [8/25] Loss: 0.012358780432906415, RECONS: 0.012038373491830297, DISTANCE: 0.3204069137573242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [9/25] Loss: 0.012307183817029, RECONS: 0.011986488848924637, DISTANCE: 0.3206949234008789
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5515, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [10/25] Loss: 0.012240073728290472, RECONS: 0.01191939405080947, DISTANCE: 0.32067959958856757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [11/25] Loss: 0.012214671509961287, RECONS: 0.011892242512355248, DISTANCE: 0.3224289317925771
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5564, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6351, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [12/25] Loss: 0.012387521636600677, RECONS: 0.012068020179867744, DISTANCE: 0.31950142750373256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6341, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [13/25] Loss: 0.012351557745465211, RECONS: 0.012032345602554935, DISTANCE: 0.3192121386528015
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6350, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [14/25] Loss: 0.01230939080317815, RECONS: 0.011986880314846833, DISTANCE: 0.3225104729334513
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6289, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [15/25] Loss: 0.012294073298107833, RECONS: 0.011970727238804102, DISTANCE: 0.3233460262417793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4664, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [16/25] Loss: 0.012271497343831202, RECONS: 0.011949524612111203, DISTANCE: 0.32197271375095143
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5336, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [17/25] Loss: 0.012289207842614915, RECONS: 0.011967853591259982, DISTANCE: 0.3213542103767395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5416, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9644, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [18/25] Loss: 0.012253207252605966, RECONS: 0.011931991645772206, DISTANCE: 0.32121557311007853
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [19/25] Loss: 0.012223699036985636, RECONS: 0.01190354977734387, DISTANCE: 0.32014923095703124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6092, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [20/25] Loss: 0.012198205505098616, RECONS: 0.011877254316849368, DISTANCE: 0.3209511609304519
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5457, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6273, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [21/25] Loss: 0.012245960194956173, RECONS: 0.011923297647048126, DISTANCE: 0.32266252691095526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [22/25] Loss: 0.012238016230580599, RECONS: 0.011915288298674252, DISTANCE: 0.3227279082588527
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6016, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9708, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [23/25] Loss: 0.012223530211485922, RECONS: 0.011901393571558097, DISTANCE: 0.3221366008122762
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5056, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[90/300] [24/25] Loss: 0.012233497723937035, RECONS: 0.011895139105618, DISTANCE: 0.3383585739135742
Test[90/300] [0/2] Loss: 0.013575544580817223, RECONS: 0.012650846503674984, DISTANCE: 0.9246983528137207
Test[90/300] [1/2] Loss: 0.013990905601531267, RECONS: 0.012512561865150928, DISTANCE: 1.4783437252044678
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5534, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [0/25] Loss: 0.011182677000761032, RECONS: 0.010873399674892426, DISTANCE: 0.30927765369415283
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [1/25] Loss: 0.011760597117245197, RECONS: 0.011436589062213898, DISTANCE: 0.32400834560394287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4711, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [2/25] Loss: 0.01176976008961598, RECONS: 0.011435950795809427, DISTANCE: 0.33380945523579914
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5077, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9686, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6281, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [3/25] Loss: 0.011606550542637706, RECONS: 0.01128472713753581, DISTANCE: 0.3218234181404114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6316, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [4/25] Loss: 0.011703631095588207, RECONS: 0.01138495970517397, DISTANCE: 0.31867132186889646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9619, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6271, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [5/25] Loss: 0.011600617319345474, RECONS: 0.011278480446587006, DISTANCE: 0.3221368193626404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [6/25] Loss: 0.011446768551000528, RECONS: 0.011124441799308573, DISTANCE: 0.3223267453057425
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [7/25] Loss: 0.011318269767798483, RECONS: 0.010993627947755158, DISTANCE: 0.3246418386697769
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [8/25] Loss: 0.011385497119691636, RECONS: 0.011061552808516555, DISTANCE: 0.32394436995188397
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5936, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5546, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9660, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6194, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [9/25] Loss: 0.011502644047141075, RECONS: 0.01117844833061099, DISTANCE: 0.32419573068618773
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [10/25] Loss: 0.011462732556868683, RECONS: 0.011135435832495039, DISTANCE: 0.32729675553061743
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [11/25] Loss: 0.011469285003840923, RECONS: 0.011138554817686478, DISTANCE: 0.33073020974795025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [12/25] Loss: 0.01149180058676463, RECONS: 0.011162166985181661, DISTANCE: 0.3296336394089919
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [13/25] Loss: 0.011478622111358814, RECONS: 0.011151052878371306, DISTANCE: 0.3275692803519113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5249, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [14/25] Loss: 0.011433406795064608, RECONS: 0.011108071357011796, DISTANCE: 0.3253354946772257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6334, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [15/25] Loss: 0.011479896260425448, RECONS: 0.011153186787851155, DISTANCE: 0.326709508895874
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4964, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6302, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [16/25] Loss: 0.011476134443107773, RECONS: 0.011151308084235471, DISTANCE: 0.3248264158473295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6254, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [17/25] Loss: 0.011460617184638977, RECONS: 0.011137693913446533, DISTANCE: 0.32292334900961983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5056, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9640, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [18/25] Loss: 0.011443543541980418, RECONS: 0.011121196721337344, DISTANCE: 0.3223469131871274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5183, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [19/25] Loss: 0.011428177449852228, RECONS: 0.011107137938961387, DISTANCE: 0.3210395872592926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [20/25] Loss: 0.011407337373211271, RECONS: 0.011086836723344666, DISTANCE: 0.32050070308503653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5598, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [21/25] Loss: 0.011402344796806574, RECONS: 0.011081036180257797, DISTANCE: 0.32130866700952704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9569, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [22/25] Loss: 0.01137431172411079, RECONS: 0.01105285233453564, DISTANCE: 0.32145941775778064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6246, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [23/25] Loss: 0.011370779985251525, RECONS: 0.011049277537191907, DISTANCE: 0.3215024669965108
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.2784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4747, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[91/300] [24/25] Loss: 0.011320949755609036, RECONS: 0.010985263586044312, DISTANCE: 0.33568617820739743
Test[91/300] [0/2] Loss: 0.013130499981343746, RECONS: 0.01233711838722229, DISTANCE: 0.7933812141418457
Test[91/300] [1/2] Loss: 0.013156354892998934, RECONS: 0.012128935195505619, DISTANCE: 1.0274193286895752
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5453, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6302, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [0/25] Loss: 0.011056486517190933, RECONS: 0.01077362336218357, DISTANCE: 0.28286290168762207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6277, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [1/25] Loss: 0.011223959736526012, RECONS: 0.010924886912107468, DISTANCE: 0.29907286167144775
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [2/25] Loss: 0.011156579169134298, RECONS: 0.010853953659534454, DISTANCE: 0.3026256163914998
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [3/25] Loss: 0.011110374005511403, RECONS: 0.010802676901221275, DISTANCE: 0.30769726634025574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3961, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [4/25] Loss: 0.011217960715293884, RECONS: 0.010899519920349121, DISTANCE: 0.318440842628479
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5827, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [5/25] Loss: 0.0110737852131327, RECONS: 0.010754467298587164, DISTANCE: 0.3193179170290629
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [6/25] Loss: 0.011031828421567167, RECONS: 0.010709895619324275, DISTANCE: 0.3219327415738787
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5209, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [7/25] Loss: 0.010977089055813849, RECONS: 0.010660580126568675, DISTANCE: 0.31650884449481964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [8/25] Loss: 0.010818609760867225, RECONS: 0.010502501287394099, DISTANCE: 0.3161083592308892
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [9/25] Loss: 0.010796262416988611, RECONS: 0.010480290371924638, DISTANCE: 0.3159719228744507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6244, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [10/25] Loss: 0.010840143077075481, RECONS: 0.010523220439526167, DISTANCE: 0.31692255627025256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4848, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [11/25] Loss: 0.01078820515734454, RECONS: 0.010469923028722405, DISTANCE: 0.31828205784161884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5163, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [12/25] Loss: 0.010746742670352642, RECONS: 0.010430320739172973, DISTANCE: 0.31642188475682187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [13/25] Loss: 0.010708664943064963, RECONS: 0.010393041385603803, DISTANCE: 0.3156234792300633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5107, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [14/25] Loss: 0.010656341537833213, RECONS: 0.010339160822331906, DISTANCE: 0.3171806255976359
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [15/25] Loss: 0.010652038210537285, RECONS: 0.010334839345887303, DISTANCE: 0.3171987533569336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5230, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [16/25] Loss: 0.01069463400498909, RECONS: 0.010375557686476147, DISTANCE: 0.3190762014950023
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4590, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [17/25] Loss: 0.010680611297074292, RECONS: 0.010359319185631143, DISTANCE: 0.3212920096185472
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5202, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [18/25] Loss: 0.010687513031849736, RECONS: 0.010364497962750886, DISTANCE: 0.32301498714246246
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5351, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [19/25] Loss: 0.010712530044838787, RECONS: 0.010391069110482931, DISTANCE: 0.3214608609676361
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5450, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [20/25] Loss: 0.010709445213987714, RECONS: 0.010387486556456202, DISTANCE: 0.3219585759299142
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [21/25] Loss: 0.010700345420363274, RECONS: 0.010379120538180525, DISTANCE: 0.32122480869293213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9504, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [22/25] Loss: 0.0106830935034415, RECONS: 0.010362459954036318, DISTANCE: 0.3206334943356721
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6306, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [23/25] Loss: 0.010647246652903656, RECONS: 0.010326526477001607, DISTANCE: 0.3207201361656189
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6391, device='cuda:0', grad_fn=<MeanBackward0>)
Train[92/300] [24/25] Loss: 0.010759240724146366, RECONS: 0.010425813086330891, DISTANCE: 0.3334276008605957
Test[92/300] [0/2] Loss: 0.012652769684791565, RECONS: 0.011788113974034786, DISTANCE: 0.8646560907363892
Test[92/300] [1/2] Loss: 0.012779762037098408, RECONS: 0.011468915734440088, DISTANCE: 1.3108466267585754
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6360, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [0/25] Loss: 0.010587049648165703, RECONS: 0.010273545980453491, DISTANCE: 0.313503623008728
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5208, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9356, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6222, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [1/25] Loss: 0.01028912840411067, RECONS: 0.0099876937456429, DISTANCE: 0.30143463611602783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [2/25] Loss: 0.010435873953004679, RECONS: 0.010115685251851877, DISTANCE: 0.32018856207529706
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [3/25] Loss: 0.010246240301057696, RECONS: 0.00990955880843103, DISTANCE: 0.33668139576911926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5079, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [4/25] Loss: 0.010177200846374034, RECONS: 0.009847905673086643, DISTANCE: 0.3292951822280884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5960, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [5/25] Loss: 0.010323662776499987, RECONS: 0.009993970394134521, DISTANCE: 0.3296923836072286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5174, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6253, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [6/25] Loss: 0.010395861496882779, RECONS: 0.01006678372089352, DISTANCE: 0.32907780579158236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5543, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9398, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [7/25] Loss: 0.010454503470100462, RECONS: 0.010125126573257148, DISTANCE: 0.3293769359588623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5834, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [8/25] Loss: 0.0104906117129657, RECONS: 0.010162187740206718, DISTANCE: 0.32842397689819336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [9/25] Loss: 0.010525934398174286, RECONS: 0.010199465975165366, DISTANCE: 0.3264683961868286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6243, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5250, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [10/25] Loss: 0.010568654164671898, RECONS: 0.010242894884537567, DISTANCE: 0.3257592591372403
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4403, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9315, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6268, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [11/25] Loss: 0.01052283744017283, RECONS: 0.01019689852061371, DISTANCE: 0.3259388605753581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3869, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6416, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [12/25] Loss: 0.010571621859876009, RECONS: 0.010247638807273828, DISTANCE: 0.3239829998749953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4042, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9432, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6448, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [13/25] Loss: 0.010750286214585816, RECONS: 0.010421296115964651, DISTANCE: 0.32899005923952374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4752, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6381, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [14/25] Loss: 0.010749147708217303, RECONS: 0.010419202347596487, DISTANCE: 0.3299453099568685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4505, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9248, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [15/25] Loss: 0.010658507293555886, RECONS: 0.010328615957405418, DISTANCE: 0.32989127188920975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5016, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [16/25] Loss: 0.010612421395147549, RECONS: 0.010284475379568688, DISTANCE: 0.3279459686840282
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9367, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [17/25] Loss: 0.0106091668518881, RECONS: 0.010283699310902093, DISTANCE: 0.3254675202899509
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9293, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [18/25] Loss: 0.010593846195230358, RECONS: 0.010266786343172976, DISTANCE: 0.3270598336269981
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6098, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9421, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [19/25] Loss: 0.010571150621399284, RECONS: 0.010241740616038442, DISTANCE: 0.32940996885299684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [20/25] Loss: 0.01054801122241077, RECONS: 0.010221091631267751, DISTANCE: 0.3269195783705938
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [21/25] Loss: 0.01050492295656692, RECONS: 0.010179161475124683, DISTANCE: 0.32576145367188886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5925, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [22/25] Loss: 0.010538225345637487, RECONS: 0.010212065206597681, DISTANCE: 0.32616010437841003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5434, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9275, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [23/25] Loss: 0.01053219249782463, RECONS: 0.010205671812097231, DISTANCE: 0.3265206466118495
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[93/300] [24/25] Loss: 0.010513366535305976, RECONS: 0.01017169650644064, DISTANCE: 0.3416699838638306
Test[93/300] [0/2] Loss: 0.011400330811738968, RECONS: 0.010696817189455032, DISTANCE: 0.7035136222839355
Test[93/300] [1/2] Loss: 0.011578169651329517, RECONS: 0.010431556962430477, DISTANCE: 1.1466128826141357
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5036, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [0/25] Loss: 0.009893564507365227, RECONS: 0.009596815332770348, DISTANCE: 0.2967492341995239
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9522, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [1/25] Loss: 0.009924808517098427, RECONS: 0.009618903510272503, DISTANCE: 0.30590492486953735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5232, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6232, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [2/25] Loss: 0.009755057282745838, RECONS: 0.009426580742001534, DISTANCE: 0.32847646872202557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4867, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9404, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [3/25] Loss: 0.009882871294394135, RECONS: 0.009559791535139084, DISTANCE: 0.32307979464530945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5504, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [4/25] Loss: 0.009916559047996997, RECONS: 0.009599347412586213, DISTANCE: 0.31721160411834715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [5/25] Loss: 0.009862478046367565, RECONS: 0.009542340878397226, DISTANCE: 0.320137083530426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9421, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [6/25] Loss: 0.009783309086092882, RECONS: 0.009464806211846215, DISTANCE: 0.3185028518949236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5250, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [7/25] Loss: 0.010000270092859864, RECONS: 0.00967516319360584, DISTANCE: 0.3251068741083145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5272, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9322, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [8/25] Loss: 0.009946974097854562, RECONS: 0.009618511009547446, DISTANCE: 0.3284630907906426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5274, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9358, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [9/25] Loss: 0.009893324598670006, RECONS: 0.009568518213927745, DISTANCE: 0.3248064279556274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5413, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [10/25] Loss: 0.009773760864680464, RECONS: 0.009447605518454855, DISTANCE: 0.3261553807692094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9353, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [11/25] Loss: 0.00968372511367003, RECONS: 0.009361208726962408, DISTANCE: 0.32251642147699994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5128, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6246, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [12/25] Loss: 0.009653958778541822, RECONS: 0.009326507480671773, DISTANCE: 0.3274513299648578
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4514, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9223, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [13/25] Loss: 0.009664294309914112, RECONS: 0.009333654772490263, DISTANCE: 0.3306395837238857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5171, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9337, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [14/25] Loss: 0.00971443032224973, RECONS: 0.009385855558017889, DISTANCE: 0.32857481638590497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5955, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [15/25] Loss: 0.009753868100233376, RECONS: 0.009424323739949614, DISTANCE: 0.32954442501068115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5093, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [16/25] Loss: 0.009726898032514489, RECONS: 0.009400100885506938, DISTANCE: 0.3267971908344942
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9291, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [17/25] Loss: 0.00973834821747409, RECONS: 0.009410125462131368, DISTANCE: 0.3282228178448147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5463, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5971, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [18/25] Loss: 0.009780925208408581, RECONS: 0.00945186992420962, DISTANCE: 0.32905534066652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5418, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [19/25] Loss: 0.009746042918413878, RECONS: 0.009418698400259018, DISTANCE: 0.3273445785045624
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9407, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [20/25] Loss: 0.009735705685757455, RECONS: 0.009409511461853981, DISTANCE: 0.3261942749931699
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4869, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [21/25] Loss: 0.009705764749510721, RECONS: 0.009380679069594904, DISTANCE: 0.3250857103954662
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6218, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4387, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9247, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [22/25] Loss: 0.009674661144938158, RECONS: 0.009347933304050694, DISTANCE: 0.3267278723094774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4444, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9306, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [23/25] Loss: 0.009637866246824464, RECONS: 0.009311670515065392, DISTANCE: 0.32619576156139374
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4102, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9131, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6282, device='cuda:0', grad_fn=<MeanBackward0>)
Train[94/300] [24/25] Loss: 0.00964778609573841, RECONS: 0.009307663664221763, DISTANCE: 0.34012245655059814
Test[94/300] [0/2] Loss: 0.011858652345836163, RECONS: 0.010767847299575806, DISTANCE: 1.090804934501648
Test[94/300] [1/2] Loss: 0.012045532930642366, RECONS: 0.010671036317944527, DISTANCE: 1.3744964003562927
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4339, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6255, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [0/25] Loss: 0.008820384740829468, RECONS: 0.008504769764840603, DISTANCE: 0.31561481952667236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9289, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [1/25] Loss: 0.0092710773460567, RECONS: 0.008944517932832241, DISTANCE: 0.3265593647956848
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9339, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [2/25] Loss: 0.009148424801727137, RECONS: 0.008808505410949389, DISTANCE: 0.3399194081624349
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5312, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9247, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [3/25] Loss: 0.009347374318167567, RECONS: 0.009007833432406187, DISTANCE: 0.33954083919525146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4997, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [4/25] Loss: 0.009434385970234872, RECONS: 0.009091712906956673, DISTANCE: 0.34267311096191405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9322, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [5/25] Loss: 0.009270456619560719, RECONS: 0.008932880591601133, DISTANCE: 0.3375760316848755
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9237, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [6/25] Loss: 0.009269901817398412, RECONS: 0.008927848323115281, DISTANCE: 0.34205351557050434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5434, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9244, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [7/25] Loss: 0.009272350464016199, RECONS: 0.008934093988500535, DISTANCE: 0.33825644850730896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9404, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [8/25] Loss: 0.009225662797689438, RECONS: 0.008887762514253458, DISTANCE: 0.33790024121602374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [9/25] Loss: 0.009194647055119276, RECONS: 0.008852727711200714, DISTANCE: 0.34191930294036865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9316, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [10/25] Loss: 0.009160356511446562, RECONS: 0.0088197108019482, DISTANCE: 0.34064563837918366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6202, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4465, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9297, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [11/25] Loss: 0.009114683605730534, RECONS: 0.008775658207014203, DISTANCE: 0.3390253682931264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9257, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6241, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [12/25] Loss: 0.009220257329826172, RECONS: 0.008881946094334126, DISTANCE: 0.33831122288337123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4467, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9219, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [13/25] Loss: 0.009170655028096266, RECONS: 0.008831006541315998, DISTANCE: 0.3396484766687666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5163, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [14/25] Loss: 0.009162611824770768, RECONS: 0.008822913281619549, DISTANCE: 0.33969856103261314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [15/25] Loss: 0.009137661254499108, RECONS: 0.008800074167083949, DISTANCE: 0.33758707344532013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9267, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [16/25] Loss: 0.009221873026998603, RECONS: 0.008884054608643055, DISTANCE: 0.33781837715822105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9290, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [17/25] Loss: 0.009219181154751115, RECONS: 0.008881837336553467, DISTANCE: 0.33734378549787736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9191, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [18/25] Loss: 0.009211625756793901, RECONS: 0.008875426836311817, DISTANCE: 0.3361988946011192
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6061, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9192, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [19/25] Loss: 0.009207218047231435, RECONS: 0.008872476685792208, DISTANCE: 0.3347413182258606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9258, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [20/25] Loss: 0.009213302506222612, RECONS: 0.008879769061292921, DISTANCE: 0.33353341761089506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5380, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9177, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [21/25] Loss: 0.009174927518787708, RECONS: 0.00884395410222086, DISTANCE: 0.3309733813459223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4662, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9439, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6244, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [22/25] Loss: 0.009139482822755108, RECONS: 0.008809744582875915, DISTANCE: 0.32973821785139
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4594, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9265, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6327, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [23/25] Loss: 0.009118046223496398, RECONS: 0.00878724226883302, DISTANCE: 0.3308039456605911
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5822, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3701, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9126, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6315, device='cuda:0', grad_fn=<MeanBackward0>)
Train[95/300] [24/25] Loss: 0.009347136467695236, RECONS: 0.009001355543732643, DISTANCE: 0.34578092098236085
Test[95/300] [0/2] Loss: 0.010575939901173115, RECONS: 0.009752772748470306, DISTANCE: 0.8231673240661621
Test[95/300] [1/2] Loss: 0.01082466822117567, RECONS: 0.009561978280544281, DISTANCE: 1.2626898884773254
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4177, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9310, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [0/25] Loss: 0.00894780084490776, RECONS: 0.008643720299005508, DISTANCE: 0.3040804862976074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5468, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9125, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [1/25] Loss: 0.009217423386871815, RECONS: 0.008878172375261784, DISTANCE: 0.33925074338912964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5266, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9166, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [2/25] Loss: 0.00910931204756101, RECONS: 0.008778233081102371, DISTANCE: 0.3310786883036296
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9263, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5954, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [3/25] Loss: 0.00924680707976222, RECONS: 0.0089232106693089, DISTANCE: 0.3235962986946106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5627, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9242, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [4/25] Loss: 0.009262152016162872, RECONS: 0.008927593380212784, DISTANCE: 0.33455853462219237
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9247, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [5/25] Loss: 0.009250206872820854, RECONS: 0.008910613134503365, DISTANCE: 0.3395936091740926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9184, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [6/25] Loss: 0.009367672460419791, RECONS: 0.00903460117323058, DISTANCE: 0.33307112966264996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5012, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9315, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [7/25] Loss: 0.009273853269405663, RECONS: 0.008935284917242825, DISTANCE: 0.3385682553052902
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9352, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [8/25] Loss: 0.009221756934291787, RECONS: 0.008883306032253636, DISTANCE: 0.3384507894515991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4533, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9176, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [9/25] Loss: 0.009180343803018331, RECONS: 0.00884168716147542, DISTANCE: 0.3386565089225769
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9219, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [10/25] Loss: 0.009133189662613651, RECONS: 0.008796806108545174, DISTANCE: 0.3363834619522095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9156, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [11/25] Loss: 0.009040583157911897, RECONS: 0.008704955146337548, DISTANCE: 0.335627943277359
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9086, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [12/25] Loss: 0.009053813078655647, RECONS: 0.008720100857317448, DISTANCE: 0.3337121926821195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5390, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9270, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [13/25] Loss: 0.009042963052966766, RECONS: 0.008709110519183534, DISTANCE: 0.3338524784360613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6210, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9282, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [14/25] Loss: 0.009040332461396853, RECONS: 0.008707297717531521, DISTANCE: 0.33303469816843667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4500, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9234, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [15/25] Loss: 0.008994539210107177, RECONS: 0.008661585859954357, DISTANCE: 0.3329532966017723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4550, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9254, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [16/25] Loss: 0.00897067242904621, RECONS: 0.008637035813401727, DISTANCE: 0.33363657839158
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4435, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9121, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [17/25] Loss: 0.00894297467958596, RECONS: 0.008609101538442902, DISTANCE: 0.3338731262418959
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4496, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9137, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [18/25] Loss: 0.008905693447511447, RECONS: 0.008574883208463066, DISTANCE: 0.3308102331663433
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4471, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9144, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [19/25] Loss: 0.008868409413844347, RECONS: 0.008535439847037196, DISTANCE: 0.33296955823898317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5024, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9373, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [20/25] Loss: 0.008945930261342298, RECONS: 0.00861378111654804, DISTANCE: 0.33214915366399855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9296, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [21/25] Loss: 0.008945068767802282, RECONS: 0.008613602723926306, DISTANCE: 0.33146606250242755
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5134, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9164, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [22/25] Loss: 0.008924622574578161, RECONS: 0.008594064811325592, DISTANCE: 0.3305577972660894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9066, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [23/25] Loss: 0.008896860216433803, RECONS: 0.008566958014853299, DISTANCE: 0.3299022267262141
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6277, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5042, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9169, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[96/300] [24/25] Loss: 0.00893516767770052, RECONS: 0.008588319309055806, DISTANCE: 0.346848406791687
Test[96/300] [0/2] Loss: 0.010529209859669209, RECONS: 0.009509309194982052, DISTANCE: 1.0199003219604492
Test[96/300] [1/2] Loss: 0.010677705984562635, RECONS: 0.009218576364219189, DISTANCE: 1.4591295719146729
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9176, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6322, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [0/25] Loss: 0.008394003845751286, RECONS: 0.008044609799981117, DISTANCE: 0.3493943214416504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4315, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9204, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6400, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [1/25] Loss: 0.009040636476129293, RECONS: 0.008710919879376888, DISTANCE: 0.32971692085266113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4174, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9245, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6359, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [2/25] Loss: 0.009388774633407593, RECONS: 0.009072384797036648, DISTANCE: 0.3163901964823405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4548, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9142, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [3/25] Loss: 0.009182601934298873, RECONS: 0.008861829526722431, DISTANCE: 0.32077276706695557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [4/25] Loss: 0.008924446441233158, RECONS: 0.008606103248894215, DISTANCE: 0.318343448638916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9121, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5915, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [5/25] Loss: 0.00898426848774155, RECONS: 0.008673083502799273, DISTANCE: 0.31118520100911456
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9070, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5886, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [6/25] Loss: 0.009093698380248887, RECONS: 0.008775053412786551, DISTANCE: 0.31864520481654574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6220, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5350, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9204, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [7/25] Loss: 0.009201839682646096, RECONS: 0.008883283357135952, DISTANCE: 0.3185565620660782
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4869, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9141, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [8/25] Loss: 0.009085429004496999, RECONS: 0.008770074798829026, DISTANCE: 0.31535445319281685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4476, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9208, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6379, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [9/25] Loss: 0.009217437822371721, RECONS: 0.008892538491636515, DISTANCE: 0.32489957809448244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4378, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9213, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6403, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [10/25] Loss: 0.009356302547861229, RECONS: 0.009033680300820957, DISTANCE: 0.3226224725896662
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9145, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6285, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [11/25] Loss: 0.009351423243060708, RECONS: 0.009028428855041662, DISTANCE: 0.3229946196079254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4558, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9159, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [12/25] Loss: 0.009281574390255488, RECONS: 0.008958384394645691, DISTANCE: 0.3231902030798105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5360, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9137, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [13/25] Loss: 0.009246992945138897, RECONS: 0.008920437922435147, DISTANCE: 0.32655520950044903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9183, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [14/25] Loss: 0.009175243911643823, RECONS: 0.008843408152461051, DISTANCE: 0.3318359613418579
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6281, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5301, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9164, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [15/25] Loss: 0.009341673634480685, RECONS: 0.009008885826915503, DISTANCE: 0.33278800547122955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5338, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9193, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [16/25] Loss: 0.009313950041199432, RECONS: 0.008981641053276904, DISTANCE: 0.33230917594012094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4523, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9246, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6343, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [17/25] Loss: 0.009229942483620511, RECONS: 0.008900204854499962, DISTANCE: 0.3297378023465474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9163, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6481, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [18/25] Loss: 0.009210024323118361, RECONS: 0.008878477089303104, DISTANCE: 0.3315473857678865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9213, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6517, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [19/25] Loss: 0.009374650288373232, RECONS: 0.009043186320923269, DISTANCE: 0.3314640879631042
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4203, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9125, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6366, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [20/25] Loss: 0.009476650062771071, RECONS: 0.009146018020276512, DISTANCE: 0.33063216436476933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4989, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9172, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [21/25] Loss: 0.009442528455772183, RECONS: 0.009112224300307307, DISTANCE: 0.33030428127809003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9024, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5941, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [22/25] Loss: 0.009427760646719, RECONS: 0.009097900788259247, DISTANCE: 0.32985998754915985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5504, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9070, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5836, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [23/25] Loss: 0.00942942853240917, RECONS: 0.009099515523606291, DISTANCE: 0.32991312940915424
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.6011, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9067, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5795, device='cuda:0', grad_fn=<MeanBackward0>)
Train[97/300] [24/25] Loss: 0.009515516683459282, RECONS: 0.009170728493481875, DISTANCE: 0.34478829383850096
Test[97/300] [0/2] Loss: 0.014463318511843681, RECONS: 0.013440008275210857, DISTANCE: 1.0233101844787598
Test[97/300] [1/2] Loss: 0.014940831810235977, RECONS: 0.013581556268036366, DISTANCE: 1.3592755794525146
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9093, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5941, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [0/25] Loss: 0.009773118421435356, RECONS: 0.009417438879609108, DISTANCE: 0.355679988861084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9144, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [1/25] Loss: 0.009379607159644365, RECONS: 0.009012571536004543, DISTANCE: 0.36703604459762573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9233, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [2/25] Loss: 0.009047804089883963, RECONS: 0.008701354265213013, DISTANCE: 0.3464500109354655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4525, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9161, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6338, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [3/25] Loss: 0.008931800490245223, RECONS: 0.00858362391591072, DISTANCE: 0.3481768071651459
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4228, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9060, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6393, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [4/25] Loss: 0.008960308320820332, RECONS: 0.008619542233645916, DISTANCE: 0.3407662153244019
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9165, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6347, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [5/25] Loss: 0.0089165517129004, RECONS: 0.008578018595774969, DISTANCE: 0.3385331630706787
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9279, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [6/25] Loss: 0.008940109716994422, RECONS: 0.00860536311353956, DISTANCE: 0.3347466502870832
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9063, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [7/25] Loss: 0.009336961549706757, RECONS: 0.009002548642456532, DISTANCE: 0.33441297709941864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4725, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9048, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [8/25] Loss: 0.009247778293987116, RECONS: 0.008907006122171879, DISTANCE: 0.34077227115631104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6239, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9275, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [9/25] Loss: 0.009390454459935426, RECONS: 0.009047112800180912, DISTANCE: 0.3433417081832886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6281, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9068, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [10/25] Loss: 0.009476011195643381, RECONS: 0.009134952486916021, DISTANCE: 0.3410587527535178
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9042, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [11/25] Loss: 0.009400594746693969, RECONS: 0.009061456114674607, DISTANCE: 0.3391386866569519
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5297, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [12/25] Loss: 0.009318369942215772, RECONS: 0.008977674449292513, DISTANCE: 0.34069555539351243
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5902, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9233, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6340, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [13/25] Loss: 0.009417484048753977, RECONS: 0.009078133186059338, DISTANCE: 0.3393509302820478
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4812, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9073, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6318, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [14/25] Loss: 0.009345848423739275, RECONS: 0.009009515245755514, DISTANCE: 0.3363332668940226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8975, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6255, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [15/25] Loss: 0.009291271911934018, RECONS: 0.008959683764260262, DISTANCE: 0.3315882310271263
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9064, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [16/25] Loss: 0.009210497360019124, RECONS: 0.008876185152022278, DISTANCE: 0.3343122917063096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4393, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [17/25] Loss: 0.009162974750830067, RECONS: 0.008831010665744543, DISTANCE: 0.3319641550381978
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4276, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9073, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [18/25] Loss: 0.009094820848028911, RECONS: 0.008764628541508787, DISTANCE: 0.3301923714186016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4774, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9281, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [19/25] Loss: 0.009058858035132289, RECONS: 0.008728703879751266, DISTANCE: 0.3301542341709137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5528, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9010, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [20/25] Loss: 0.009019886808735984, RECONS: 0.00868842446999181, DISTANCE: 0.33146242300669354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9056, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [21/25] Loss: 0.008950714889744466, RECONS: 0.00861981365067715, DISTANCE: 0.3309013247489929
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5206, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9217, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [22/25] Loss: 0.008930678661588741, RECONS: 0.008600238123503716, DISTANCE: 0.330440614534461
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5166, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8979, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [23/25] Loss: 0.008946050598751754, RECONS: 0.008615457743871957, DISTANCE: 0.33059292534987134
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5890, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4295, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8889, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[98/300] [24/25] Loss: 0.008966039996594191, RECONS: 0.008615242075175047, DISTANCE: 0.3507979822158813
Test[98/300] [0/2] Loss: 0.009401589632034302, RECONS: 0.008553930558264256, DISTANCE: 0.8476592302322388
Test[98/300] [1/2] Loss: 0.00971111748367548, RECONS: 0.008644277695566416, DISTANCE: 1.0668400526046753
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8993, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [0/25] Loss: 0.008148685097694397, RECONS: 0.007801924832165241, DISTANCE: 0.3467600345611572
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8976, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5954, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [1/25] Loss: 0.00850374298170209, RECONS: 0.008154875133186579, DISTANCE: 0.34886765480041504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9022, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [2/25] Loss: 0.00836107631524404, RECONS: 0.008022945374250412, DISTANCE: 0.3381308317184448
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5008, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9198, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [3/25] Loss: 0.008147960412316024, RECONS: 0.0078206742182374, DISTANCE: 0.3272860646247864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9104, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [4/25] Loss: 0.008014008216559888, RECONS: 0.007690723240375519, DISTANCE: 0.3232848882675171
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3916, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9105, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6341, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [5/25] Loss: 0.007994312327355146, RECONS: 0.007665350412329038, DISTANCE: 0.3289618293444316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4179, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9129, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6394, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [6/25] Loss: 0.008428804975535189, RECONS: 0.008100042385714394, DISTANCE: 0.32876246316092356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9199, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6286, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [7/25] Loss: 0.008310434641316533, RECONS: 0.007983695133589208, DISTANCE: 0.3267393708229065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4572, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9056, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [8/25] Loss: 0.008216974325478077, RECONS: 0.007882540476404958, DISTANCE: 0.33443372779422337
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8922, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [9/25] Loss: 0.008318227995187045, RECONS: 0.007987290946766734, DISTANCE: 0.33093698024749757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5140, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9099, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [10/25] Loss: 0.00832398430528966, RECONS: 0.00799306808039546, DISTANCE: 0.3309161229567094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5008, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9073, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [11/25] Loss: 0.008304363582283258, RECONS: 0.007974448924263319, DISTANCE: 0.32991458972295123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9012, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [12/25] Loss: 0.00826127017633273, RECONS: 0.007933053402946545, DISTANCE: 0.3282167177933913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5046, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9203, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [13/25] Loss: 0.008206406641485435, RECONS: 0.007880239414849452, DISTANCE: 0.32616718326296124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5470, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [14/25] Loss: 0.008206362867106994, RECONS: 0.00787795353680849, DISTANCE: 0.3284092982610067
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5255, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9087, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [15/25] Loss: 0.008249567792518064, RECONS: 0.007921975164208561, DISTANCE: 0.3275925815105438
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [16/25] Loss: 0.008205489200704238, RECONS: 0.00787969004801091, DISTANCE: 0.3257991145638859
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8939, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [17/25] Loss: 0.008158786403429177, RECONS: 0.00783441417540113, DISTANCE: 0.32437219222386676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4688, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9240, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [18/25] Loss: 0.008177758219014657, RECONS: 0.00785325639145939, DISTANCE: 0.3245018155951249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9164, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [19/25] Loss: 0.008153084199875593, RECONS: 0.007827126141637563, DISTANCE: 0.32595803737640383
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5486, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9049, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [20/25] Loss: 0.008130631720026335, RECONS: 0.007802145089954138, DISTANCE: 0.3284866071882702
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5368, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9015, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [21/25] Loss: 0.008104776032269001, RECONS: 0.007775214267894626, DISTANCE: 0.32956173745068634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9019, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [22/25] Loss: 0.008059561131117136, RECONS: 0.007731324284458938, DISTANCE: 0.32823681831359863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4427, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9094, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6240, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [23/25] Loss: 0.00802911608479917, RECONS: 0.007700802389687548, DISTANCE: 0.3283136586348216
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4414, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[99/300] [24/25] Loss: 0.008062000796198844, RECONS: 0.0077157791145145895, DISTANCE: 0.3462216281890869
Test[99/300] [0/2] Loss: 0.00867148395627737, RECONS: 0.007799444254487753, DISTANCE: 0.872039794921875
Test[99/300] [1/2] Loss: 0.008853872306644917, RECONS: 0.007562427315860987, DISTANCE: 1.2914448976516724
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4513, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8953, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [0/25] Loss: 0.007965552620589733, RECONS: 0.007626626640558243, DISTANCE: 0.338925838470459
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4452, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8950, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [1/25] Loss: 0.007723616668954492, RECONS: 0.007397869601845741, DISTANCE: 0.32574695348739624
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8901, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [2/25] Loss: 0.007765758627404769, RECONS: 0.007449629406134288, DISTANCE: 0.31612900892893475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5104, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9017, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [3/25] Loss: 0.007707593613304198, RECONS: 0.007392609259113669, DISTANCE: 0.3149842321872711
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9081, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [4/25] Loss: 0.007666008826345205, RECONS: 0.0073495407588779925, DISTANCE: 0.3164679765701294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4742, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9102, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [5/25] Loss: 0.0075767491944134235, RECONS: 0.007242552004754543, DISTANCE: 0.33419714371363324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4721, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9006, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6271, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [6/25] Loss: 0.007549638194697244, RECONS: 0.007209044348980699, DISTANCE: 0.340593831879752
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4466, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9097, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6307, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [7/25] Loss: 0.007583352387882769, RECONS: 0.007241971092298627, DISTANCE: 0.3413812667131424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4335, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9016, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [8/25] Loss: 0.00769610402898656, RECONS: 0.007357084192335606, DISTANCE: 0.3390197886361016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4375, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8917, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [9/25] Loss: 0.007613452384248376, RECONS: 0.007271851226687431, DISTANCE: 0.3416011333465576
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9001, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [10/25] Loss: 0.0075566389767283745, RECONS: 0.0072176411578601055, DISTANCE: 0.3389977975325151
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5287, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9023, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [11/25] Loss: 0.007577829024133583, RECONS: 0.007240072436009844, DISTANCE: 0.3377565840880076
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4975, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9029, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [12/25] Loss: 0.007546414262973345, RECONS: 0.007212655224765723, DISTANCE: 0.3337590235930223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5487, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8782, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [13/25] Loss: 0.007525136927142739, RECONS: 0.007192679248484117, DISTANCE: 0.3324576531137739
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9094, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [14/25] Loss: 0.007520964027692875, RECONS: 0.007190666254609823, DISTANCE: 0.33029776414235434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8945, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [15/25] Loss: 0.007540614606114104, RECONS: 0.007211494172224775, DISTANCE: 0.3291204124689102
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8959, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [16/25] Loss: 0.007523111451198073, RECONS: 0.0071949646260370224, DISTANCE: 0.3281468152999878
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4030, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8873, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6208, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [17/25] Loss: 0.0076497044000360705, RECONS: 0.00732186449588173, DISTANCE: 0.3278398977385627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4344, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9036, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [18/25] Loss: 0.007629069671230881, RECONS: 0.0073023390662121145, DISTANCE: 0.32673059639177826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4422, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8837, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [19/25] Loss: 0.007632202352397144, RECONS: 0.00730626427102834, DISTANCE: 0.32593806385993956
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5074, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9052, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [20/25] Loss: 0.00761660538791191, RECONS: 0.007292484665023429, DISTANCE: 0.3241207031976609
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8956, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [21/25] Loss: 0.007603084689683535, RECONS: 0.007275766544890675, DISTANCE: 0.32731812650507147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8988, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [22/25] Loss: 0.0075800294339980765, RECONS: 0.007252516042765068, DISTANCE: 0.32751337859941565
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9213, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [23/25] Loss: 0.007602723101930072, RECONS: 0.007275022837954263, DISTANCE: 0.32770025233427685
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6301, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4696, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8961, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[100/300] [24/25] Loss: 0.007645034398883581, RECONS: 0.007298297621309758, DISTANCE: 0.3467367553710938
Test[100/300] [0/2] Loss: 0.009192569181323051, RECONS: 0.008038877509534359, DISTANCE: 1.1536917686462402
Test[100/300] [1/2] Loss: 0.009317619726061821, RECONS: 0.007773693883791566, DISTANCE: 1.5439260005950928
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8975, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6263, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [0/25] Loss: 0.00715746870264411, RECONS: 0.006807366386055946, DISTANCE: 0.35010242462158203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4770, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8905, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6285, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [1/25] Loss: 0.0071762073785066605, RECONS: 0.006834798026829958, DISTANCE: 0.34140944480895996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4184, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8962, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [2/25] Loss: 0.007433525907496612, RECONS: 0.007078950138141711, DISTANCE: 0.35457571347554523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8922, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [3/25] Loss: 0.007378146285191178, RECONS: 0.007040059077553451, DISTANCE: 0.33808717131614685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4392, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9018, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [4/25] Loss: 0.007441706769168377, RECONS: 0.007096609566360712, DISTANCE: 0.34509713649749757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6202, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4696, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9052, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [5/25] Loss: 0.007467823646341761, RECONS: 0.00713042674275736, DISTANCE: 0.33739687999089557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6217, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4610, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8939, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [6/25] Loss: 0.007463722356728145, RECONS: 0.007125874781715018, DISTANCE: 0.33784752232687815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4539, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9000, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [7/25] Loss: 0.007415480213239789, RECONS: 0.007082185766194016, DISTANCE: 0.33329440653324127
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4328, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9181, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6345, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [8/25] Loss: 0.007554989411599106, RECONS: 0.007224411444945468, DISTANCE: 0.33057791656917995
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9094, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6330, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [9/25] Loss: 0.007572635868564248, RECONS: 0.007245222246274352, DISTANCE: 0.3274135947227478
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4342, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8996, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [10/25] Loss: 0.007544574793428183, RECONS: 0.007220571987669577, DISTANCE: 0.32400277527895843
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9059, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [11/25] Loss: 0.00745982463316371, RECONS: 0.007137278793379664, DISTANCE: 0.3225457966327667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5125, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9023, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [12/25] Loss: 0.007430067966477229, RECONS: 0.0071056429654932935, DISTANCE: 0.3244249545610868
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5176, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8806, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5910, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [13/25] Loss: 0.007430779248742121, RECONS: 0.007107174423124109, DISTANCE: 0.3236047795840672
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8865, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5916, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [14/25] Loss: 0.0074420575052499775, RECONS: 0.007120028572777907, DISTANCE: 0.3220288991928101
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4970, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9093, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [15/25] Loss: 0.00747116474667564, RECONS: 0.007151359255658463, DISTANCE: 0.31980544328689575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8872, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [16/25] Loss: 0.007424883270526633, RECONS: 0.007105885648771244, DISTANCE: 0.3189975654377657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4573, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9001, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [17/25] Loss: 0.007460993404189746, RECONS: 0.007138984251974357, DISTANCE: 0.3220090733634101
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4226, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8904, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [18/25] Loss: 0.0076036971356523665, RECONS: 0.007279353829002694, DISTANCE: 0.32434321704663727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9041, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [19/25] Loss: 0.007564112567342818, RECONS: 0.007241014204919338, DISTANCE: 0.32309826612472536
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8829, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [20/25] Loss: 0.0075258744570116205, RECONS: 0.007201646632027058, DISTANCE: 0.32422772475651335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6230, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8973, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [21/25] Loss: 0.00755598072216592, RECONS: 0.007232443725859577, DISTANCE: 0.3235368891195817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [22/25] Loss: 0.0075254968934409, RECONS: 0.007202068343758583, DISTANCE: 0.3234284390573916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5935, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8938, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [23/25] Loss: 0.007538397311388205, RECONS: 0.0072161263863866525, DISTANCE: 0.32227083047231037
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6220, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4334, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9118, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[101/300] [24/25] Loss: 0.007588836383074522, RECONS: 0.007250654213130474, DISTANCE: 0.33818206787109373
Test[101/300] [0/2] Loss: 0.008731728419661522, RECONS: 0.007816080003976822, DISTANCE: 0.9156484603881836
Test[101/300] [1/2] Loss: 0.008784249424934387, RECONS: 0.007432643324136734, DISTANCE: 1.3516061305999756
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9043, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [0/25] Loss: 0.006914319004863501, RECONS: 0.00654080044478178, DISTANCE: 0.373518705368042
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5956, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9233, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6232, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [1/25] Loss: 0.007842294173315167, RECONS: 0.00749632203951478, DISTANCE: 0.3459720015525818
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8995, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [2/25] Loss: 0.007607549428939819, RECONS: 0.00727209107329448, DISTANCE: 0.335458238919576
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8981, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [3/25] Loss: 0.007526586297899485, RECONS: 0.00719853222835809, DISTANCE: 0.32805392146110535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8960, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [4/25] Loss: 0.007415968365967274, RECONS: 0.007095886673778295, DISTANCE: 0.32008159160614014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8953, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [5/25] Loss: 0.007416283246129751, RECONS: 0.007095580454915762, DISTANCE: 0.3207026720046997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4683, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8899, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [6/25] Loss: 0.007310524516339813, RECONS: 0.006989756199930396, DISTANCE: 0.32076823711395264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8969, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [7/25] Loss: 0.007272820628713816, RECONS: 0.006953737000003457, DISTANCE: 0.3190835863351822
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8886, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [8/25] Loss: 0.007186623186700874, RECONS: 0.006864897027197812, DISTANCE: 0.32172613673739964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4429, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8868, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [9/25] Loss: 0.007192473579198122, RECONS: 0.006863627349957824, DISTANCE: 0.3288461923599243
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5910, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8865, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [10/25] Loss: 0.007335452193563635, RECONS: 0.007007834289900281, DISTANCE: 0.3276178945194591
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [11/25] Loss: 0.007291581908551355, RECONS: 0.0069635205824549, DISTANCE: 0.3280613323052724
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5575, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8871, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [12/25] Loss: 0.0072465887866341155, RECONS: 0.006922773515375761, DISTANCE: 0.323815263234652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3961, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5048, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8948, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [13/25] Loss: 0.007306092618299382, RECONS: 0.006983616954780051, DISTANCE: 0.32247568879808697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5930, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4505, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8891, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [14/25] Loss: 0.007424046968420347, RECONS: 0.007101227932920059, DISTANCE: 0.32281906604766847
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4362, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8924, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [15/25] Loss: 0.007352953776717186, RECONS: 0.007029457978205755, DISTANCE: 0.3234958276152611
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5912, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5008, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8970, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [16/25] Loss: 0.0073763942619895235, RECONS: 0.007052995264530182, DISTANCE: 0.32339903186349306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4868, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9024, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [17/25] Loss: 0.007331991309507025, RECONS: 0.007009373408638769, DISTANCE: 0.3226179215643141
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4661, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8921, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [18/25] Loss: 0.0073084008242738875, RECONS: 0.006986095447485384, DISTANCE: 0.3223053907093249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4464, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8898, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [19/25] Loss: 0.007324756658636034, RECONS: 0.007002774998545647, DISTANCE: 0.321981680393219
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4269, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8897, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [20/25] Loss: 0.0072805677496251605, RECONS: 0.006959832384295407, DISTANCE: 0.3207353807630993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4258, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8880, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [21/25] Loss: 0.007248856000263582, RECONS: 0.006924797823144631, DISTANCE: 0.32405818050557916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8944, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [22/25] Loss: 0.007225932857102674, RECONS: 0.006901788768237052, DISTANCE: 0.32414409388666565
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4457, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8930, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [23/25] Loss: 0.007191135664470494, RECONS: 0.006867523693169157, DISTANCE: 0.32361197968324024
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3098, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6265, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9067, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[102/300] [24/25] Loss: 0.0071877016313374046, RECONS: 0.006847021281719208, DISTANCE: 0.3406803607940674
Test[102/300] [0/2] Loss: 0.008952388539910316, RECONS: 0.00816061720252037, DISTANCE: 0.7917709350585938
Test[102/300] [1/2] Loss: 0.009079902898520231, RECONS: 0.007770869880914688, DISTANCE: 1.309032678604126
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9011, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6352, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [0/25] Loss: 0.008317248895764351, RECONS: 0.007993262261152267, DISTANCE: 0.3239867687225342
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3546, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8895, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6365, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [1/25] Loss: 0.007429811172187328, RECONS: 0.00710570951923728, DISTANCE: 0.32410168647766113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3834, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8917, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6325, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [2/25] Loss: 0.007476732445259889, RECONS: 0.0071429127516845865, DISTANCE: 0.3338197072347005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4556, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9025, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [3/25] Loss: 0.0073481360450387, RECONS: 0.0070190728874877095, DISTANCE: 0.32906317710876465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4814, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8965, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [4/25] Loss: 0.007231525518000126, RECONS: 0.006895892228931189, DISTANCE: 0.3356332778930664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4337, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8826, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [5/25] Loss: 0.007264437930037578, RECONS: 0.006924235650027792, DISTANCE: 0.34020225207010907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8833, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [6/25] Loss: 0.007242696226707527, RECONS: 0.006904745807072946, DISTANCE: 0.33795036588396343
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5493, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8746, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [7/25] Loss: 0.007202759152278304, RECONS: 0.006868837866932154, DISTANCE: 0.33392125368118286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8947, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [8/25] Loss: 0.007172940609355767, RECONS: 0.006841515294379658, DISTANCE: 0.3314252694447835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8902, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [9/25] Loss: 0.007147119333967567, RECONS: 0.006816043797880411, DISTANCE: 0.33107547760009765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8890, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [10/25] Loss: 0.007239184977317398, RECONS: 0.006905528166416017, DISTANCE: 0.3336567445234819
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4073, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8919, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [11/25] Loss: 0.007207420421764255, RECONS: 0.00687443173956126, DISTANCE: 0.3329886297384898
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4286, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8716, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [12/25] Loss: 0.007167083461983846, RECONS: 0.006831598683045461, DISTANCE: 0.3354847247783954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4501, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8762, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [13/25] Loss: 0.007073801077370133, RECONS: 0.006739225737484438, DISTANCE: 0.33457530396325247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4317, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8816, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [14/25] Loss: 0.007054949489732583, RECONS: 0.006720007304102183, DISTANCE: 0.3349421501159668
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4332, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [15/25] Loss: 0.006992690614424646, RECONS: 0.006660058104898781, DISTANCE: 0.33263247460126877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4307, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8933, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [16/25] Loss: 0.007037213620017557, RECONS: 0.006705919417607433, DISTANCE: 0.33129415792577405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4395, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8983, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [17/25] Loss: 0.007025414715624518, RECONS: 0.006694387049517698, DISTANCE: 0.33102761374579537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6254, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8890, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [18/25] Loss: 0.007058711894052594, RECONS: 0.006723468437006599, DISTANCE: 0.335243400774504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8861, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [19/25] Loss: 0.007018561824224889, RECONS: 0.0066811044467613104, DISTANCE: 0.33745732307434084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5882, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8872, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [20/25] Loss: 0.007043955603703147, RECONS: 0.006707660609944945, DISTANCE: 0.3362949462164016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4676, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8796, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [21/25] Loss: 0.007090419975363396, RECONS: 0.0067536340476098385, DISTANCE: 0.33678589083931665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4412, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8784, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [22/25] Loss: 0.007102420897749455, RECONS: 0.006765489223534646, DISTANCE: 0.33693164327870245
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4409, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8889, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [23/25] Loss: 0.007061254427147408, RECONS: 0.006724496158615996, DISTANCE: 0.3367582360903422
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[103/300] [24/25] Loss: 0.0070716261863708494, RECONS: 0.00672000465914607, DISTANCE: 0.3516214942932129
Test[103/300] [0/2] Loss: 0.007470935583114624, RECONS: 0.006766662001609802, DISTANCE: 0.7042735815048218
Test[103/300] [1/2] Loss: 0.0076733920723199844, RECONS: 0.006581030786037445, DISTANCE: 1.092361330986023
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4005, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9166, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [0/25] Loss: 0.005920461844652891, RECONS: 0.005577585659921169, DISTANCE: 0.34287595748901367
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4375, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8860, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [1/25] Loss: 0.006080692168325186, RECONS: 0.00575289991684258, DISTANCE: 0.327792227268219
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8969, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [2/25] Loss: 0.00615342753008008, RECONS: 0.005822809257855018, DISTANCE: 0.3306181828180949
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4463, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8862, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [3/25] Loss: 0.006242034607566893, RECONS: 0.005909447907470167, DISTANCE: 0.3325866758823395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4763, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8763, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [4/25] Loss: 0.006314130965620279, RECONS: 0.005983896646648645, DISTANCE: 0.3302342653274536
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8856, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [5/25] Loss: 0.006342187989503145, RECONS: 0.0060111113513509435, DISTANCE: 0.33107662200927734
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8962, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [6/25] Loss: 0.006453369943691152, RECONS: 0.006124095326023442, DISTANCE: 0.3292745862688337
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5359, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8885, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [7/25] Loss: 0.006436395109631121, RECONS: 0.006105416803620756, DISTANCE: 0.33097827434539795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8827, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [8/25] Loss: 0.006455911789089441, RECONS: 0.006124418694525957, DISTANCE: 0.3314930597941081
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9032, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [9/25] Loss: 0.006475155288353562, RECONS: 0.006147531606256962, DISTANCE: 0.32762364149093626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9030, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6230, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [10/25] Loss: 0.006508667106655511, RECONS: 0.0061815918677232485, DISTANCE: 0.3270751888101751
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9103, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [11/25] Loss: 0.006477531123285492, RECONS: 0.0061483044022073345, DISTANCE: 0.32922666271527606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4230, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8931, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [12/25] Loss: 0.006429217827434723, RECONS: 0.006102855568035291, DISTANCE: 0.32636220638568586
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5885, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4055, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [13/25] Loss: 0.006550179993999856, RECONS: 0.006224780576303601, DISTANCE: 0.32539933919906616
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8799, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [14/25] Loss: 0.006543313122044007, RECONS: 0.0062202814035117624, DISTANCE: 0.3230316559473673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8640, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [15/25] Loss: 0.006586212897673249, RECONS: 0.006262678449274972, DISTANCE: 0.32353438436985016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4766, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [16/25] Loss: 0.006622281117255197, RECONS: 0.006301044130369145, DISTANCE: 0.32123693297891054
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4205, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [17/25] Loss: 0.006658478562409679, RECONS: 0.006337054177290863, DISTANCE: 0.32142433855268693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4638, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8688, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [18/25] Loss: 0.006636335342926414, RECONS: 0.006317365301870986, DISTANCE: 0.3189699838035985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [19/25] Loss: 0.0065935354214161634, RECONS: 0.006274810479953885, DISTANCE: 0.31872488260269166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [20/25] Loss: 0.006624778599611351, RECONS: 0.0063067640931833355, DISTANCE: 0.31801445143563406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4299, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8766, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [21/25] Loss: 0.006633374564857645, RECONS: 0.006315635474906726, DISTANCE: 0.3177390423688022
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5898, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8766, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [22/25] Loss: 0.006714725360760222, RECONS: 0.006396845185562321, DISTANCE: 0.3178801225579303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4511, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9006, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [23/25] Loss: 0.006717543544558187, RECONS: 0.006399921452005704, DISTANCE: 0.31762203574180603
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4967, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8780, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5923, device='cuda:0', grad_fn=<MeanBackward0>)
Train[104/300] [24/25] Loss: 0.0067689428105950356, RECONS: 0.00643196078017354, DISTANCE: 0.3369819927215576
Test[104/300] [0/2] Loss: 0.009731683880090714, RECONS: 0.009085665456950665, DISTANCE: 0.6460188627243042
Test[104/300] [1/2] Loss: 0.010870547499507666, RECONS: 0.0096728908829391, DISTANCE: 1.1976568102836609
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5360, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8896, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [0/25] Loss: 0.007708986755460501, RECONS: 0.007442445959895849, DISTANCE: 0.26654064655303955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.6070, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8830, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [1/25] Loss: 0.007483616936951876, RECONS: 0.007200150052085519, DISTANCE: 0.2834668755531311
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5914, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8908, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [2/25] Loss: 0.007319271098822355, RECONS: 0.007011655097206433, DISTANCE: 0.3076159556706746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5060, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8904, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [3/25] Loss: 0.007170868339017034, RECONS: 0.006850664038211107, DISTANCE: 0.3202042579650879
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4392, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8901, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [4/25] Loss: 0.0071486344560980795, RECONS: 0.00683733094483614, DISTANCE: 0.31130352020263674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6211, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4117, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8991, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [5/25] Loss: 0.007081411313265562, RECONS: 0.006767326112215717, DISTANCE: 0.3140852053960164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8812, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [6/25] Loss: 0.007069145329296589, RECONS: 0.006752947278852973, DISTANCE: 0.3161980765206473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4117, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [7/25] Loss: 0.007093607564456761, RECONS: 0.006776558409910649, DISTANCE: 0.31704914569854736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4151, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8877, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [8/25] Loss: 0.007152929436415434, RECONS: 0.006833995951132642, DISTANCE: 0.31893348693847656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4514, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8941, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [9/25] Loss: 0.0070198662113398315, RECONS: 0.006700746575370431, DISTANCE: 0.3191196441650391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [10/25] Loss: 0.00710210276090286, RECONS: 0.006778724364597689, DISTANCE: 0.32337836785749957
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [11/25] Loss: 0.007111047278158367, RECONS: 0.006780118836710851, DISTANCE: 0.33092841506004333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6213, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8880, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [12/25] Loss: 0.0071147444586341195, RECONS: 0.006784060969948769, DISTANCE: 0.3306834606023935
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4442, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8783, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [13/25] Loss: 0.007060944036181484, RECONS: 0.006731075600587896, DISTANCE: 0.3298683932849339
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4213, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8826, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [14/25] Loss: 0.006957971366743246, RECONS: 0.006630811033149561, DISTANCE: 0.32716029485066733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9121, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6288, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [15/25] Loss: 0.006927859649294987, RECONS: 0.006598926556762308, DISTANCE: 0.32893306016921997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5939, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3163, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8952, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6321, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [16/25] Loss: 0.0070803709163823544, RECONS: 0.006746012662701747, DISTANCE: 0.3343582223443424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8874, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [17/25] Loss: 0.007021019545694192, RECONS: 0.006688847232403027, DISTANCE: 0.3321722944577535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8813, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [18/25] Loss: 0.007017468862039478, RECONS: 0.006687925638336884, DISTANCE: 0.32954319527274684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6266, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8735, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [19/25] Loss: 0.00702681161928922, RECONS: 0.006697294488549233, DISTANCE: 0.32951711416244506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4530, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [20/25] Loss: 0.006995129820314192, RECONS: 0.006667338533415681, DISTANCE: 0.3277912707555862
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4888, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8804, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [21/25] Loss: 0.0069859817158430815, RECONS: 0.0066587486812336874, DISTANCE: 0.3272330164909363
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5005, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8844, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [22/25] Loss: 0.006953993103588405, RECONS: 0.006627206346425025, DISTANCE: 0.32678673060044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4548, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8712, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [23/25] Loss: 0.006914394480797152, RECONS: 0.006587824240947763, DISTANCE: 0.3265702227751414
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8802, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[105/300] [24/25] Loss: 0.006892620287835598, RECONS: 0.006549404021352529, DISTANCE: 0.34321625709533693
Test[105/300] [0/2] Loss: 0.007646213285624981, RECONS: 0.006644111126661301, DISTANCE: 1.002102017402649
Test[105/300] [1/2] Loss: 0.00779459485784173, RECONS: 0.006382901920005679, DISTANCE: 1.4116929173469543
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8990, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [0/25] Loss: 0.005745853763073683, RECONS: 0.0054315319284796715, DISTANCE: 0.31432199478149414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4072, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8769, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [1/25] Loss: 0.0061391794588416815, RECONS: 0.0058186950627714396, DISTANCE: 0.320484459400177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8775, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [2/25] Loss: 0.006194303743541241, RECONS: 0.005873326677829027, DISTANCE: 0.3209771712621053
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4300, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8938, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [3/25] Loss: 0.00627565139438957, RECONS: 0.005964375799521804, DISTANCE: 0.3112756907939911
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4147, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8878, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [4/25] Loss: 0.006203818693757057, RECONS: 0.005880250595510006, DISTANCE: 0.32356812953948977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8909, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [5/25] Loss: 0.006153251354893048, RECONS: 0.005823649776478608, DISTANCE: 0.32960158586502075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8989, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [6/25] Loss: 0.006206036345767123, RECONS: 0.0058798833883234435, DISTANCE: 0.32615298884255545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8846, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [7/25] Loss: 0.006206594582181424, RECONS: 0.005885513266548514, DISTANCE: 0.32108134031295776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4230, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [8/25] Loss: 0.0062408420878152055, RECONS: 0.005920570033291976, DISTANCE: 0.3202720880508423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4354, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [9/25] Loss: 0.006211118726059795, RECONS: 0.005891940277069807, DISTANCE: 0.31917849779129026
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8772, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [10/25] Loss: 0.006210528483444994, RECONS: 0.00589380506426096, DISTANCE: 0.31672344424507837
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4820, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8751, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [11/25] Loss: 0.006238837260752916, RECONS: 0.005924117014122506, DISTANCE: 0.3147202630837758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8807, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [12/25] Loss: 0.006255359962009466, RECONS: 0.005942732274818879, DISTANCE: 0.31262770982889027
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8823, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [13/25] Loss: 0.0062340734459991965, RECONS: 0.005921684039224472, DISTANCE: 0.3123894248689924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8992, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [14/25] Loss: 0.006317762285470962, RECONS: 0.006005704744408528, DISTANCE: 0.3120575428009033
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4393, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8801, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [15/25] Loss: 0.006331231299554929, RECONS: 0.0060196952254045755, DISTANCE: 0.3115360736846924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4705, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [16/25] Loss: 0.006284587222206242, RECONS: 0.005971790565287366, DISTANCE: 0.3127966558232027
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4665, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8868, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [17/25] Loss: 0.006265617467256056, RECONS: 0.005952838575467467, DISTANCE: 0.31277890337838066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8957, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [18/25] Loss: 0.006273960792704632, RECONS: 0.005961033319564242, DISTANCE: 0.312927478238156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5011, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8948, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [19/25] Loss: 0.006250540819019079, RECONS: 0.005937049281783402, DISTANCE: 0.31349154114723204
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4467, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8866, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [20/25] Loss: 0.006251317360216663, RECONS: 0.005938848281013114, DISTANCE: 0.31246907938094365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4468, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8834, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [21/25] Loss: 0.006271975093775175, RECONS: 0.005960215348750353, DISTANCE: 0.31175974824211816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4492, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8781, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [22/25] Loss: 0.006257593692482814, RECONS: 0.005943180223845918, DISTANCE: 0.3144134697706803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4206, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8754, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [23/25] Loss: 0.006260611466132104, RECONS: 0.005944730791573723, DISTANCE: 0.3158806810776393
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4121, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[106/300] [24/25] Loss: 0.006284705325961113, RECONS: 0.00595440024510026, DISTANCE: 0.33030507564544676
Test[106/300] [0/2] Loss: 0.007109002210199833, RECONS: 0.006151866167783737, DISTANCE: 0.9571361541748047
Test[106/300] [1/2] Loss: 0.0073012663051486015, RECONS: 0.00593521585687995, DISTANCE: 1.3660505414009094
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4052, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8863, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [0/25] Loss: 0.0061574215069413185, RECONS: 0.005827856715768576, DISTANCE: 0.32956480979919434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8742, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6192, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [1/25] Loss: 0.006224922835826874, RECONS: 0.005900075891986489, DISTANCE: 0.3248470425605774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4166, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8718, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [2/25] Loss: 0.006014543275038402, RECONS: 0.0056941004780431586, DISTANCE: 0.3204428354899089
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4042, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8832, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [3/25] Loss: 0.005909159081056714, RECONS: 0.00558889948297292, DISTANCE: 0.32025957107543945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [4/25] Loss: 0.006072586961090564, RECONS: 0.005751961562782526, DISTANCE: 0.32062535285949706
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6259, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4079, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8813, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [5/25] Loss: 0.006147932494059205, RECONS: 0.005823760914305846, DISTANCE: 0.324171503384908
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4423, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8844, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [6/25] Loss: 0.00614437201459493, RECONS: 0.005826759817344802, DISTANCE: 0.31761213711329866
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8783, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [7/25] Loss: 0.006137150106951594, RECONS: 0.0058208805858157575, DISTANCE: 0.3162694573402405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4250, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8982, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [8/25] Loss: 0.006100802216678858, RECONS: 0.005787344701174233, DISTANCE: 0.3134574360317654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4415, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8892, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [9/25] Loss: 0.006212355243042112, RECONS: 0.005893371859565377, DISTANCE: 0.31898332834243776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4409, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9049, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [10/25] Loss: 0.006319627250460061, RECONS: 0.005997946866872636, DISTANCE: 0.3216803398999301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4532, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8953, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [11/25] Loss: 0.006327184499241412, RECONS: 0.006005735951475799, DISTANCE: 0.3214484949906667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5085, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8852, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [12/25] Loss: 0.0063054729253053665, RECONS: 0.005983096762345388, DISTANCE: 0.3223761045015775
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5350, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8836, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [13/25] Loss: 0.006291366581405912, RECONS: 0.00596726536085563, DISTANCE: 0.32410116706575665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4065, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8853, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [14/25] Loss: 0.006236727039019267, RECONS: 0.005912983138114214, DISTANCE: 0.3237438360850016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8897, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [15/25] Loss: 0.006238064874196425, RECONS: 0.0059117697819601744, DISTANCE: 0.32629503309726715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4449, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [16/25] Loss: 0.006198193083572037, RECONS: 0.005872582523700069, DISTANCE: 0.3256105114431942
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4492, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8962, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [17/25] Loss: 0.006242479715082381, RECONS: 0.005916863576405578, DISTANCE: 0.32561609480116105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4496, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [18/25] Loss: 0.006216055958678848, RECONS: 0.005890906151188047, DISTANCE: 0.32514976200304535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5009, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [19/25] Loss: 0.006206667330116033, RECONS: 0.005883269989863038, DISTANCE: 0.32339728474617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5943, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [20/25] Loss: 0.006194021708021562, RECONS: 0.005870840401344356, DISTANCE: 0.32318124884650823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4937, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8804, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [21/25] Loss: 0.0062112712555310945, RECONS: 0.005889430620961569, DISTANCE: 0.32184057344089856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4566, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8849, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [22/25] Loss: 0.006227520780394907, RECONS: 0.005906235851833354, DISTANCE: 0.32128485907679016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [23/25] Loss: 0.0062059015811731415, RECONS: 0.005884592867611597, DISTANCE: 0.32130864759286243
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3509, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8872, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6346, device='cuda:0', grad_fn=<MeanBackward0>)
Train[107/300] [24/25] Loss: 0.006247040089219808, RECONS: 0.0059117298386991025, DISTANCE: 0.33531018733978274
Test[107/300] [0/2] Loss: 0.008352464996278286, RECONS: 0.007421606685966253, DISTANCE: 0.9308581352233887
Test[107/300] [1/2] Loss: 0.008274069055914879, RECONS: 0.00702016381546855, DISTANCE: 1.2539052963256836
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8834, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6389, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [0/25] Loss: 0.005992695689201355, RECONS: 0.005682564340531826, DISTANCE: 0.310131311416626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3005, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9019, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6359, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [1/25] Loss: 0.006953147705644369, RECONS: 0.006642056163400412, DISTANCE: 0.3110915422439575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8787, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [2/25] Loss: 0.0065095997415483, RECONS: 0.006191542372107506, DISTANCE: 0.31805741786956787
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6187, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4274, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [3/25] Loss: 0.006239988375455141, RECONS: 0.005913935485295951, DISTANCE: 0.3260529041290283
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4833, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [4/25] Loss: 0.00619972925633192, RECONS: 0.005880430992692709, DISTANCE: 0.31929826736450195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4359, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [5/25] Loss: 0.0061036233479777975, RECONS: 0.005778980674222112, DISTANCE: 0.3246426582336426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4629, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8821, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [6/25] Loss: 0.006024703716060945, RECONS: 0.005699042430413621, DISTANCE: 0.3256612845829555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4438, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8803, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [7/25] Loss: 0.006011116143781692, RECONS: 0.00567985576344654, DISTANCE: 0.3312603533267975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [8/25] Loss: 0.005975144449621439, RECONS: 0.0056480590461028945, DISTANCE: 0.32708536254035103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4238, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8768, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [9/25] Loss: 0.006020865170285106, RECONS: 0.0056959243491292, DISTANCE: 0.3249408006668091
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4090, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8732, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [10/25] Loss: 0.006101074247536334, RECONS: 0.005773841064761986, DISTANCE: 0.3272331411188299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4085, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8737, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [11/25] Loss: 0.006076555776720245, RECONS: 0.005749768577516079, DISTANCE: 0.32678715387980145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8726, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [12/25] Loss: 0.0061401743441820145, RECONS: 0.0058104696755225844, DISTANCE: 0.3297046147860013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4627, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8787, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [13/25] Loss: 0.006157787017790335, RECONS: 0.005828570374952895, DISTANCE: 0.32921659094946726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8757, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [14/25] Loss: 0.006162678201993306, RECONS: 0.005832654144614935, DISTANCE: 0.33002399603525795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4417, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8776, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [15/25] Loss: 0.006133337796200067, RECONS: 0.005802529980428517, DISTANCE: 0.33080776780843735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4684, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8740, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [16/25] Loss: 0.0061174750273280286, RECONS: 0.005787678912062855, DISTANCE: 0.32979607582092285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4481, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8712, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [17/25] Loss: 0.006103023369279172, RECONS: 0.005772464054947098, DISTANCE: 0.33055926693810356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [18/25] Loss: 0.006141146154780137, RECONS: 0.0058122603222727776, DISTANCE: 0.3288857936859131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4836, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [19/25] Loss: 0.006115233106538653, RECONS: 0.0057839670218527315, DISTANCE: 0.33126604557037354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8624, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [20/25] Loss: 0.006090921615915639, RECONS: 0.005759852716610545, DISTANCE: 0.3310688620521909
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4719, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8786, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [21/25] Loss: 0.0060933028686453, RECONS: 0.005761368792842735, DISTANCE: 0.33193404566157947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4180, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8908, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [22/25] Loss: 0.006105845065220543, RECONS: 0.005774678662419319, DISTANCE: 0.3311663762382839
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8894, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [23/25] Loss: 0.0060831614925215645, RECONS: 0.005752899664609383, DISTANCE: 0.33026179174582165
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4466, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8703, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[108/300] [24/25] Loss: 0.006133596412837505, RECONS: 0.005784475840628147, DISTANCE: 0.34912054061889647
Test[108/300] [0/2] Loss: 0.0069062067195773125, RECONS: 0.006192318629473448, DISTANCE: 0.7138880491256714
Test[108/300] [1/2] Loss: 0.0071893311105668545, RECONS: 0.005806499859318137, DISTANCE: 1.3828310370445251
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [0/25] Loss: 0.005815220531076193, RECONS: 0.005457926541566849, DISTANCE: 0.35729408264160156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6237, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4222, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8775, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [1/25] Loss: 0.0058128435630351305, RECONS: 0.005486797308549285, DISTANCE: 0.3260462284088135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8801, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [2/25] Loss: 0.00572983967140317, RECONS: 0.005410225596278906, DISTANCE: 0.31961409250895184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3844, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8913, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6286, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [3/25] Loss: 0.00588375236839056, RECONS: 0.005569809582084417, DISTANCE: 0.3139427900314331
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3463, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6275, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [4/25] Loss: 0.006034457124769688, RECONS: 0.005715393647551537, DISTANCE: 0.3190634727478027
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [5/25] Loss: 0.006049718630189697, RECONS: 0.005727984321614106, DISTANCE: 0.3217343290646871
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3678, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [6/25] Loss: 0.006087506456034524, RECONS: 0.005765274965337345, DISTANCE: 0.32223148005349295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4474, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8750, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [7/25] Loss: 0.006302862660959363, RECONS: 0.005980720219668001, DISTANCE: 0.32214243710041046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5274, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8743, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5933, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [8/25] Loss: 0.006262852706842952, RECONS: 0.005939770852112108, DISTANCE: 0.323081824514601
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8828, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5916, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [9/25] Loss: 0.006406686315312981, RECONS: 0.006085293833166361, DISTANCE: 0.32139244079589846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5674, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8851, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [10/25] Loss: 0.006377416366541927, RECONS: 0.006056819195774468, DISTANCE: 0.3205971392718228
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5230, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [11/25] Loss: 0.006375620141625404, RECONS: 0.00605781147411714, DISTANCE: 0.3178086280822754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8724, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [12/25] Loss: 0.006331247707399039, RECONS: 0.00601186234360704, DISTANCE: 0.31938530848576474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4131, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8773, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [13/25] Loss: 0.006288064444171531, RECONS: 0.005969316698610783, DISTANCE: 0.3187477077756609
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8974, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6301, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [14/25] Loss: 0.006287716267009576, RECONS: 0.005968155680845181, DISTANCE: 0.3195605436960856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3188, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8804, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6262, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [15/25] Loss: 0.006291763100307435, RECONS: 0.005971549515379593, DISTANCE: 0.32021353393793106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4154, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8829, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6191, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [16/25] Loss: 0.006329103263423723, RECONS: 0.006008167504606878, DISTANCE: 0.320935705128838
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3965, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8984, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [17/25] Loss: 0.006368114431906078, RECONS: 0.006048061445148455, DISTANCE: 0.3200529350174798
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8805, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [18/25] Loss: 0.00634943478201565, RECONS: 0.006030122455405562, DISTANCE: 0.31931227759311076
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5871, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [19/25] Loss: 0.006343717267736792, RECONS: 0.006023071170784533, DISTANCE: 0.32064605355262754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5487, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5880, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [20/25] Loss: 0.006385894447919868, RECONS: 0.006065410140547014, DISTANCE: 0.32048425787971135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8636, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5928, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [21/25] Loss: 0.00643645986829969, RECONS: 0.006115645276043902, DISTANCE: 0.3208145499229431
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8929, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [22/25] Loss: 0.006427009832923827, RECONS: 0.006107394401307987, DISTANCE: 0.31961538998976996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8810, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [23/25] Loss: 0.006414598125653963, RECONS: 0.006094596251690139, DISTANCE: 0.32000182569026947
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3528, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6349, device='cuda:0', grad_fn=<MeanBackward0>)
Train[109/300] [24/25] Loss: 0.006414581313729286, RECONS: 0.006080511081963777, DISTANCE: 0.33407018184661863
Test[109/300] [0/2] Loss: 0.00900736078619957, RECONS: 0.007999973371624947, DISTANCE: 1.0073875188827515
Test[109/300] [1/2] Loss: 0.008915649726986885, RECONS: 0.007623153738677502, DISTANCE: 1.292496144771576
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8819, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6356, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [0/25] Loss: 0.007397088222205639, RECONS: 0.007089090533554554, DISTANCE: 0.3079977035522461
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8998, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6282, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [1/25] Loss: 0.007099382113665342, RECONS: 0.006786862853914499, DISTANCE: 0.3125193119049072
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3805, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8968, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [2/25] Loss: 0.006856172656019528, RECONS: 0.006539809983223677, DISTANCE: 0.3163626988728841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3722, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8917, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [3/25] Loss: 0.006573610124178231, RECONS: 0.006249483791179955, DISTANCE: 0.32412636280059814
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4385, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [4/25] Loss: 0.006626461911946535, RECONS: 0.0062909086234867575, DISTANCE: 0.3355532646179199
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5167, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [5/25] Loss: 0.006560200437282522, RECONS: 0.006228842151661714, DISTANCE: 0.33135827382405597
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5468, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8714, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [6/25] Loss: 0.006618872950119632, RECONS: 0.006288069965583938, DISTANCE: 0.33080298560006277
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5077, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8661, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [7/25] Loss: 0.006624295492656529, RECONS: 0.006298356864135712, DISTANCE: 0.3259386420249939
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4954, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [8/25] Loss: 0.006526917529602845, RECONS: 0.006201491484211551, DISTANCE: 0.32542603545718723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8810, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6250, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [9/25] Loss: 0.006412091385573149, RECONS: 0.006085940729826688, DISTANCE: 0.326150643825531
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3982, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8846, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6246, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [10/25] Loss: 0.006336741826751016, RECONS: 0.006007917945019223, DISTANCE: 0.32882388071580365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4153, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8723, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [11/25] Loss: 0.006420062777275841, RECONS: 0.006093132154395183, DISTANCE: 0.32693063219388324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3344, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8841, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [12/25] Loss: 0.006402271477362284, RECONS: 0.00607417244464159, DISTANCE: 0.32809903071476865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8920, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [13/25] Loss: 0.006371537090412208, RECONS: 0.0060433219852192065, DISTANCE: 0.32821508816310335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8848, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [14/25] Loss: 0.0063490103309353195, RECONS: 0.006020213880886634, DISTANCE: 0.3287964185078939
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4399, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8724, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [15/25] Loss: 0.00632593862246722, RECONS: 0.005995364772388712, DISTANCE: 0.33057383447885513
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6246, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [16/25] Loss: 0.006314359276610262, RECONS: 0.005983856890131445, DISTANCE: 0.33050236982457776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4653, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [17/25] Loss: 0.006276154683695899, RECONS: 0.00594618802683221, DISTANCE: 0.3299666378233168
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4207, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8775, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6303, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [18/25] Loss: 0.006295534929162578, RECONS: 0.005966103684745337, DISTANCE: 0.3294312326531661
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4052, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8700, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6306, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [19/25] Loss: 0.006325542414560914, RECONS: 0.005994688533246517, DISTANCE: 0.33085386753082274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5944, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8719, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [20/25] Loss: 0.006367916884344248, RECONS: 0.006038591598293611, DISTANCE: 0.3293252672467913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5939, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4016, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8860, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [21/25] Loss: 0.006349838867952878, RECONS: 0.006021875612945719, DISTANCE: 0.3279632275754755
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5928, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8771, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5893, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [22/25] Loss: 0.006360529334810765, RECONS: 0.006032845956961746, DISTANCE: 0.3276833503142647
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8914, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5788, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [23/25] Loss: 0.0063846226160724955, RECONS: 0.0060578552656807005, DISTANCE: 0.32676731546719867
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5775, device='cuda:0', grad_fn=<MeanBackward0>)
Train[110/300] [24/25] Loss: 0.006429623235017061, RECONS: 0.0060858426429331305, DISTANCE: 0.3437805604934692
Test[110/300] [0/2] Loss: 0.007595687173306942, RECONS: 0.006666923873126507, DISTANCE: 0.9287632703781128
Test[110/300] [1/2] Loss: 0.007816469762474298, RECONS: 0.006526185432448983, DISTANCE: 1.2902843356132507
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5330, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [0/25] Loss: 0.007260529324412346, RECONS: 0.006904625799506903, DISTANCE: 0.35590362548828125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4345, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8766, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [1/25] Loss: 0.00675426865927875, RECONS: 0.006406014319509268, DISTANCE: 0.34825432300567627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4302, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8900, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [2/25] Loss: 0.006473771762102842, RECONS: 0.006127085691938798, DISTANCE: 0.34668604532877606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4296, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6347, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [3/25] Loss: 0.006448214175179601, RECONS: 0.006115309777669609, DISTANCE: 0.3329043388366699
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3370, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8753, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6361, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [4/25] Loss: 0.00660859551280737, RECONS: 0.0062823394313454625, DISTANCE: 0.3262560129165649
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5859, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8782, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [5/25] Loss: 0.006992956157773733, RECONS: 0.006662652362138033, DISTANCE: 0.33030378818511963
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4021, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [6/25] Loss: 0.006874857204301017, RECONS: 0.006545865509126868, DISTANCE: 0.3289917196546282
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5840, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [7/25] Loss: 0.006861864996608347, RECONS: 0.006535630265716463, DISTANCE: 0.32623477280139923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4446, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5778, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [8/25] Loss: 0.006825701644023259, RECONS: 0.006498322666933139, DISTANCE: 0.3273790280024211
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4538, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8771, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5888, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [9/25] Loss: 0.006737802363932133, RECONS: 0.006413148669525981, DISTANCE: 0.32465373277664183
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4574, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [10/25] Loss: 0.006668325132605704, RECONS: 0.006339488000693646, DISTANCE: 0.32883714545856824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4461, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8779, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [11/25] Loss: 0.006646031164564192, RECONS: 0.006315183942206204, DISTANCE: 0.33084723353385925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4312, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [12/25] Loss: 0.006646898539307026, RECONS: 0.006315636556022442, DISTANCE: 0.33126198328458345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4416, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9074, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [13/25] Loss: 0.006574914524597781, RECONS: 0.006244686931105596, DISTANCE: 0.3302275964191982
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4072, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [14/25] Loss: 0.006492051668465138, RECONS: 0.006162254946927229, DISTANCE: 0.3297967116038005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8686, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [15/25] Loss: 0.0064503396570216864, RECONS: 0.006123208208009601, DISTANCE: 0.3271314427256584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4111, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [16/25] Loss: 0.006448440253734589, RECONS: 0.006121729610159117, DISTANCE: 0.32671063086565805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9086, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [17/25] Loss: 0.006394841863463323, RECONS: 0.006068788624058167, DISTANCE: 0.32605323526594376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8949, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [18/25] Loss: 0.006314897640167098, RECONS: 0.005990624109185056, DISTANCE: 0.324273523531462
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8951, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [19/25] Loss: 0.006264320248737932, RECONS: 0.005940272333100438, DISTANCE: 0.32404791116714476
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8689, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [20/25] Loss: 0.0062259952094228495, RECONS: 0.00590146208802859, DISTANCE: 0.32453311057317824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3712, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8861, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [21/25] Loss: 0.006196804958480326, RECONS: 0.005871537374332547, DISTANCE: 0.32526757500388404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8758, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [22/25] Loss: 0.006154011064411506, RECONS: 0.005828285630306472, DISTANCE: 0.32572543102761975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4006, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8737, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [23/25] Loss: 0.006184799363836646, RECONS: 0.0058595728284368915, DISTANCE: 0.3252265254656474
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6286, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.5031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8729, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[111/300] [24/25] Loss: 0.006207478232681751, RECONS: 0.005867582596838474, DISTANCE: 0.3398956298828125
Test[111/300] [0/2] Loss: 0.006777211092412472, RECONS: 0.005830646958202124, DISTANCE: 0.9465641975402832
Test[111/300] [1/2] Loss: 0.007168105570599437, RECONS: 0.005802405532449484, DISTANCE: 1.3656999468803406
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5884, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4768, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8728, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [0/25] Loss: 0.006265392992645502, RECONS: 0.00592360645532608, DISTANCE: 0.34178638458251953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4624, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8715, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [1/25] Loss: 0.006257334724068642, RECONS: 0.005917371716350317, DISTANCE: 0.33996284008026123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [2/25] Loss: 0.005924668783942859, RECONS: 0.00555843859910965, DISTANCE: 0.3662300109863281
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4104, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [3/25] Loss: 0.0058085741475224495, RECONS: 0.005452061421237886, DISTANCE: 0.3565126061439514
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3964, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8854, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [4/25] Loss: 0.005646625999361277, RECONS: 0.005297028366476298, DISTANCE: 0.3495975732803345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4055, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8863, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [5/25] Loss: 0.0055770783219486475, RECONS: 0.005229990463703871, DISTANCE: 0.3470878005027771
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8810, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [6/25] Loss: 0.005474716424942017, RECONS: 0.005134677514433861, DISTANCE: 0.3400388615471976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [7/25] Loss: 0.005595558264758438, RECONS: 0.005259386671241373, DISTANCE: 0.33617155253887177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8730, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [8/25] Loss: 0.005542033507178227, RECONS: 0.005207753895471494, DISTANCE: 0.3342795901828342
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8896, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [9/25] Loss: 0.005494755785912275, RECONS: 0.005163605185225606, DISTANCE: 0.33115057945251464
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4285, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8807, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [10/25] Loss: 0.005506257568909364, RECONS: 0.00517339085821401, DISTANCE: 0.33286669037558814
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4178, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8873, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [11/25] Loss: 0.0054556938509146375, RECONS: 0.005122748552821577, DISTANCE: 0.3329452872276306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8749, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [12/25] Loss: 0.005433741276367352, RECONS: 0.005098113969254952, DISTANCE: 0.3356272807488075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4499, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [13/25] Loss: 0.005484839335882238, RECONS: 0.005147918759446059, DISTANCE: 0.3369205338614328
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8751, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [14/25] Loss: 0.0054851647466421126, RECONS: 0.005150223709642887, DISTANCE: 0.3349410057067871
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4629, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8672, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [15/25] Loss: 0.005495943390997127, RECONS: 0.005160146887646988, DISTANCE: 0.33579646795988083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4745, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [16/25] Loss: 0.005552803522304577, RECONS: 0.0052179501611081995, DISTANCE: 0.33485333358540254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4427, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8809, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [17/25] Loss: 0.0055233885327147115, RECONS: 0.005189649424412184, DISTANCE: 0.33373908864127266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4446, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [18/25] Loss: 0.005544130567853388, RECONS: 0.005208427895252642, DISTANCE: 0.33570265769958496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8814, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [19/25] Loss: 0.005532805691473186, RECONS: 0.0051981355529278515, DISTANCE: 0.33467012643814087
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4546, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [20/25] Loss: 0.005520999542481843, RECONS: 0.005188727440933387, DISTANCE: 0.3322720981779553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4228, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8943, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [21/25] Loss: 0.005544794913889332, RECONS: 0.005212006624788046, DISTANCE: 0.3327882940118963
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4485, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8916, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [22/25] Loss: 0.005546520504614581, RECONS: 0.005213789419149575, DISTANCE: 0.33273108627485193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4283, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8768, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [23/25] Loss: 0.00551573788591971, RECONS: 0.005182437967353811, DISTANCE: 0.3332999249299367
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[112/300] [24/25] Loss: 0.005509065389633179, RECONS: 0.005157647226005793, DISTANCE: 0.35141816139221194
Test[112/300] [0/2] Loss: 0.006019145250320435, RECONS: 0.005132021848112345, DISTANCE: 0.8871233463287354
Test[112/300] [1/2] Loss: 0.006102200597524643, RECONS: 0.004864245653152466, DISTANCE: 1.2379547357559204
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3679, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [0/25] Loss: 0.005063352175056934, RECONS: 0.004738764371722937, DISTANCE: 0.3245878219604492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4087, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [1/25] Loss: 0.005471981363371015, RECONS: 0.005161759909242392, DISTANCE: 0.31022149324417114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3992, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8822, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [2/25] Loss: 0.005469195855160554, RECONS: 0.005145383533090353, DISTANCE: 0.32381240526835126
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [3/25] Loss: 0.005379254464060068, RECONS: 0.005062009557150304, DISTANCE: 0.3172449469566345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [4/25] Loss: 0.005301665980368853, RECONS: 0.004986709356307984, DISTANCE: 0.3149566650390625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [5/25] Loss: 0.0053443918004632, RECONS: 0.005026520229876041, DISTANCE: 0.3178715705871582
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4313, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [6/25] Loss: 0.005303570268941777, RECONS: 0.00498921557196549, DISTANCE: 0.3143547092165266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4146, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [7/25] Loss: 0.0052828878979198635, RECONS: 0.004969944595359266, DISTANCE: 0.3129432946443558
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3745, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8850, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [8/25] Loss: 0.00529995695170429, RECONS: 0.004985231285293897, DISTANCE: 0.3147256506813897
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3625, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8772, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6242, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [9/25] Loss: 0.0053563025314360855, RECONS: 0.0050418986938893795, DISTANCE: 0.3144038081169128
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8823, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [10/25] Loss: 0.005370707547461445, RECONS: 0.005052684890952977, DISTANCE: 0.3180226304314353
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4091, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9076, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [11/25] Loss: 0.005349356215447187, RECONS: 0.005031056081255277, DISTANCE: 0.3183001180489858
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8962, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [12/25] Loss: 0.005381081754771562, RECONS: 0.005063989378798466, DISTANCE: 0.31709235448103684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4242, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8942, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [13/25] Loss: 0.005344436803300466, RECONS: 0.0050278025945382455, DISTANCE: 0.3166341951915196
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4754, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8871, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [14/25] Loss: 0.005370779894292355, RECONS: 0.00505204206953446, DISTANCE: 0.3187378088633219
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4380, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8824, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [15/25] Loss: 0.0053748892969451845, RECONS: 0.005058173381257802, DISTANCE: 0.31671590358018875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4313, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [16/25] Loss: 0.005410204805872019, RECONS: 0.00508982636144056, DISTANCE: 0.3203784227371216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4719, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8745, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [17/25] Loss: 0.005395710726992952, RECONS: 0.005076538952481415, DISTANCE: 0.3191717399491204
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4573, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8860, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [18/25] Loss: 0.00536639780100239, RECONS: 0.005045489089465455, DISTANCE: 0.3209086719312166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4230, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8831, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [19/25] Loss: 0.005350417853333056, RECONS: 0.005029633874073625, DISTANCE: 0.3207839488983154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4182, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8742, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [20/25] Loss: 0.005359611163536708, RECONS: 0.005038239084006775, DISTANCE: 0.32137205487205867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3746, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [21/25] Loss: 0.005377444205805659, RECONS: 0.005055794577029618, DISTANCE: 0.32164961099624634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [22/25] Loss: 0.005357635511166375, RECONS: 0.005035396017458128, DISTANCE: 0.32223947670148767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8649, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [23/25] Loss: 0.0053550052689388394, RECONS: 0.005034441710449755, DISTANCE: 0.32056354979674023
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4252, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[113/300] [24/25] Loss: 0.005373947881162166, RECONS: 0.005036182310432196, DISTANCE: 0.3377655553817749
Test[113/300] [0/2] Loss: 0.006361175794154406, RECONS: 0.00534221064299345, DISTANCE: 1.018965244293213
Test[113/300] [1/2] Loss: 0.006738820346072316, RECONS: 0.0053653959184885025, DISTANCE: 1.3734242916107178
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [0/25] Loss: 0.005306833889335394, RECONS: 0.004994097165763378, DISTANCE: 0.31273651123046875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8833, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [1/25] Loss: 0.005293331341817975, RECONS: 0.0049990101251751184, DISTANCE: 0.29432106018066406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6212, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8655, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [2/25] Loss: 0.0054734644169608755, RECONS: 0.005179935290167729, DISTANCE: 0.29352903366088867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4153, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8825, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [3/25] Loss: 0.005325426463969052, RECONS: 0.005024546990171075, DISTANCE: 0.30087944865226746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4393, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8887, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [4/25] Loss: 0.00522654801607132, RECONS: 0.004915473330765962, DISTANCE: 0.31107468605041505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8694, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [5/25] Loss: 0.005181873372445504, RECONS: 0.004870962894832094, DISTANCE: 0.310910443464915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8837, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [6/25] Loss: 0.005230336383517299, RECONS: 0.004915575762944562, DISTANCE: 0.31476056575775146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3788, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8940, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [7/25] Loss: 0.0052161007188260555, RECONS: 0.004894630168564618, DISTANCE: 0.3214705139398575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3742, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8728, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [8/25] Loss: 0.0052281637779540485, RECONS: 0.004907518366558684, DISTANCE: 0.320645358827379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8715, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [9/25] Loss: 0.005261945351958275, RECONS: 0.004937315685674548, DISTANCE: 0.32462961673736573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8960, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5948, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [10/25] Loss: 0.005302670115435665, RECONS: 0.004975555887953801, DISTANCE: 0.3271141702478582
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [11/25] Loss: 0.005331892520189285, RECONS: 0.005007021633597712, DISTANCE: 0.3248708248138428
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [12/25] Loss: 0.005360759257410581, RECONS: 0.00503332601287044, DISTANCE: 0.3274331826430101
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4401, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [13/25] Loss: 0.005362567757921559, RECONS: 0.005038383583139096, DISTANCE: 0.32418411118643625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4170, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8798, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [14/25] Loss: 0.005353983429570993, RECONS: 0.005031726447244486, DISTANCE: 0.3222569147745768
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8650, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [15/25] Loss: 0.0053228728647809476, RECONS: 0.005001402867492288, DISTANCE: 0.3214699253439903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [16/25] Loss: 0.005327515934100922, RECONS: 0.005004509680849665, DISTANCE: 0.32300619518055634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5944, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8802, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [17/25] Loss: 0.005428362870588899, RECONS: 0.005105380926074253, DISTANCE: 0.32298190063900417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8724, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [18/25] Loss: 0.00542388388298844, RECONS: 0.005100511504631294, DISTANCE: 0.32337232639915064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8714, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [19/25] Loss: 0.005413600290194154, RECONS: 0.005091041931882501, DISTANCE: 0.32255831360816956
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4421, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [20/25] Loss: 0.0054006400252027175, RECONS: 0.005079094143140884, DISTANCE: 0.32154583363305955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [21/25] Loss: 0.00542011808350005, RECONS: 0.005098636050454595, DISTANCE: 0.3214819918979298
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8770, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [22/25] Loss: 0.005410114262738954, RECONS: 0.005088489198976237, DISTANCE: 0.32162503055904224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.5066, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8715, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [23/25] Loss: 0.005436181963887066, RECONS: 0.00511454016668722, DISTANCE: 0.32164176801840466
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4056, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8729, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[114/300] [24/25] Loss: 0.005474746357649564, RECONS: 0.005136680137366056, DISTANCE: 0.33806618213653566
Test[114/300] [0/2] Loss: 0.006478452123701572, RECONS: 0.005454689264297485, DISTANCE: 1.0237627029418945
Test[114/300] [1/2] Loss: 0.006530160782858729, RECONS: 0.0052152411080896854, DISTANCE: 1.3149195313453674
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4099, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8690, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [0/25] Loss: 0.005473245866596699, RECONS: 0.005173102952539921, DISTANCE: 0.3001430034637451
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3747, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8777, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [1/25] Loss: 0.005477764876559377, RECONS: 0.005184566136449575, DISTANCE: 0.2931988835334778
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3770, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8842, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [2/25] Loss: 0.005474767182022333, RECONS: 0.0051710546637574835, DISTANCE: 0.3037126461664836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [3/25] Loss: 0.00559211103245616, RECONS: 0.005251945578493178, DISTANCE: 0.34016549587249756
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4256, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8721, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [4/25] Loss: 0.005441683623939752, RECONS: 0.005104082636535168, DISTANCE: 0.3376010417938232
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4024, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [5/25] Loss: 0.005435521171117823, RECONS: 0.005095291417092085, DISTANCE: 0.3402297894159953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8660, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [6/25] Loss: 0.005409496769841228, RECONS: 0.0050730980666620394, DISTANCE: 0.336398754801069
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4272, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8808, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [7/25] Loss: 0.005351690750103444, RECONS: 0.005018989904783666, DISTANCE: 0.3327009081840515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4412, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [8/25] Loss: 0.005290131808982955, RECONS: 0.004955043705801169, DISTANCE: 0.3350881470574273
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [9/25] Loss: 0.0052713821176439525, RECONS: 0.004939343314617872, DISTANCE: 0.33203883171081544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4033, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [10/25] Loss: 0.005230839660560543, RECONS: 0.004898610355501825, DISTANCE: 0.33222931081598456
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3823, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [11/25] Loss: 0.005225442349910736, RECONS: 0.004894735058769584, DISTANCE: 0.33070728182792664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3679, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8799, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [12/25] Loss: 0.0052306544250593735, RECONS: 0.004898892894673806, DISTANCE: 0.33176151605752796
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8848, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6222, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [13/25] Loss: 0.0052003204889063325, RECONS: 0.004868572777403253, DISTANCE: 0.33174768515995573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8888, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [14/25] Loss: 0.00524817897627751, RECONS: 0.004917873317996661, DISTANCE: 0.3303056240081787
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3780, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [15/25] Loss: 0.005197556369239464, RECONS: 0.004871097014984116, DISTANCE: 0.3264593333005905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4404, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [16/25] Loss: 0.005240212797242052, RECONS: 0.004911898525760454, DISTANCE: 0.32831426227793975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [17/25] Loss: 0.005244252401300603, RECONS: 0.00491517872756554, DISTANCE: 0.3290736542807685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4543, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5919, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [18/25] Loss: 0.005248721468409425, RECONS: 0.004920561307747113, DISTANCE: 0.3281601479178981
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8782, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [19/25] Loss: 0.005263362685218454, RECONS: 0.004936990817077458, DISTANCE: 0.32637184858322144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [20/25] Loss: 0.0052778927520627066, RECONS: 0.004949766100339946, DISTANCE: 0.32812662919362384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4218, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8832, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [21/25] Loss: 0.005285974443805489, RECONS: 0.004957801408388398, DISTANCE: 0.32817300341346045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8887, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [22/25] Loss: 0.005266780033707619, RECONS: 0.004939941426172205, DISTANCE: 0.3268385762753694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8709, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [23/25] Loss: 0.005271708942018449, RECONS: 0.004942614061292261, DISTANCE: 0.32909485201040906
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[115/300] [24/25] Loss: 0.005298197399824857, RECONS: 0.004950648900121451, DISTANCE: 0.34754847049713133
Test[115/300] [0/2] Loss: 0.0059920791536569595, RECONS: 0.005239635240286589, DISTANCE: 0.752443790435791
Test[115/300] [1/2] Loss: 0.006407868582755327, RECONS: 0.005031530279666185, DISTANCE: 1.376338243484497
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [0/25] Loss: 0.004529441241174936, RECONS: 0.004212639294564724, DISTANCE: 0.3168020248413086
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4042, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8748, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [1/25] Loss: 0.00479077803902328, RECONS: 0.004480017349123955, DISTANCE: 0.3107607364654541
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [2/25] Loss: 0.0048392728591958685, RECONS: 0.0045317839831113815, DISTANCE: 0.30748891830444336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4466, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [3/25] Loss: 0.004948166897520423, RECONS: 0.004635449382476509, DISTANCE: 0.3127175569534302
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [4/25] Loss: 0.005176011845469475, RECONS: 0.004854476917535067, DISTANCE: 0.3215349197387695
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6257, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4187, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [5/25] Loss: 0.005499594456826647, RECONS: 0.005171176899845402, DISTANCE: 0.3284175793329875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4064, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [6/25] Loss: 0.005365895173911538, RECONS: 0.005040729617966073, DISTANCE: 0.32516554423740934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8774, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [7/25] Loss: 0.005282311933115125, RECONS: 0.004950551956426352, DISTANCE: 0.331759974360466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6254, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [8/25] Loss: 0.005451459748049577, RECONS: 0.0051174756242997116, DISTANCE: 0.33398409684499103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3233, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8710, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [9/25] Loss: 0.00548867704346776, RECONS: 0.005157596664503217, DISTANCE: 0.3310803294181824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3515, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [10/25] Loss: 0.0054220110177993774, RECONS: 0.005090801553292708, DISTANCE: 0.33120943199504504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3975, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [11/25] Loss: 0.005396582884714007, RECONS: 0.005067467534293731, DISTANCE: 0.3291153113047282
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4045, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8645, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [12/25] Loss: 0.005378139563477957, RECONS: 0.005050973035395145, DISTANCE: 0.32716649312239426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8708, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [13/25] Loss: 0.005358776144151177, RECONS: 0.005031943321228027, DISTANCE: 0.3268327798162188
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [14/25] Loss: 0.005329230055212975, RECONS: 0.00500469704469045, DISTANCE: 0.3245329618453979
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4074, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8826, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [15/25] Loss: 0.005296864634146914, RECONS: 0.004973088129190728, DISTANCE: 0.3237764611840248
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3959, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [16/25] Loss: 0.00530382727875429, RECONS: 0.004979100982275079, DISTANCE: 0.32472625199486227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8726, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [17/25] Loss: 0.005277543432182736, RECONS: 0.0049515654229455525, DISTANCE: 0.32597796784506905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8800, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [18/25] Loss: 0.005312535715730567, RECONS: 0.004984799649958548, DISTANCE: 0.32773603263654205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4492, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8819, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [19/25] Loss: 0.005308160604909062, RECONS: 0.004977957415394485, DISTANCE: 0.33020315766334535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4044, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8858, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [20/25] Loss: 0.005311491078741494, RECONS: 0.004981320905720904, DISTANCE: 0.3301701375416347
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5949, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [21/25] Loss: 0.005291534587740898, RECONS: 0.004962018796835433, DISTANCE: 0.3295157551765442
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4248, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5927, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [22/25] Loss: 0.005321127200580161, RECONS: 0.004992941374202137, DISTANCE: 0.3281857811886331
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4265, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [23/25] Loss: 0.005307395457445334, RECONS: 0.004980236350093037, DISTANCE: 0.3271590620279312
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[116/300] [24/25] Loss: 0.005380997639149427, RECONS: 0.00503855524584651, DISTANCE: 0.34244235515594484
Test[116/300] [0/2] Loss: 0.00581557909026742, RECONS: 0.004903115332126617, DISTANCE: 0.9124636650085449
Test[116/300] [1/2] Loss: 0.006243760464712977, RECONS: 0.004806964425370097, DISTANCE: 1.436795949935913
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [0/25] Loss: 0.00443079462274909, RECONS: 0.004101750440895557, DISTANCE: 0.329043984413147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3474, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6222, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [1/25] Loss: 0.004526311531662941, RECONS: 0.004187146434560418, DISTANCE: 0.33916497230529785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8690, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [2/25] Loss: 0.0045340461656451225, RECONS: 0.004202604138602813, DISTANCE: 0.3314419984817505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3226, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [3/25] Loss: 0.004802330280654132, RECONS: 0.0044750586384907365, DISTANCE: 0.3272716701030731
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3318, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [4/25] Loss: 0.005160295683890581, RECONS: 0.0048307710327208046, DISTANCE: 0.32952468395233153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3315, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8769, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [5/25] Loss: 0.005261786592503388, RECONS: 0.004930169554427266, DISTANCE: 0.3316170970598857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8723, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [6/25] Loss: 0.005282285955867597, RECONS: 0.004950862444405045, DISTANCE: 0.3314235380717686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [7/25] Loss: 0.005260681849904358, RECONS: 0.004928929265588522, DISTANCE: 0.33175259828567505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [8/25] Loss: 0.005294381640851498, RECONS: 0.004964481211370892, DISTANCE: 0.32990043693118626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4140, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8808, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [9/25] Loss: 0.005276431702077389, RECONS: 0.00494491271674633, DISTANCE: 0.3315189957618713
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4308, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [10/25] Loss: 0.005254913883453066, RECONS: 0.004918314558877187, DISTANCE: 0.3365993174639615
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [11/25] Loss: 0.005249811219982803, RECONS: 0.004912040429189801, DISTANCE: 0.3377707799275716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [12/25] Loss: 0.0052853348091817815, RECONS: 0.004947015729088049, DISTANCE: 0.33831907235659087
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3782, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [13/25] Loss: 0.00531326440562095, RECONS: 0.004978391341865063, DISTANCE: 0.33487305470875334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [14/25] Loss: 0.005315058398991823, RECONS: 0.004978598157564799, DISTANCE: 0.3364602327346802
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8768, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [15/25] Loss: 0.005295754526741803, RECONS: 0.004957648168783635, DISTANCE: 0.33810635656118393
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4016, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8751, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [16/25] Loss: 0.005321621319607776, RECONS: 0.004985145594486419, DISTANCE: 0.3364757299423218
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4095, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [17/25] Loss: 0.005306135992416077, RECONS: 0.004971317041458355, DISTANCE: 0.3348189658588833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4270, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [18/25] Loss: 0.005318159678656804, RECONS: 0.00498418255071891, DISTANCE: 0.3339771408783762
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4235, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8769, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [19/25] Loss: 0.005284865875728429, RECONS: 0.004953941470012069, DISTANCE: 0.3309244096279144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4073, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8739, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [20/25] Loss: 0.00526279772055291, RECONS: 0.004933010986340898, DISTANCE: 0.32978674343654085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [21/25] Loss: 0.005236021835695614, RECONS: 0.004908236272802407, DISTANCE: 0.32778556780381635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [22/25] Loss: 0.00520997520779138, RECONS: 0.004882761155781539, DISTANCE: 0.3272140492563662
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4005, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8883, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [23/25] Loss: 0.005241761566139758, RECONS: 0.0049132851224082215, DISTANCE: 0.3284764438867569
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[117/300] [24/25] Loss: 0.005227073188871145, RECONS: 0.004886516723781824, DISTANCE: 0.3405564641952515
Test[117/300] [0/2] Loss: 0.005816934630274773, RECONS: 0.004848566371947527, DISTANCE: 0.9683680534362793
Test[117/300] [1/2] Loss: 0.0061454251408576965, RECONS: 0.004972021095454693, DISTANCE: 1.1734039187431335
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4108, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8651, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [0/25] Loss: 0.004966687876731157, RECONS: 0.004581197164952755, DISTANCE: 0.38549089431762695
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4074, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [1/25] Loss: 0.005106745520606637, RECONS: 0.004744822159409523, DISTANCE: 0.36192333698272705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8721, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [2/25] Loss: 0.005021678749471903, RECONS: 0.004670341188708941, DISTANCE: 0.3513375123341878
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4174, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [3/25] Loss: 0.0049633869202807546, RECONS: 0.004596368293277919, DISTANCE: 0.36701858043670654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8649, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [4/25] Loss: 0.005137904081493616, RECONS: 0.004774549882858992, DISTANCE: 0.36335415840148927
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4127, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8700, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [5/25] Loss: 0.005157256576543053, RECONS: 0.004790894531955321, DISTANCE: 0.3663620352745056
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [6/25] Loss: 0.005128502646195037, RECONS: 0.004770464662994657, DISTANCE: 0.35803796563829693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4412, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [7/25] Loss: 0.005100407113786787, RECONS: 0.004745885205920786, DISTANCE: 0.35452187061309814
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [8/25] Loss: 0.005071440918578042, RECONS: 0.004722738379819525, DISTANCE: 0.34870248370700413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8934, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [9/25] Loss: 0.005110831931233406, RECONS: 0.004769183369353414, DISTANCE: 0.34164851903915405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8660, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [10/25] Loss: 0.005110307935286652, RECONS: 0.004769548943096941, DISTANCE: 0.3407589630647139
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8779, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [11/25] Loss: 0.005073994010065992, RECONS: 0.004732352759068211, DISTANCE: 0.34164121747016907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [12/25] Loss: 0.0051215809698288255, RECONS: 0.004775750701530621, DISTANCE: 0.3458302387824425
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4467, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8826, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [13/25] Loss: 0.005105901010600584, RECONS: 0.004760282912424633, DISTANCE: 0.34561806065695627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [14/25] Loss: 0.005118559300899506, RECONS: 0.004775851033627987, DISTANCE: 0.3427082220713297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8738, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [15/25] Loss: 0.005130404664669186, RECONS: 0.004789600207004696, DISTANCE: 0.34080442041158676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4601, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [16/25] Loss: 0.005118332556722795, RECONS: 0.0047791639671606176, DISTANCE: 0.3391685415716732
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4323, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [17/25] Loss: 0.005137741798534989, RECONS: 0.004797866516229179, DISTANCE: 0.3398752411206563
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4629, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8797, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [18/25] Loss: 0.005125094940395732, RECONS: 0.0047867512330412865, DISTANCE: 0.3383436642195049
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8688, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [19/25] Loss: 0.005106704425998032, RECONS: 0.004768819268792868, DISTANCE: 0.33788512349128724
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8799, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [20/25] Loss: 0.0050834315562886855, RECONS: 0.004748654041794084, DISTANCE: 0.33477747440338135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8690, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [21/25] Loss: 0.005067110992968082, RECONS: 0.0047328725922852755, DISTANCE: 0.33423836664720014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8775, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [22/25] Loss: 0.005116685212630293, RECONS: 0.00478276640743665, DISTANCE: 0.3339187787926715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3294, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8786, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [23/25] Loss: 0.005113722290843725, RECONS: 0.004780564554190884, DISTANCE: 0.3331577181816101
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8555, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[118/300] [24/25] Loss: 0.0051256009377539154, RECONS: 0.004775672741234302, DISTANCE: 0.349928183555603
Test[118/300] [0/2] Loss: 0.005793113727122545, RECONS: 0.004846424795687199, DISTANCE: 0.9466888904571533
Test[118/300] [1/2] Loss: 0.005976184504106641, RECONS: 0.004695545416325331, DISTANCE: 1.2806390523910522
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3736, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [0/25] Loss: 0.004750970751047134, RECONS: 0.0043997978791594505, DISTANCE: 0.35117292404174805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3644, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8569, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [1/25] Loss: 0.004759024828672409, RECONS: 0.00441057956777513, DISTANCE: 0.34844517707824707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3664, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [2/25] Loss: 0.004909483560671409, RECONS: 0.004571836131314437, DISTANCE: 0.3376474380493164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3489, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [3/25] Loss: 0.004939678590744734, RECONS: 0.004587990697473288, DISTANCE: 0.3516879081726074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5938, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [4/25] Loss: 0.005066671874374151, RECONS: 0.004720079340040683, DISTANCE: 0.34659252166748045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5928, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3719, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8680, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [5/25] Loss: 0.005054676750053962, RECONS: 0.004707401618361473, DISTANCE: 0.34727511803309125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4203, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [6/25] Loss: 0.005025583984596389, RECONS: 0.00468606102679457, DISTANCE: 0.3395229237420218
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4063, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5879, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [7/25] Loss: 0.005069131264463067, RECONS: 0.0047257241094484925, DISTANCE: 0.34340710937976837
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5929, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [8/25] Loss: 0.005090185130635898, RECONS: 0.004744442386759652, DISTANCE: 0.34574271572960746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4220, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [9/25] Loss: 0.0050622658804059025, RECONS: 0.004718221118673682, DISTANCE: 0.3440447449684143
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [10/25] Loss: 0.0050710830837488174, RECONS: 0.004730003928257661, DISTANCE: 0.3410791592164473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [11/25] Loss: 0.005028609690877299, RECONS: 0.004690572697048386, DISTANCE: 0.33803698420524597
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4243, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8667, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [12/25] Loss: 0.005035033162969809, RECONS: 0.0046972791449381756, DISTANCE: 0.3377539928142841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8876, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [13/25] Loss: 0.005123846598767808, RECONS: 0.004787041539592403, DISTANCE: 0.3368050456047058
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3600, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [14/25] Loss: 0.005133092434455951, RECONS: 0.0047953374062975245, DISTANCE: 0.337755012512207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4033, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8765, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [15/25] Loss: 0.00511580117745325, RECONS: 0.004775895708007738, DISTANCE: 0.3399054557085037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8701, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [16/25] Loss: 0.005087149630793754, RECONS: 0.00474924427073668, DISTANCE: 0.3379053368287928
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4386, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8719, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [17/25] Loss: 0.005061395492197739, RECONS: 0.004724833571041624, DISTANCE: 0.3365619050131904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4385, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [18/25] Loss: 0.005066011762736659, RECONS: 0.004731484884886365, DISTANCE: 0.33452685255753367
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8700, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [19/25] Loss: 0.00505230154376477, RECONS: 0.00471924040466547, DISTANCE: 0.33306111097335817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8559, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [20/25] Loss: 0.005021590939057725, RECONS: 0.004688367580196687, DISTANCE: 0.33322333154224215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4173, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8837, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [21/25] Loss: 0.005040833641859618, RECONS: 0.004707203902812166, DISTANCE: 0.33362970568917016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [22/25] Loss: 0.0050003759603461494, RECONS: 0.004667977215317281, DISTANCE: 0.3323987048605214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8709, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [23/25] Loss: 0.00499381390788282, RECONS: 0.004661824651217709, DISTANCE: 0.33198920885721844
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3144, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[119/300] [24/25] Loss: 0.00501351285725832, RECONS: 0.004667756892740726, DISTANCE: 0.34575592041015624
Test[119/300] [0/2] Loss: 0.005723279435187578, RECONS: 0.004865338560193777, DISTANCE: 0.8579407930374146
Test[119/300] [1/2] Loss: 0.005990112666040659, RECONS: 0.004659846657887101, DISTANCE: 1.330265998840332
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3466, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8716, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [0/25] Loss: 0.005288616754114628, RECONS: 0.004847717937082052, DISTANCE: 0.4408987760543823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3739, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [1/25] Loss: 0.005291900364682078, RECONS: 0.004887581570073962, DISTANCE: 0.40431874990463257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [2/25] Loss: 0.005033610078195731, RECONS: 0.004646098396430413, DISTANCE: 0.38751169045766193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8774, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [3/25] Loss: 0.005011770292185247, RECONS: 0.00463514996226877, DISTANCE: 0.3766203224658966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4047, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [4/25] Loss: 0.004917717725038529, RECONS: 0.004557508043944836, DISTANCE: 0.36020967960357664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4099, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [5/25] Loss: 0.004984564613550901, RECONS: 0.004633414947117369, DISTANCE: 0.35114969809850055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4348, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [6/25] Loss: 0.004927563680601972, RECONS: 0.0045825025465871605, DISTANCE: 0.3450611318860735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4455, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8765, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [7/25] Loss: 0.004885557922534645, RECONS: 0.0045464212889783084, DISTANCE: 0.33913661539554596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [8/25] Loss: 0.004868838056508038, RECONS: 0.0045342097162372535, DISTANCE: 0.3346283303366767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8686, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [9/25] Loss: 0.0048779257573187355, RECONS: 0.004542177403345704, DISTANCE: 0.33574835062026975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8853, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [10/25] Loss: 0.004889742047949271, RECONS: 0.0045484724793244495, DISTANCE: 0.3412695689634843
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3425, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8758, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [11/25] Loss: 0.004937103328605493, RECONS: 0.004593846892627577, DISTANCE: 0.34325642387072247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3311, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8661, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [12/25] Loss: 0.005007257040303487, RECONS: 0.004667192410964232, DISTANCE: 0.3400646264736469
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3516, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [13/25] Loss: 0.0050165436363645965, RECONS: 0.004678255412727594, DISTANCE: 0.33828823055539814
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [14/25] Loss: 0.005038018058985472, RECONS: 0.004700740395734707, DISTANCE: 0.3372776587804159
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4262, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5944, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [15/25] Loss: 0.005052698019426316, RECONS: 0.004712275345809758, DISTANCE: 0.3404226675629616
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4358, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8734, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [16/25] Loss: 0.00508387090966982, RECONS: 0.004744555308100055, DISTANCE: 0.339315603761112
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [17/25] Loss: 0.005154408307539092, RECONS: 0.0048152045088095796, DISTANCE: 0.33920380141999984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3928, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [18/25] Loss: 0.005123406869212263, RECONS: 0.004785183351486921, DISTANCE: 0.3382235263523303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3540, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [19/25] Loss: 0.005099638225510716, RECONS: 0.004763295804150402, DISTANCE: 0.3363424360752106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8559, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6266, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [20/25] Loss: 0.005127431314793371, RECONS: 0.004793191661259958, DISTANCE: 0.3342396645318894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8737, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [21/25] Loss: 0.005111007887700742, RECONS: 0.004778045377778736, DISTANCE: 0.3329625129699707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5956, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3183, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8735, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [22/25] Loss: 0.005140194102473881, RECONS: 0.0048102420835715275, DISTANCE: 0.3299520274867182
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6209, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8698, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [23/25] Loss: 0.005133647801509748, RECONS: 0.004805589094758034, DISTANCE: 0.32805871963500977
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[120/300] [24/25] Loss: 0.00519358841702342, RECONS: 0.004850406646728516, DISTANCE: 0.343181791305542
Test[120/300] [0/2] Loss: 0.006320246495306492, RECONS: 0.005501625593751669, DISTANCE: 0.8186206817626953
Test[120/300] [1/2] Loss: 0.006418492179363966, RECONS: 0.005316741298884153, DISTANCE: 1.1017508506774902
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4341, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8708, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [0/25] Loss: 0.00532081862911582, RECONS: 0.004998528398573399, DISTANCE: 0.32229042053222656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5942, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8758, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [1/25] Loss: 0.005434798076748848, RECONS: 0.005125522613525391, DISTANCE: 0.30927562713623047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [2/25] Loss: 0.005614381283521652, RECONS: 0.005295317309598128, DISTANCE: 0.3190641403198242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8813, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [3/25] Loss: 0.005544557585380971, RECONS: 0.005212999880313873, DISTANCE: 0.33155786991119385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4604, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [4/25] Loss: 0.005469832383096218, RECONS: 0.005150584224611521, DISTANCE: 0.31924829483032224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3961, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8922, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [5/25] Loss: 0.005355306280155976, RECONS: 0.005038806625331442, DISTANCE: 0.3164997299512227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8846, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [6/25] Loss: 0.00542921107262373, RECONS: 0.005118170952690499, DISTANCE: 0.31104021412985666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8819, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [7/25] Loss: 0.00537166278809309, RECONS: 0.005062859621830285, DISTANCE: 0.3088032752275467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [8/25] Loss: 0.0053277818693055045, RECONS: 0.005012110910481877, DISTANCE: 0.31567103332943386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8754, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [9/25] Loss: 0.0052606937475502494, RECONS: 0.004943761508911848, DISTANCE: 0.31693230867385863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8691, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [10/25] Loss: 0.005227920006621967, RECONS: 0.004907960918816653, DISTANCE: 0.31995913115414704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3801, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8868, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [11/25] Loss: 0.005177304497919977, RECONS: 0.004859273865198095, DISTANCE: 0.3180306851863861
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [12/25] Loss: 0.005124875917457617, RECONS: 0.004807129645576844, DISTANCE: 0.3177463183036217
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [13/25] Loss: 0.005104614687817437, RECONS: 0.004788089044658201, DISTANCE: 0.3165256977081299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4020, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [14/25] Loss: 0.0050705333861211935, RECONS: 0.004750545229762792, DISTANCE: 0.319988218943278
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3862, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [15/25] Loss: 0.005079754744656384, RECONS: 0.0047585829452145845, DISTANCE: 0.3211718499660492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3813, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [16/25] Loss: 0.005036497077740291, RECONS: 0.0047173560049165696, DISTANCE: 0.31914112147162943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [17/25] Loss: 0.004999153367761109, RECONS: 0.004680716639591588, DISTANCE: 0.31843677494261
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3676, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [18/25] Loss: 0.004986380839622335, RECONS: 0.004667852931704961, DISTANCE: 0.31852796203211736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5896, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8866, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [19/25] Loss: 0.005125544127076864, RECONS: 0.004806673736311495, DISTANCE: 0.31887043714523317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8833, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [20/25] Loss: 0.00511210977232882, RECONS: 0.004792170222139075, DISTANCE: 0.319939584959121
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4122, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [21/25] Loss: 0.005128422498025678, RECONS: 0.004807686496695334, DISTANCE: 0.3207360397685658
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4983, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8759, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [22/25] Loss: 0.005098016082268694, RECONS: 0.00477816719237877, DISTANCE: 0.31984893135402515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4366, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8883, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [23/25] Loss: 0.0050894289937180774, RECONS: 0.004770790129744758, DISTANCE: 0.3186388959487279
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[121/300] [24/25] Loss: 0.005086430851370096, RECONS: 0.0047517744824290276, DISTANCE: 0.3346563959121704
Test[121/300] [0/2] Loss: 0.005478398874402046, RECONS: 0.004742491990327835, DISTANCE: 0.7359070777893066
Test[121/300] [1/2] Loss: 0.005735943792387843, RECONS: 0.00466117775067687, DISTANCE: 1.0747661590576172
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [0/25] Loss: 0.005059965420514345, RECONS: 0.0047515626065433025, DISTANCE: 0.3084028959274292
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6221, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [1/25] Loss: 0.00479509518481791, RECONS: 0.004468526691198349, DISTANCE: 0.326568603515625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8823, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [2/25] Loss: 0.004770181297014157, RECONS: 0.004446549651523431, DISTANCE: 0.32363168398539227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3290, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6222, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [3/25] Loss: 0.004574834601953626, RECONS: 0.004250523052178323, DISTANCE: 0.32431158423423767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8968, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [4/25] Loss: 0.0046872816048562525, RECONS: 0.004364737682044506, DISTANCE: 0.3225439786911011
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [5/25] Loss: 0.004593946350117524, RECONS: 0.004272150341421366, DISTANCE: 0.3217960794766744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3421, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8805, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [6/25] Loss: 0.004669306201062032, RECONS: 0.004347944233034339, DISTANCE: 0.3213620015553066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8651, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [7/25] Loss: 0.004635346005670726, RECONS: 0.004311500117182732, DISTANCE: 0.3238459378480911
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [8/25] Loss: 0.004661789784828822, RECONS: 0.0043419874790642, DISTANCE: 0.31980233722262913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3529, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8689, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [9/25] Loss: 0.004694131715223193, RECONS: 0.004374759830534458, DISTANCE: 0.3193719148635864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3937, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8738, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [10/25] Loss: 0.004689486527984793, RECONS: 0.004366919313642112, DISTANCE: 0.3225672245025635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4257, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [11/25] Loss: 0.0047057340464865165, RECONS: 0.004383770748972893, DISTANCE: 0.3219633201758067
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3802, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [12/25] Loss: 0.004688640590757132, RECONS: 0.00436859792814805, DISTANCE: 0.3200426926979652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4024, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8758, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [13/25] Loss: 0.004724489524960518, RECONS: 0.0044033825397491455, DISTANCE: 0.3211070213999067
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3674, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8707, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [14/25] Loss: 0.004735576361417771, RECONS: 0.004413952740530173, DISTANCE: 0.32162365118662517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [15/25] Loss: 0.004711796238552779, RECONS: 0.004392129339976236, DISTANCE: 0.31966692954301834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4242, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [16/25] Loss: 0.004708138595828239, RECONS: 0.004387775709962144, DISTANCE: 0.3203629115048577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5824, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8807, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [17/25] Loss: 0.0048859561017404, RECONS: 0.004565288312733173, DISTANCE: 0.3206678099102444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8736, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [18/25] Loss: 0.0048643526081976135, RECONS: 0.004542859173134754, DISTANCE: 0.32149346251236766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4256, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5921, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [19/25] Loss: 0.004885708796791732, RECONS: 0.004563985881395638, DISTANCE: 0.321722948551178
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4252, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8719, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5853, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [20/25] Loss: 0.004891073065144675, RECONS: 0.0045700423596870335, DISTANCE: 0.3210307302929106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8624, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [21/25] Loss: 0.004867431898178024, RECONS: 0.004547753709961067, DISTANCE: 0.31967821988192474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4255, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [22/25] Loss: 0.004861572433425033, RECONS: 0.004541516546969829, DISTANCE: 0.3200559097787608
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6218, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4213, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [23/25] Loss: 0.004904639596740405, RECONS: 0.004584161564707756, DISTANCE: 0.32047805190086365
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[122/300] [24/25] Loss: 0.004960510712116957, RECONS: 0.004623764622956514, DISTANCE: 0.3367461109161377
Test[122/300] [0/2] Loss: 0.0065774498507380486, RECONS: 0.005775706376880407, DISTANCE: 0.8017435073852539
Test[122/300] [1/2] Loss: 0.006528031313791871, RECONS: 0.005395441083237529, DISTANCE: 1.1325902938842773
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3345, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8904, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [0/25] Loss: 0.004933474585413933, RECONS: 0.004645536653697491, DISTANCE: 0.28793811798095703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3237, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8739, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6307, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [1/25] Loss: 0.004607515875250101, RECONS: 0.004297388251870871, DISTANCE: 0.3101276159286499
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2833, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8888, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6306, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [2/25] Loss: 0.004813184340794881, RECONS: 0.004497259700049956, DISTANCE: 0.31592456499735516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6233, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3342, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6251, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [3/25] Loss: 0.004882573848590255, RECONS: 0.0045672665582969785, DISTANCE: 0.3153071999549866
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8872, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [4/25] Loss: 0.005169686209410429, RECONS: 0.004857052024453879, DISTANCE: 0.31263413429260256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3480, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8824, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [5/25] Loss: 0.005071900086477399, RECONS: 0.004760918750738104, DISTANCE: 0.31098125378290814
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [6/25] Loss: 0.005096517170646361, RECONS: 0.004778838782970395, DISTANCE: 0.3176783493586949
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4321, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [7/25] Loss: 0.0051460894756019115, RECONS: 0.004826020449399948, DISTANCE: 0.32006900012493134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [8/25] Loss: 0.005123225765095817, RECONS: 0.004804580575890011, DISTANCE: 0.31864514615800643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8660, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [9/25] Loss: 0.005153709463775158, RECONS: 0.004832122707739472, DISTANCE: 0.32158671617507933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4457, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [10/25] Loss: 0.005112947642125867, RECONS: 0.004792159465564923, DISTANCE: 0.3207881342280995
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [11/25] Loss: 0.005084310541860759, RECONS: 0.004761306413759788, DISTANCE: 0.3230040967464447
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3594, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [12/25] Loss: 0.0051058083414458316, RECONS: 0.0047822577090790635, DISTANCE: 0.32355060944190395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6222, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [13/25] Loss: 0.005119054877598371, RECONS: 0.004793700928400669, DISTANCE: 0.32535391194479807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3276, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8875, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [14/25] Loss: 0.005089680229624112, RECONS: 0.004764259327203035, DISTANCE: 0.325420872370402
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3359, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8890, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6208, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [15/25] Loss: 0.005199320818064734, RECONS: 0.004870249482337385, DISTANCE: 0.3290713056921959
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3400, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8824, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [16/25] Loss: 0.005179124336470576, RECONS: 0.004849444800878272, DISTANCE: 0.3296795031603645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3573, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [17/25] Loss: 0.005149854010798865, RECONS: 0.004820278198975656, DISTANCE: 0.3295757902993096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8852, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [18/25] Loss: 0.005122111325985507, RECONS: 0.004794070129527857, DISTANCE: 0.32804117077275324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5945, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4370, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8674, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [19/25] Loss: 0.0050897966139018536, RECONS: 0.004761125170625746, DISTANCE: 0.3286714255809784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8692, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [20/25] Loss: 0.005057276071359714, RECONS: 0.004728748596140316, DISTANCE: 0.32852746759142193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4016, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [21/25] Loss: 0.005035620415583253, RECONS: 0.004707714225250212, DISTANCE: 0.32790619134902954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [22/25] Loss: 0.005009676269053117, RECONS: 0.00468245318726353, DISTANCE: 0.327223072881284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3728, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [23/25] Loss: 0.005006812551679711, RECONS: 0.004679984839943548, DISTANCE: 0.32682769497235614
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3409, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[123/300] [24/25] Loss: 0.005017496552318335, RECONS: 0.004673574902117252, DISTANCE: 0.3439216327667236
Test[123/300] [0/2] Loss: 0.005141385365277529, RECONS: 0.004426565952599049, DISTANCE: 0.7148193120956421
Test[123/300] [1/2] Loss: 0.0052781119011342525, RECONS: 0.004151335917413235, DISTANCE: 1.126775860786438
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3266, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8766, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [0/25] Loss: 0.0047846594825387, RECONS: 0.004472671076655388, DISTANCE: 0.31198835372924805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6258, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [1/25] Loss: 0.0048562102019786835, RECONS: 0.004508244805037975, DISTANCE: 0.3479654788970947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3371, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8894, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [2/25] Loss: 0.004725722596049309, RECONS: 0.004392854869365692, DISTANCE: 0.3328677813212077
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3287, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8811, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [3/25] Loss: 0.004781100549735129, RECONS: 0.004451368818990886, DISTANCE: 0.3297317624092102
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5942, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3469, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8821, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6239, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [4/25] Loss: 0.005079159885644913, RECONS: 0.0047346273437142376, DISTANCE: 0.34453256130218507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9007, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [5/25] Loss: 0.005031575138370196, RECONS: 0.004693775825823347, DISTANCE: 0.337799330552419
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8736, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [6/25] Loss: 0.004936689710510629, RECONS: 0.004600203329963344, DISTANCE: 0.3364863906587873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4108, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [7/25] Loss: 0.004872916790191084, RECONS: 0.004540753900073469, DISTANCE: 0.33216291666030884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [8/25] Loss: 0.0047880249718825025, RECONS: 0.004459021173210608, DISTANCE: 0.32900383737352157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8545, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [9/25] Loss: 0.004807532904669643, RECONS: 0.004476072057150305, DISTANCE: 0.3314608812332153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3837, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8559, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [10/25] Loss: 0.004848729819059372, RECONS: 0.00451931829394942, DISTANCE: 0.32941157167608087
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [11/25] Loss: 0.004873123990061383, RECONS: 0.00454217178048566, DISTANCE: 0.330952266852061
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [12/25] Loss: 0.004818428343591781, RECONS: 0.004487537008781846, DISTANCE: 0.3308913799432608
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [13/25] Loss: 0.004825291190562504, RECONS: 0.0044954429280811125, DISTANCE: 0.3298482894897461
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3909, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [14/25] Loss: 0.004803009207050005, RECONS: 0.0044730390887707475, DISTANCE: 0.3299701452255249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4046, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [15/25] Loss: 0.00478051439858973, RECONS: 0.00445107500127051, DISTANCE: 0.3294394090771675
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4029, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [16/25] Loss: 0.004811392768340952, RECONS: 0.00448008649982512, DISTANCE: 0.3313062681871302
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8759, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [17/25] Loss: 0.004842044526918067, RECONS: 0.00451188991104977, DISTANCE: 0.33015462425020004
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4063, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [18/25] Loss: 0.004807394488077415, RECONS: 0.004475199213055403, DISTANCE: 0.33219527570824875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3545, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8814, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [19/25] Loss: 0.004757451638579368, RECONS: 0.0044242254341952504, DISTANCE: 0.3332262098789215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5874, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8723, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [20/25] Loss: 0.004859085638253461, RECONS: 0.00452572441038986, DISTANCE: 0.33336122263045537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8746, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [21/25] Loss: 0.004822589287703688, RECONS: 0.0044897357531061225, DISTANCE: 0.3328535177490928
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3900, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [22/25] Loss: 0.004821324660240308, RECONS: 0.004488379583167641, DISTANCE: 0.3329450514005578
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3776, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8639, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [23/25] Loss: 0.004818691037750493, RECONS: 0.004486279824050143, DISTANCE: 0.33241118987401325
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3475, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[124/300] [24/25] Loss: 0.004835463110357523, RECONS: 0.004486744021996856, DISTANCE: 0.3487190628051758
Test[124/300] [0/2] Loss: 0.005178969353437424, RECONS: 0.004595819395035505, DISTANCE: 0.5831496715545654
Test[124/300] [1/2] Loss: 0.005081263137981296, RECONS: 0.004333588294684887, DISTANCE: 0.7476746439933777
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3298, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [0/25] Loss: 0.004296509549021721, RECONS: 0.003945379517972469, DISTANCE: 0.35113000869750977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3333, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8606, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [1/25] Loss: 0.0041162080597132444, RECONS: 0.003769064089283347, DISTANCE: 0.34714388847351074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8721, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6288, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [2/25] Loss: 0.004187435066948335, RECONS: 0.003854310605674982, DISTANCE: 0.33312439918518066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3130, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8685, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6343, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [3/25] Loss: 0.004519512061960995, RECONS: 0.004192053223960102, DISTANCE: 0.32745876908302307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8716, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [4/25] Loss: 0.004560412652790546, RECONS: 0.004233258962631226, DISTANCE: 0.3271536111831665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3310, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8873, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [5/25] Loss: 0.004557411807278792, RECONS: 0.00423116438711683, DISTANCE: 0.32624733448028564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [6/25] Loss: 0.004705239619527545, RECONS: 0.004370839734162603, DISTANCE: 0.33439983640398296
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5954, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [7/25] Loss: 0.004727343330159783, RECONS: 0.004399302357342094, DISTANCE: 0.3280409127473831
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5929, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [8/25] Loss: 0.004731769777006573, RECONS: 0.004409571023037036, DISTANCE: 0.3221987220976088
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4501, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [9/25] Loss: 0.004720100900158286, RECONS: 0.004397597955539822, DISTANCE: 0.32250289916992186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [10/25] Loss: 0.004805282520299608, RECONS: 0.004485351499170065, DISTANCE: 0.3199309869246049
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5960, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [11/25] Loss: 0.004835196770727634, RECONS: 0.004511365162519117, DISTANCE: 0.32383155822753906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8813, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [12/25] Loss: 0.004803121663056887, RECONS: 0.004479456478013442, DISTANCE: 0.32366514205932617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3738, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8701, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [13/25] Loss: 0.004762840490522129, RECONS: 0.00444095501942294, DISTANCE: 0.32188541548592703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3307, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [14/25] Loss: 0.004794649127870798, RECONS: 0.0044738437359531725, DISTANCE: 0.32080532709757487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8634, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [15/25] Loss: 0.004787940386449918, RECONS: 0.004466665675863624, DISTANCE: 0.32127463817596436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8646, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [16/25] Loss: 0.0047632041113341555, RECONS: 0.004444243989008314, DISTANCE: 0.3189600495731129
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [17/25] Loss: 0.004747195919561718, RECONS: 0.004428735882457759, DISTANCE: 0.31845996114942765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4077, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [18/25] Loss: 0.004771731499778597, RECONS: 0.004453119037574844, DISTANCE: 0.3186123873058118
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4285, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [19/25] Loss: 0.00478092422708869, RECONS: 0.004462605458684266, DISTANCE: 0.3183186948299408
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8694, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [20/25] Loss: 0.004760031898816426, RECONS: 0.004442255744444472, DISTANCE: 0.317776083946228
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3909, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [21/25] Loss: 0.004740878473967314, RECONS: 0.004424313358454542, DISTANCE: 0.31656505302949384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [22/25] Loss: 0.004735897436899983, RECONS: 0.004418932407608499, DISTANCE: 0.3169649735740993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8896, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [23/25] Loss: 0.004726966028101742, RECONS: 0.004408852119619648, DISTANCE: 0.31811386346817017
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[125/300] [24/25] Loss: 0.004757083095610142, RECONS: 0.004423574954271317, DISTANCE: 0.3335081005096436
Test[125/300] [0/2] Loss: 0.0050848000682890415, RECONS: 0.004685563966631889, DISTANCE: 0.39923620223999023
Test[125/300] [1/2] Loss: 0.005150005454197526, RECONS: 0.004442982142791152, DISTANCE: 0.7070233225822449
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8957, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [0/25] Loss: 0.004524206276983023, RECONS: 0.004174656700342894, DISTANCE: 0.3495497703552246
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3196, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8803, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [1/25] Loss: 0.0052320442628115416, RECONS: 0.004892000230029225, DISTANCE: 0.34004420042037964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3716, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [2/25] Loss: 0.005221584501365821, RECONS: 0.004888542927801609, DISTANCE: 0.33304162820180255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8664, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [3/25] Loss: 0.005161808687262237, RECONS: 0.004839659435674548, DISTANCE: 0.32214927673339844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8692, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [4/25] Loss: 0.004977456200867892, RECONS: 0.004649807885289192, DISTANCE: 0.32764835357666017
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4231, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [5/25] Loss: 0.004920848412439227, RECONS: 0.004590157962714632, DISTANCE: 0.3306904633839925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [6/25] Loss: 0.004937309106545789, RECONS: 0.004609879704990557, DISTANCE: 0.3274294137954712
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [7/25] Loss: 0.005090824270155281, RECONS: 0.004759375064168125, DISTANCE: 0.3314492255449295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4030, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [8/25] Loss: 0.005019755257914464, RECONS: 0.004693291926135619, DISTANCE: 0.32646335495842826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [9/25] Loss: 0.004983632918447256, RECONS: 0.004655552469193936, DISTANCE: 0.3280804634094238
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [10/25] Loss: 0.005030370994725011, RECONS: 0.004703288347544995, DISTANCE: 0.32708267732100055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8694, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [11/25] Loss: 0.004949952902582784, RECONS: 0.0046245437891532975, DISTANCE: 0.32540913422902423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3111, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8724, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [12/25] Loss: 0.004936505753833514, RECONS: 0.004611910535739019, DISTANCE: 0.3245952312762921
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3323, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [13/25] Loss: 0.004917491293911423, RECONS: 0.004592113329895905, DISTANCE: 0.32537797519138884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3461, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [14/25] Loss: 0.004898654762655497, RECONS: 0.004575861928363641, DISTANCE: 0.3227928400039673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8743, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [15/25] Loss: 0.00489171312074177, RECONS: 0.004567145660985261, DISTANCE: 0.3245674595236778
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3942, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [16/25] Loss: 0.004858686999582192, RECONS: 0.0045334581176147744, DISTANCE: 0.32522888744578643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6214, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8522, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [17/25] Loss: 0.00490258590111302, RECONS: 0.004576654199303852, DISTANCE: 0.32593171464072335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8681, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [18/25] Loss: 0.004881261872421754, RECONS: 0.004553329027993114, DISTANCE: 0.3279328659961098
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [19/25] Loss: 0.004865063144825399, RECONS: 0.004537516459822655, DISTANCE: 0.32754669785499574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [20/25] Loss: 0.00483383009919808, RECONS: 0.004504621904786853, DISTANCE: 0.3292082150777181
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3158, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [21/25] Loss: 0.0048140918158672075, RECONS: 0.00448710453400219, DISTANCE: 0.3269873098893599
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3457, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [22/25] Loss: 0.004788955754559973, RECONS: 0.004462065124560309, DISTANCE: 0.3268906655518905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8702, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [23/25] Loss: 0.004786191139525424, RECONS: 0.00445835060478809, DISTANCE: 0.32784057160218555
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3505, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[126/300] [24/25] Loss: 0.004817142952233553, RECONS: 0.004475017180666328, DISTANCE: 0.3421258020401001
Test[126/300] [0/2] Loss: 0.004998440854251385, RECONS: 0.0045150769874453545, DISTANCE: 0.4833639860153198
Test[126/300] [1/2] Loss: 0.00513188517652452, RECONS: 0.004343031439930201, DISTANCE: 0.7888538241386414
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5939, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3669, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8759, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [0/25] Loss: 0.0042441412806510925, RECONS: 0.00394083047285676, DISTANCE: 0.303310751914978
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4090, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8484, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [1/25] Loss: 0.0044878467451781034, RECONS: 0.004180331714451313, DISTANCE: 0.30751508474349976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4248, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8866, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [2/25] Loss: 0.004558671731501818, RECONS: 0.004241823218762875, DISTANCE: 0.3168485959370931
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [3/25] Loss: 0.00461481767706573, RECONS: 0.004296066123060882, DISTANCE: 0.31875157356262207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4361, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [4/25] Loss: 0.0045662060379982, RECONS: 0.0042404142208397385, DISTANCE: 0.3257918119430542
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8806, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [5/25] Loss: 0.004642213461920619, RECONS: 0.004314021905884147, DISTANCE: 0.3281915783882141
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4267, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8637, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [6/25] Loss: 0.004767050101820912, RECONS: 0.004439677777034896, DISTANCE: 0.32737232957567486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8722, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [7/25] Loss: 0.0046674596960656345, RECONS: 0.00433916607289575, DISTANCE: 0.3282936215400696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3751, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8785, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [8/25] Loss: 0.004702703665114111, RECONS: 0.004376126634370949, DISTANCE: 0.32657702763875324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [9/25] Loss: 0.004648780822753907, RECONS: 0.004327101120725274, DISTANCE: 0.3216796875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3949, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [10/25] Loss: 0.00466235578906807, RECONS: 0.004343789536505938, DISTANCE: 0.31856623562899505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8773, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [11/25] Loss: 0.004612955031916499, RECONS: 0.004293362008562933, DISTANCE: 0.3195930023988088
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8857, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [12/25] Loss: 0.004555354790332226, RECONS: 0.004235772254805152, DISTANCE: 0.3195825173304631
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3167, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8702, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [13/25] Loss: 0.00461725697719625, RECONS: 0.004293110870224025, DISTANCE: 0.3241460919380188
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3300, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [14/25] Loss: 0.004601494657496611, RECONS: 0.004279913675660888, DISTANCE: 0.32158095041910806
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3155, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [15/25] Loss: 0.004624737746780738, RECONS: 0.004303839537897147, DISTANCE: 0.3208981677889824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3709, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8638, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [16/25] Loss: 0.0046120814376455896, RECONS: 0.004289218238280977, DISTANCE: 0.3228631580577177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5973, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [17/25] Loss: 0.004597643545518319, RECONS: 0.004274627361964021, DISTANCE: 0.3230161401960585
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [18/25] Loss: 0.004591975410125758, RECONS: 0.004268273282305975, DISTANCE: 0.32370207811656754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8619, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5973, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [19/25] Loss: 0.004601291636936367, RECONS: 0.00427915008040145, DISTANCE: 0.32214149832725525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [20/25] Loss: 0.004638376202256907, RECONS: 0.00431725785269269, DISTANCE: 0.32111830370766775
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [21/25] Loss: 0.0046246147460558195, RECONS: 0.0043035835472189565, DISTANCE: 0.3210311532020569
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5913, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3501, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8685, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [22/25] Loss: 0.004715021537697833, RECONS: 0.00439311824131595, DISTANCE: 0.3219032443088034
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8809, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [23/25] Loss: 0.004705420307194193, RECONS: 0.004384629147049661, DISTANCE: 0.3207911103963852
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7647, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[127/300] [24/25] Loss: 0.004740931652486324, RECONS: 0.004405089514330029, DISTANCE: 0.335842080116272
Test[127/300] [0/2] Loss: 0.0050895544700324535, RECONS: 0.004420560784637928, DISTANCE: 0.6689937114715576
Test[127/300] [1/2] Loss: 0.00518184551037848, RECONS: 0.004063277970999479, DISTANCE: 1.1185675859451294
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [0/25] Loss: 0.003989079035818577, RECONS: 0.0037055739667266607, DISTANCE: 0.28350508213043213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3803, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8784, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [1/25] Loss: 0.004079036647453904, RECONS: 0.0037805141182616353, DISTANCE: 0.2985225319862366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3712, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8825, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [2/25] Loss: 0.004419569857418537, RECONS: 0.004111480666324496, DISTANCE: 0.3080891768137614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3636, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8927, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [3/25] Loss: 0.004360157065093517, RECONS: 0.004058127757161856, DISTANCE: 0.30202925205230713
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3738, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8791, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [4/25] Loss: 0.004288660455495119, RECONS: 0.00398460179567337, DISTANCE: 0.3040586471557617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6246, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4284, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8686, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [5/25] Loss: 0.0044712636930247145, RECONS: 0.004165979102253914, DISTANCE: 0.30528457959493
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8555, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [6/25] Loss: 0.004423809503870351, RECONS: 0.00411503399456186, DISTANCE: 0.3087755101067679
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3664, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [7/25] Loss: 0.004411353264003992, RECONS: 0.00409867541748099, DISTANCE: 0.31267787516117096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [8/25] Loss: 0.004452031830118762, RECONS: 0.0041408895049244165, DISTANCE: 0.31114235189225936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8602, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [9/25] Loss: 0.004553537210449576, RECONS: 0.004241904173977673, DISTANCE: 0.31163305044174194
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [10/25] Loss: 0.004566091663119468, RECONS: 0.00424965248781849, DISTANCE: 0.31643918427554046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3751, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [11/25] Loss: 0.004538203279177348, RECONS: 0.0042232778505422175, DISTANCE: 0.3149254520734151
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8706, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [12/25] Loss: 0.004550523017174923, RECONS: 0.004236386569503408, DISTANCE: 0.31413646844717175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3613, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [13/25] Loss: 0.0045294812547841245, RECONS: 0.004213794117926487, DISTANCE: 0.31568714550563265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3444, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [14/25] Loss: 0.00449881541232268, RECONS: 0.004181933170184493, DISTANCE: 0.31688226064046227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3359, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8769, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [15/25] Loss: 0.00450769835151732, RECONS: 0.004189698796835728, DISTANCE: 0.31799957156181335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3511, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8786, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [16/25] Loss: 0.004500282051808694, RECONS: 0.00418167861233301, DISTANCE: 0.3186034595265108
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3399, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8661, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [17/25] Loss: 0.004481809912249446, RECONS: 0.004164268068658809, DISTANCE: 0.31754185756047565
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3600, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8825, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [18/25] Loss: 0.004490031517649952, RECONS: 0.004172615106462648, DISTANCE: 0.31741641697130707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [19/25] Loss: 0.004492765059694648, RECONS: 0.00417432765243575, DISTANCE: 0.31843740344047544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3684, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8700, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [20/25] Loss: 0.0045067077458259604, RECONS: 0.004189458198934084, DISTANCE: 0.31724954219091506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4035, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [21/25] Loss: 0.0044988829600201416, RECONS: 0.004181433162143962, DISTANCE: 0.3174498027021235
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8865, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [22/25] Loss: 0.004533025942256917, RECONS: 0.004214655213138979, DISTANCE: 0.31837072579757025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4187, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [23/25] Loss: 0.004531867743935436, RECONS: 0.004213472663347299, DISTANCE: 0.318395068248113
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4163, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[128/300] [24/25] Loss: 0.004569521732628345, RECONS: 0.004234429439529777, DISTANCE: 0.3350922870635986
Test[128/300] [0/2] Loss: 0.0061110504902899265, RECONS: 0.005792539566755295, DISTANCE: 0.3185110092163086
Test[128/300] [1/2] Loss: 0.0067580328322947025, RECONS: 0.006102106301113963, DISTANCE: 0.6559264659881592
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8762, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [0/25] Loss: 0.0051549943163990974, RECONS: 0.0047493926249444485, DISTANCE: 0.40560150146484375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8810, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [1/25] Loss: 0.004775515757501125, RECONS: 0.004407283151522279, DISTANCE: 0.36823248863220215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4075, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8740, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [2/25] Loss: 0.004684349366774161, RECONS: 0.004343494462470214, DISTANCE: 0.34085484345753986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4057, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [3/25] Loss: 0.0045890623005107045, RECONS: 0.00425295252352953, DISTANCE: 0.3361096978187561
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8883, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [4/25] Loss: 0.004574154317378998, RECONS: 0.004235531575977803, DISTANCE: 0.3386227130889893
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8811, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [5/25] Loss: 0.004487545384715001, RECONS: 0.004150790705656012, DISTANCE: 0.3367546598116557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [6/25] Loss: 0.0044298082190964904, RECONS: 0.004100202482991985, DISTANCE: 0.3296057326453073
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8606, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [7/25] Loss: 0.00438554969150573, RECONS: 0.004058634309330955, DISTANCE: 0.32691536843776703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3543, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [8/25] Loss: 0.004363677826606565, RECONS: 0.004036376744301783, DISTANCE: 0.32730106512705487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3331, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [9/25] Loss: 0.004638320952653885, RECONS: 0.004309564339928329, DISTANCE: 0.3287566065788269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8454, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [10/25] Loss: 0.004596171942962842, RECONS: 0.004269763340496204, DISTANCE: 0.3264085921374234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [11/25] Loss: 0.004599537040727834, RECONS: 0.004266673679618786, DISTANCE: 0.33286336064338684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3883, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8722, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [12/25] Loss: 0.004565731228257601, RECONS: 0.004234508521711597, DISTANCE: 0.3312226992387038
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [13/25] Loss: 0.0045645151819501606, RECONS: 0.004233360905865473, DISTANCE: 0.33115426131657194
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6207, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8799, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5975, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [14/25] Loss: 0.004601319165279468, RECONS: 0.004272083363806208, DISTANCE: 0.3292357921600342
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3514, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [15/25] Loss: 0.004577030398650095, RECONS: 0.00424884250969626, DISTANCE: 0.32818786799907684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3173, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6208, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [16/25] Loss: 0.0045939761707011395, RECONS: 0.004267780219807345, DISTANCE: 0.32619594125186696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6258, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [17/25] Loss: 0.004603503401287728, RECONS: 0.004275347261379163, DISTANCE: 0.32815613349278766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3464, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8748, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6283, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [18/25] Loss: 0.004598501873643775, RECONS: 0.004272756411841041, DISTANCE: 0.32574545709710373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3742, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [19/25] Loss: 0.004589521209709346, RECONS: 0.004263717564754188, DISTANCE: 0.32580363750457764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8821, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [20/25] Loss: 0.0045946491216974595, RECONS: 0.004268394295303594, DISTANCE: 0.326254821958996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3768, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [21/25] Loss: 0.0045857560312883424, RECONS: 0.0042608642146329985, DISTANCE: 0.3248918056488037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [22/25] Loss: 0.004605424489178087, RECONS: 0.004283101034715124, DISTANCE: 0.3223234466884447
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3992, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8769, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [23/25] Loss: 0.004596957645844668, RECONS: 0.004274093254934996, DISTANCE: 0.3228643784920375
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[129/300] [24/25] Loss: 0.004635080937296152, RECONS: 0.004294155463576317, DISTANCE: 0.3409254598617554
Test[129/300] [0/2] Loss: 0.005006782244890928, RECONS: 0.004418497439473867, DISTANCE: 0.588284969329834
Test[129/300] [1/2] Loss: 0.005031847627833486, RECONS: 0.00420554238371551, DISTANCE: 0.8263053894042969
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3813, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [0/25] Loss: 0.004318881779909134, RECONS: 0.003993855323642492, DISTANCE: 0.32502639293670654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6223, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [1/25] Loss: 0.004460930358618498, RECONS: 0.004142441786825657, DISTANCE: 0.31848853826522827
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3300, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [2/25] Loss: 0.004495145132144292, RECONS: 0.004183280902604262, DISTANCE: 0.311864177385966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3023, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8700, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [3/25] Loss: 0.004456426133401692, RECONS: 0.00414703693240881, DISTANCE: 0.30938920378685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3252, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8816, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [4/25] Loss: 0.004538166336715221, RECONS: 0.004231170192360878, DISTANCE: 0.30699617862701417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [5/25] Loss: 0.004662841868897279, RECONS: 0.004359222482889891, DISTANCE: 0.3036194046338399
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [6/25] Loss: 0.004694536394838776, RECONS: 0.004390551309500422, DISTANCE: 0.3039851018360683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3732, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [7/25] Loss: 0.004703195474576205, RECONS: 0.004395044699776918, DISTANCE: 0.3081507980823517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4171, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8692, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [8/25] Loss: 0.00475659981990854, RECONS: 0.004448659562816222, DISTANCE: 0.3079402844111125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [9/25] Loss: 0.004761381167918443, RECONS: 0.004449783870950341, DISTANCE: 0.31159732341766355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4073, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [10/25] Loss: 0.004710730546238748, RECONS: 0.004397108431228183, DISTANCE: 0.31362214955416595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4008, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8740, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [11/25] Loss: 0.004679198493249714, RECONS: 0.004364953221132358, DISTANCE: 0.3142452935377757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4021, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8649, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [12/25] Loss: 0.004708185111387418, RECONS: 0.004391029118918455, DISTANCE: 0.31715601224165696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3620, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8637, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [13/25] Loss: 0.004685770919812577, RECONS: 0.004369060508906841, DISTANCE: 0.3167104295321873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3596, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [14/25] Loss: 0.004662339606632789, RECONS: 0.004342978137234847, DISTANCE: 0.31936148802439374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [15/25] Loss: 0.0046221878146752715, RECONS: 0.004303495486965403, DISTANCE: 0.3186923414468765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4105, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8694, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [16/25] Loss: 0.004638094455003738, RECONS: 0.004318998441757525, DISTANCE: 0.31909601828631234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8619, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [17/25] Loss: 0.004613929091849261, RECONS: 0.004295795612658064, DISTANCE: 0.31813348001903957
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4054, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8739, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [18/25] Loss: 0.004614732497812886, RECONS: 0.004294767608179858, DISTANCE: 0.3199648794374968
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3730, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [19/25] Loss: 0.00463150218129158, RECONS: 0.004311754927039146, DISTANCE: 0.3197472393512726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [20/25] Loss: 0.004610972656380562, RECONS: 0.004290598078763911, DISTANCE: 0.3203745739800589
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5938, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4189, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [21/25] Loss: 0.004593581003560262, RECONS: 0.0042716209480369634, DISTANCE: 0.32196005366065283
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [22/25] Loss: 0.0046050798998254795, RECONS: 0.00428489059128839, DISTANCE: 0.32018931533979333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3398, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [23/25] Loss: 0.004587006095486383, RECONS: 0.004265877699557071, DISTANCE: 0.3211283932129542
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3516, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[130/300] [24/25] Loss: 0.004602991975843906, RECONS: 0.004266115026548505, DISTANCE: 0.3368769359588623
Test[130/300] [0/2] Loss: 0.0052721514366567135, RECONS: 0.004920220002532005, DISTANCE: 0.3519315719604492
Test[130/300] [1/2] Loss: 0.005187673959881067, RECONS: 0.004484654404222965, DISTANCE: 0.7030196189880371
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [0/25] Loss: 0.004360406659543514, RECONS: 0.004066764377057552, DISTANCE: 0.2936422824859619
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3343, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8703, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [1/25] Loss: 0.004852126585319638, RECONS: 0.004521347116678953, DISTANCE: 0.33077943325042725
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3386, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8754, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [2/25] Loss: 0.0046170796267688274, RECONS: 0.004289862234145403, DISTANCE: 0.3272173007329305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3588, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [3/25] Loss: 0.004591024364344776, RECONS: 0.004257900407537818, DISTANCE: 0.3331238925457001
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3664, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8686, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [4/25] Loss: 0.004499007295817137, RECONS: 0.0041667721699923275, DISTANCE: 0.3322350263595581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8598, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [5/25] Loss: 0.004451370487610499, RECONS: 0.00412016276580592, DISTANCE: 0.33120763301849365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4032, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5949, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [6/25] Loss: 0.004478671854095799, RECONS: 0.004153884614684752, DISTANCE: 0.32478717395237516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [7/25] Loss: 0.00440653832629323, RECONS: 0.004080397833604366, DISTANCE: 0.326140433549881
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [8/25] Loss: 0.004372538584801886, RECONS: 0.0040486326648129355, DISTANCE: 0.32390586535135907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5935, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [9/25] Loss: 0.004462149506434798, RECONS: 0.00413476163521409, DISTANCE: 0.3273878335952759
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [10/25] Loss: 0.004432237283750014, RECONS: 0.004106987775726752, DISTANCE: 0.3252494660290805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [11/25] Loss: 0.004414036326731245, RECONS: 0.004091055248863995, DISTANCE: 0.3229810396830241
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [12/25] Loss: 0.004391686740116431, RECONS: 0.004068039572582795, DISTANCE: 0.3236471231167133
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4026, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8655, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [13/25] Loss: 0.004417098759274397, RECONS: 0.004091180628165603, DISTANCE: 0.32591808693749563
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8602, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [14/25] Loss: 0.004437339336921771, RECONS: 0.004109896998852491, DISTANCE: 0.3274422883987427
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [15/25] Loss: 0.004437554598553106, RECONS: 0.004111318936338648, DISTANCE: 0.3262356147170067
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3476, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8841, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [16/25] Loss: 0.004421442007536397, RECONS: 0.004095658221665551, DISTANCE: 0.32578374357784495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6267, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [17/25] Loss: 0.004425081786596113, RECONS: 0.004102047248226073, DISTANCE: 0.32303449842664933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3288, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8801, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6274, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [18/25] Loss: 0.004433725960552692, RECONS: 0.0041121217716289194, DISTANCE: 0.3216041577489753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3732, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [19/25] Loss: 0.004572188016027212, RECONS: 0.004248551698401571, DISTANCE: 0.32363629937171934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3524, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8606, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [20/25] Loss: 0.0045649939926252475, RECONS: 0.004240497747170073, DISTANCE: 0.32449622948964435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4076, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8819, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5912, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [21/25] Loss: 0.0045819771476089954, RECONS: 0.004257890014824542, DISTANCE: 0.3240871158513156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4209, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5865, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [22/25] Loss: 0.00464020485220396, RECONS: 0.004315578095290972, DISTANCE: 0.32462673083595606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4216, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [23/25] Loss: 0.004686677983651559, RECONS: 0.0043630241028343635, DISTANCE: 0.32365384697914124
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8619, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[131/300] [24/25] Loss: 0.00470274493098259, RECONS: 0.004363800082355738, DISTANCE: 0.3389448070526123
Test[131/300] [0/2] Loss: 0.005389855708926916, RECONS: 0.004926489666104317, DISTANCE: 0.4633660316467285
Test[131/300] [1/2] Loss: 0.005578906973823905, RECONS: 0.004654903896152973, DISTANCE: 0.9240031242370605
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3324, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8726, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [0/25] Loss: 0.004249020479619503, RECONS: 0.003923187032341957, DISTANCE: 0.32583320140838623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3185, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8697, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6264, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [1/25] Loss: 0.004696771269664168, RECONS: 0.004387276014313102, DISTANCE: 0.30949509143829346
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5960, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3116, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [2/25] Loss: 0.005045383237302303, RECONS: 0.0047349634890755015, DISTANCE: 0.31041963895161945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3274, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8759, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [3/25] Loss: 0.004887333954684436, RECONS: 0.004575842060148716, DISTANCE: 0.3114917576313019
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8639, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [4/25] Loss: 0.004752666316926479, RECONS: 0.0044434829615056515, DISTANCE: 0.3091832399368286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3969, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [5/25] Loss: 0.004754239382843177, RECONS: 0.004446684770906965, DISTANCE: 0.3075545032819112
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [6/25] Loss: 0.004731489212385246, RECONS: 0.0044205220017049995, DISTANCE: 0.31096713883536203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3813, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [7/25] Loss: 0.0047102312673814595, RECONS: 0.004399808763992041, DISTANCE: 0.31042246520519257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8655, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [8/25] Loss: 0.004760029311809275, RECONS: 0.004449272373070319, DISTANCE: 0.3107568820317586
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3711, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [9/25] Loss: 0.004722541337832809, RECONS: 0.004413193045184016, DISTANCE: 0.3093482255935669
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8773, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [10/25] Loss: 0.004766554741019552, RECONS: 0.004452570680190216, DISTANCE: 0.31398398225957697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3686, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8748, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [11/25] Loss: 0.004703397785002987, RECONS: 0.004386161667450021, DISTANCE: 0.3172360360622406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6212, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [12/25] Loss: 0.004715533246501134, RECONS: 0.004399618904034679, DISTANCE: 0.3159142732620239
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3344, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8807, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [13/25] Loss: 0.0046764826069452935, RECONS: 0.004361302225983569, DISTANCE: 0.315180310181209
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3549, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8948, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [14/25] Loss: 0.004684909588346878, RECONS: 0.004370193586995205, DISTANCE: 0.3147159417470296
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3462, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.9020, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [15/25] Loss: 0.0046383315057028085, RECONS: 0.004324755354900844, DISTANCE: 0.3135761022567749
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3556, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8750, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [16/25] Loss: 0.004646224106716759, RECONS: 0.004334624322569545, DISTANCE: 0.3115997314453125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8518, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [17/25] Loss: 0.004605381775440441, RECONS: 0.004295655991882086, DISTANCE: 0.3097257415453593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [18/25] Loss: 0.004559055534436514, RECONS: 0.004248523839602345, DISTANCE: 0.3105316538559763
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [19/25] Loss: 0.004549373057670891, RECONS: 0.004237903701141477, DISTANCE: 0.311469304561615
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3583, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [20/25] Loss: 0.004557203567985978, RECONS: 0.00424607785507327, DISTANCE: 0.31112565313066753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3627, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [21/25] Loss: 0.004547663392837752, RECONS: 0.004234747580167922, DISTANCE: 0.3129157478159124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5948, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3510, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8703, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [22/25] Loss: 0.004569658584406842, RECONS: 0.004256991467074207, DISTANCE: 0.31266706404478656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [23/25] Loss: 0.004574806642873834, RECONS: 0.0042630230891518295, DISTANCE: 0.31178349256515503
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6256, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3530, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[132/300] [24/25] Loss: 0.004630956128239632, RECONS: 0.004301619548350573, DISTANCE: 0.3293365240097046
Test[132/300] [0/2] Loss: 0.004843665286898613, RECONS: 0.004441698081791401, DISTANCE: 0.40196728706359863
Test[132/300] [1/2] Loss: 0.004988088505342603, RECONS: 0.004204142838716507, DISTANCE: 0.7839456796646118
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3311, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [0/25] Loss: 0.005146421026438475, RECONS: 0.0048511214554309845, DISTANCE: 0.2952994108200073
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3342, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8907, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [1/25] Loss: 0.004476152593269944, RECONS: 0.004169569700025022, DISTANCE: 0.30658286809921265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6247, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3267, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [2/25] Loss: 0.004446273980041345, RECONS: 0.0041387533613791066, DISTANCE: 0.30752066771189374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3285, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [3/25] Loss: 0.004352268762886524, RECONS: 0.004036201280541718, DISTANCE: 0.31606754660606384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8830, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [4/25] Loss: 0.004717070143669844, RECONS: 0.004402943048626184, DISTANCE: 0.31412711143493655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3596, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8665, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [5/25] Loss: 0.004582631401717663, RECONS: 0.004268670144180457, DISTANCE: 0.3139612873395284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3573, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8758, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [6/25] Loss: 0.004464160617707031, RECONS: 0.00414587979737137, DISTANCE: 0.3182808331080845
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3960, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [7/25] Loss: 0.004452002147445455, RECONS: 0.004130134446313605, DISTANCE: 0.3218676894903183
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4177, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [8/25] Loss: 0.004449195409607556, RECONS: 0.004129910246572561, DISTANCE: 0.31928515434265137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [9/25] Loss: 0.004449903569184244, RECONS: 0.004133574687875808, DISTANCE: 0.31632888317108154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3644, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [10/25] Loss: 0.004523922414095564, RECONS: 0.004207167541608214, DISTANCE: 0.3167548829858953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3653, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8877, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [11/25] Loss: 0.0044694422783019645, RECONS: 0.004154643509536982, DISTANCE: 0.3147987723350525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3280, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [12/25] Loss: 0.004415255971252918, RECONS: 0.004101137200800272, DISTANCE: 0.31411877962259144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3526, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8740, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [13/25] Loss: 0.004384474828839302, RECONS: 0.004066204502513366, DISTANCE: 0.3182703171457563
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [14/25] Loss: 0.004408146254718304, RECONS: 0.0040869283024221655, DISTANCE: 0.32121792634328206
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3141, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [15/25] Loss: 0.004378867452032864, RECONS: 0.004060006773215719, DISTANCE: 0.31886064261198044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3350, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [16/25] Loss: 0.004433186204337022, RECONS: 0.004112263169030056, DISTANCE: 0.32092301284565644
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8694, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [17/25] Loss: 0.004441337608214881, RECONS: 0.0041196632017898895, DISTANCE: 0.3216743932829963
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [18/25] Loss: 0.004475124596961234, RECONS: 0.004152352860393493, DISTANCE: 0.32277172490170125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [19/25] Loss: 0.004464155039750039, RECONS: 0.004142714582849294, DISTANCE: 0.32144044041633607
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4183, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8770, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [20/25] Loss: 0.004474510527437641, RECONS: 0.004150836340462168, DISTANCE: 0.32367416222890216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4145, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8729, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [21/25] Loss: 0.004462636202912439, RECONS: 0.004140715633349662, DISTANCE: 0.3219205411997708
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4117, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [22/25] Loss: 0.004442193180970524, RECONS: 0.004121309885269274, DISTANCE: 0.32088326889535657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5898, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [23/25] Loss: 0.004474095165884743, RECONS: 0.0041547084401827306, DISTANCE: 0.31938669085502625
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6220, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3577, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[133/300] [24/25] Loss: 0.004505188670009375, RECONS: 0.004167427057400346, DISTANCE: 0.3377615833282471
Test[133/300] [0/2] Loss: 0.004743936937302351, RECONS: 0.004251029342412949, DISTANCE: 0.49290740489959717
Test[133/300] [1/2] Loss: 0.0049093852285295725, RECONS: 0.004053052864037454, DISTANCE: 0.8563322424888611
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3579, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [0/25] Loss: 0.0046300445683300495, RECONS: 0.004300147294998169, DISTANCE: 0.32989704608917236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8672, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [1/25] Loss: 0.004418905125930905, RECONS: 0.004072176641784608, DISTANCE: 0.34672844409942627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [2/25] Loss: 0.004720655114700397, RECONS: 0.004390327803169687, DISTANCE: 0.33032727241516113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3259, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8769, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [3/25] Loss: 0.004910776508040726, RECONS: 0.004575298575218767, DISTANCE: 0.33547788858413696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [4/25] Loss: 0.004767239931970835, RECONS: 0.004426157707348466, DISTANCE: 0.3410821437835693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [5/25] Loss: 0.004692061571404338, RECONS: 0.0043594871725266176, DISTANCE: 0.3325742880503337
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5909, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [6/25] Loss: 0.00469522484179054, RECONS: 0.004360374296084046, DISTANCE: 0.3348504304885864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5942, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4037, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [7/25] Loss: 0.004604723886586726, RECONS: 0.004270927543984726, DISTANCE: 0.3337962180376053
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4067, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5918, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [8/25] Loss: 0.004544945485475991, RECONS: 0.004211798957031634, DISTANCE: 0.33314642641279435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5929, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [9/25] Loss: 0.004515864374116063, RECONS: 0.0041860071243718265, DISTANCE: 0.3298571705818176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [10/25] Loss: 0.00447658525610512, RECONS: 0.004142350750043988, DISTANCE: 0.33423442190343683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5939, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8706, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [11/25] Loss: 0.0045055762166157365, RECONS: 0.004175588391566028, DISTANCE: 0.3299877444903056
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8750, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [12/25] Loss: 0.004460779520181509, RECONS: 0.004133597840196812, DISTANCE: 0.3271816143622765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [13/25] Loss: 0.004465731459536723, RECONS: 0.004140496752890093, DISTANCE: 0.32523463453565327
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3633, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8762, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [14/25] Loss: 0.004517528166373571, RECONS: 0.00418837054943045, DISTANCE: 0.329157559076945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3513, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [15/25] Loss: 0.004491459054406732, RECONS: 0.004162770172115415, DISTANCE: 0.3286888226866722
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3759, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [16/25] Loss: 0.004451383877655163, RECONS: 0.004122690352446893, DISTANCE: 0.3286934670280008
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6263, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8774, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [17/25] Loss: 0.004493818838252789, RECONS: 0.00416502273745007, DISTANCE: 0.32879604233635795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3811, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8804, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [18/25] Loss: 0.004504572097702246, RECONS: 0.004177789522432967, DISTANCE: 0.32678252772281047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3900, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8832, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [19/25] Loss: 0.00451418812153861, RECONS: 0.004188026930205524, DISTANCE: 0.326161140203476
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3651, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8791, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [20/25] Loss: 0.00449750883992584, RECONS: 0.004172542952888068, DISTANCE: 0.32496583461761475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3651, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8684, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [21/25] Loss: 0.004468176228163595, RECONS: 0.004144693989391354, DISTANCE: 0.32348219373009424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3350, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8664, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [22/25] Loss: 0.004444466286298373, RECONS: 0.004120039399308355, DISTANCE: 0.32442684795545496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3362, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [23/25] Loss: 0.004425288925024991, RECONS: 0.004101923676595713, DISTANCE: 0.3233652114868164
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[134/300] [24/25] Loss: 0.004457203010097146, RECONS: 0.00412148660980165, DISTANCE: 0.3357163619995117
Test[134/300] [0/2] Loss: 0.004759443458169699, RECONS: 0.004262118600308895, DISTANCE: 0.49732494354248047
Test[134/300] [1/2] Loss: 0.004986305022612214, RECONS: 0.004102097358554602, DISTANCE: 0.8842077255249023
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3130, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [0/25] Loss: 0.003920391667634249, RECONS: 0.0036455648951232433, DISTANCE: 0.27482664585113525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3546, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [1/25] Loss: 0.003962829010561109, RECONS: 0.003673135070130229, DISTANCE: 0.2896938920021057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [2/25] Loss: 0.004213826886067788, RECONS: 0.003913667829086383, DISTANCE: 0.30015893777211505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [3/25] Loss: 0.004238073248416185, RECONS: 0.003935490851290524, DISTANCE: 0.30258235335350037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3688, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [4/25] Loss: 0.00420967536047101, RECONS: 0.003907232359051704, DISTANCE: 0.30244300365447996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [5/25] Loss: 0.004237059270963073, RECONS: 0.003934018546715379, DISTANCE: 0.30304070313771564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3503, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [6/25] Loss: 0.0042975896836391515, RECONS: 0.003998605068773031, DISTANCE: 0.2989846297672817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [7/25] Loss: 0.004256419721059501, RECONS: 0.003956134576583281, DISTANCE: 0.3002851605415344
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3526, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8929, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [8/25] Loss: 0.0042630866583850645, RECONS: 0.00396206372210549, DISTANCE: 0.3010229534573025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [9/25] Loss: 0.004244238091632724, RECONS: 0.003942681034095586, DISTANCE: 0.30155707597732545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8698, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [10/25] Loss: 0.004279312677681446, RECONS: 0.003975897371260958, DISTANCE: 0.3034153092991222
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3536, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8703, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [11/25] Loss: 0.004258203087374568, RECONS: 0.003953026374801993, DISTANCE: 0.305176705121994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3868, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [12/25] Loss: 0.004265648133766193, RECONS: 0.003961411842073386, DISTANCE: 0.3042362744991596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4146, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8698, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [13/25] Loss: 0.004262172683541264, RECONS: 0.003959003802654999, DISTANCE: 0.3031688502856663
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4297, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8624, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [14/25] Loss: 0.004295461717993021, RECONS: 0.003989686475445827, DISTANCE: 0.3057752052942912
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4295, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8646, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [15/25] Loss: 0.004315265512559563, RECONS: 0.004009576136013493, DISTANCE: 0.30568932741880417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8712, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [16/25] Loss: 0.004300186437938143, RECONS: 0.003995144589091925, DISTANCE: 0.3050417900085449
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3464, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [17/25] Loss: 0.004299958857397239, RECONS: 0.003993106760188109, DISTANCE: 0.3068520426750183
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3323, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8784, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [18/25] Loss: 0.004311738462236367, RECONS: 0.0040019292163809665, DISTANCE: 0.3098091953679135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3410, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [19/25] Loss: 0.004310726909898222, RECONS: 0.00400116021046415, DISTANCE: 0.30956665277481077
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3428, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8818, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [20/25] Loss: 0.004309867420012043, RECONS: 0.003999964212111774, DISTANCE: 0.30990315618969144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3329, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [21/25] Loss: 0.004270728815092959, RECONS: 0.003959119013002651, DISTANCE: 0.3116097558628429
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8555, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [22/25] Loss: 0.004258631030097604, RECONS: 0.00394779916488282, DISTANCE: 0.3108318266661271
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [23/25] Loss: 0.004282929187562938, RECONS: 0.003970511461375281, DISTANCE: 0.31241769591967267
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[135/300] [24/25] Loss: 0.004304001899436116, RECONS: 0.00397320413030684, DISTANCE: 0.33079773902893067
Test[135/300] [0/2] Loss: 0.0050790030509233475, RECONS: 0.0043917326256632805, DISTANCE: 0.6872704029083252
Test[135/300] [1/2] Loss: 0.005215811543166637, RECONS: 0.004277275409549475, DISTANCE: 0.9385360479354858
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [0/25] Loss: 0.0039296518079936504, RECONS: 0.003646463854238391, DISTANCE: 0.2831881046295166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [1/25] Loss: 0.004274049308151007, RECONS: 0.00397196679841727, DISTANCE: 0.3020826578140259
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4156, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8712, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [2/25] Loss: 0.004250204656273127, RECONS: 0.003954809391871095, DISTANCE: 0.295395294825236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4127, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [3/25] Loss: 0.004082259547431022, RECONS: 0.0037812007358297706, DISTANCE: 0.301058828830719
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8740, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [4/25] Loss: 0.004109430173411965, RECONS: 0.0037898018956184385, DISTANCE: 0.3196282863616943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4060, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8814, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [5/25] Loss: 0.004149079439230263, RECONS: 0.0038279274788995585, DISTANCE: 0.32115193208058673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [6/25] Loss: 0.004136352966140423, RECONS: 0.0038149364492190735, DISTANCE: 0.3214164802006313
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8777, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [7/25] Loss: 0.004132895584916696, RECONS: 0.0038102648104541004, DISTANCE: 0.32263076305389404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8723, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [8/25] Loss: 0.004097530488959617, RECONS: 0.0037749953981902865, DISTANCE: 0.32253509097629124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3288, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [9/25] Loss: 0.004061686503700912, RECONS: 0.0037413783837109806, DISTANCE: 0.32030812501907346
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [10/25] Loss: 0.004074084212664853, RECONS: 0.0037519382312893867, DISTANCE: 0.3221459930593317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3331, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [11/25] Loss: 0.004101606842596084, RECONS: 0.0037787623781089983, DISTANCE: 0.3228444655736287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [12/25] Loss: 0.0040812531056312416, RECONS: 0.003757661315970696, DISTANCE: 0.3235917824965257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3470, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8327, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [13/25] Loss: 0.00406851848986532, RECONS: 0.003748606491301741, DISTANCE: 0.3199119908469064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3717, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [14/25] Loss: 0.0040891135732332865, RECONS: 0.0037708519337077934, DISTANCE: 0.31826162338256836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3734, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [15/25] Loss: 0.0040915332501754165, RECONS: 0.0037726869923062623, DISTANCE: 0.318846233189106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [16/25] Loss: 0.004096691989723374, RECONS: 0.0037791607216657963, DISTANCE: 0.3175312491024242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3638, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [17/25] Loss: 0.004145207685521907, RECONS: 0.00382821100194835, DISTANCE: 0.3169966671201918
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [18/25] Loss: 0.004147726086605536, RECONS: 0.0038317482869483924, DISTANCE: 0.31597778671666193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [19/25] Loss: 0.004166367929428816, RECONS: 0.0038498385110870004, DISTANCE: 0.3165294051170349
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8722, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [20/25] Loss: 0.004143007310284745, RECONS: 0.0038251818845137244, DISTANCE: 0.3178254082089379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4105, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [21/25] Loss: 0.0041206586280498995, RECONS: 0.0038029744967140937, DISTANCE: 0.3176841139793396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [22/25] Loss: 0.004147198587737005, RECONS: 0.003830612110702888, DISTANCE: 0.3165864633477252
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [23/25] Loss: 0.004169221666719143, RECONS: 0.0038513172573099532, DISTANCE: 0.31790440281232196
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4368, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8705, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[136/300] [24/25] Loss: 0.004230858320370317, RECONS: 0.0038987371511757375, DISTANCE: 0.3321211624145508
Test[136/300] [0/2] Loss: 0.005144285503774881, RECONS: 0.004735277965664864, DISTANCE: 0.4090076684951782
Test[136/300] [1/2] Loss: 0.005453949794173241, RECONS: 0.004663056693971157, DISTANCE: 0.7908931374549866
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8776, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [0/25] Loss: 0.004379665479063988, RECONS: 0.004050050862133503, DISTANCE: 0.3296147584915161
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4123, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8780, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [1/25] Loss: 0.004208708181977272, RECONS: 0.0038803175557404757, DISTANCE: 0.32839077711105347
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [2/25] Loss: 0.004160517361015081, RECONS: 0.003839690083016952, DISTANCE: 0.3208274443944295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3415, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8710, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [3/25] Loss: 0.004140496137551963, RECONS: 0.0038262397283688188, DISTANCE: 0.3142565190792084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5948, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3268, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [4/25] Loss: 0.004477760009467602, RECONS: 0.0041667352430522445, DISTANCE: 0.3110248565673828
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3344, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8768, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [5/25] Loss: 0.004482360401501258, RECONS: 0.004159940949951609, DISTANCE: 0.3224194844563802
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3364, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8736, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [6/25] Loss: 0.004536680211978299, RECONS: 0.0042126609145530635, DISTANCE: 0.32401932988848003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6242, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [7/25] Loss: 0.004562145681120455, RECONS: 0.004230603983160108, DISTANCE: 0.3315417468547821
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3758, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [8/25] Loss: 0.004511720190445582, RECONS: 0.004181716021978193, DISTANCE: 0.3300041887495253
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4048, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8543, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [9/25] Loss: 0.0044785076286643745, RECONS: 0.0041485037188977005, DISTANCE: 0.33000394105911257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3816, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8667, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [10/25] Loss: 0.004518644841895862, RECONS: 0.004185084634545175, DISTANCE: 0.3335602500221946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [11/25] Loss: 0.004515089172249039, RECONS: 0.004179589566774666, DISTANCE: 0.33549964427948
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3640, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [12/25] Loss: 0.0044967204403991885, RECONS: 0.004163761730664051, DISTANCE: 0.33295873495248646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3492, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [13/25] Loss: 0.004475958179682493, RECONS: 0.004143395610818905, DISTANCE: 0.3325625828334263
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [14/25] Loss: 0.004433486020813385, RECONS: 0.004101637378334999, DISTANCE: 0.3318486531575521
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3449, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [15/25] Loss: 0.004455682530533522, RECONS: 0.0041255520773120224, DISTANCE: 0.3301304578781128
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3559, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [16/25] Loss: 0.004425822702400824, RECONS: 0.004096920136362314, DISTANCE: 0.3289025811588063
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3659, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [17/25] Loss: 0.00440405976648132, RECONS: 0.004074218812295132, DISTANCE: 0.3298409779866536
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3776, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [18/25] Loss: 0.0043880919631766645, RECONS: 0.004058674468021644, DISTANCE: 0.3294175110365215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3673, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8828, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [19/25] Loss: 0.00438034744001925, RECONS: 0.004051139671355486, DISTANCE: 0.32920777797698975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3692, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [20/25] Loss: 0.004371302557133493, RECONS: 0.004043303297034332, DISTANCE: 0.3279992739359538
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [21/25] Loss: 0.004383042137223211, RECONS: 0.004056447862901471, DISTANCE: 0.32659428769891913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3812, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [22/25] Loss: 0.00436473678311576, RECONS: 0.004036406905430815, DISTANCE: 0.32832989485367486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [23/25] Loss: 0.004345206776633859, RECONS: 0.004018837003968656, DISTANCE: 0.3263697922229767
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3353, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8811, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[137/300] [24/25] Loss: 0.004380112178623676, RECONS: 0.004035088010132313, DISTANCE: 0.34502418994903566
Test[137/300] [0/2] Loss: 0.004897523671388626, RECONS: 0.004377471283078194, DISTANCE: 0.520052433013916
Test[137/300] [1/2] Loss: 0.005095328204333782, RECONS: 0.004140254459343851, DISTANCE: 0.9550735950469971
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3525, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8798, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [0/25] Loss: 0.003642116440460086, RECONS: 0.0033020880073308945, DISTANCE: 0.34002840518951416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [1/25] Loss: 0.0037023696349933743, RECONS: 0.0033637869637459517, DISTANCE: 0.33858269453048706
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3395, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8800, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [2/25] Loss: 0.00391209179845949, RECONS: 0.0035844150309761367, DISTANCE: 0.32767677307128906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3318, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [3/25] Loss: 0.003945827891584486, RECONS: 0.003616883186623454, DISTANCE: 0.32894474267959595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [4/25] Loss: 0.003921396704390645, RECONS: 0.0035946430172771214, DISTANCE: 0.32675371170043943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [5/25] Loss: 0.003914903694142898, RECONS: 0.00359552470035851, DISTANCE: 0.3193790117899577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6227, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [6/25] Loss: 0.003938867710530758, RECONS: 0.0036215677059122492, DISTANCE: 0.31730003016335623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3104, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [7/25] Loss: 0.00399548199493438, RECONS: 0.003682360053062439, DISTANCE: 0.31312195956707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [8/25] Loss: 0.004015714809712436, RECONS: 0.0037033727082113423, DISTANCE: 0.3123421006732517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3452, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [9/25] Loss: 0.003999261884018779, RECONS: 0.003687306633219123, DISTANCE: 0.31195523738861086
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3478, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [10/25] Loss: 0.004024622580883178, RECONS: 0.0037100053477016363, DISTANCE: 0.31461720033125445
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3422, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [11/25] Loss: 0.00410005752928555, RECONS: 0.0037831465791290006, DISTANCE: 0.3169109026590983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3435, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [12/25] Loss: 0.004158604137886029, RECONS: 0.0038396243292551776, DISTANCE: 0.31897977682260364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3562, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [13/25] Loss: 0.004139124498968678, RECONS: 0.0038206693550039616, DISTANCE: 0.31845511708940777
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [14/25] Loss: 0.004144046253835161, RECONS: 0.0038276960607618094, DISTANCE: 0.3163501739501953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [15/25] Loss: 0.004171587395831011, RECONS: 0.003855139671941288, DISTANCE: 0.3164477050304413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3900, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [16/25] Loss: 0.0041640728082069575, RECONS: 0.0038466972353703834, DISTANCE: 0.3173755477456486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [17/25] Loss: 0.004158702691913479, RECONS: 0.003840187861998048, DISTANCE: 0.318514797422621
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8724, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [18/25] Loss: 0.004145351924786442, RECONS: 0.0038273826511086603, DISTANCE: 0.3179692469145122
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3548, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8644, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [19/25] Loss: 0.00412606947356835, RECONS: 0.0038087901775725186, DISTANCE: 0.3172792673110962
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3596, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [20/25] Loss: 0.004182395669409917, RECONS: 0.0038640278369365703, DISTANCE: 0.31836780479976107
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [21/25] Loss: 0.004161539889702743, RECONS: 0.0038436621491035276, DISTANCE: 0.31787770986557007
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [22/25] Loss: 0.004181755807898615, RECONS: 0.003864529492009593, DISTANCE: 0.3172262803367946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4254, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5931, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [23/25] Loss: 0.004188576674399276, RECONS: 0.0038723091420251876, DISTANCE: 0.3162675052881241
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5812, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4080, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[138/300] [24/25] Loss: 0.0042845610156655315, RECONS: 0.003950360724702478, DISTANCE: 0.33420027256011964
Test[138/300] [0/2] Loss: 0.005317667964845896, RECONS: 0.004681465215981007, DISTANCE: 0.6362028121948242
Test[138/300] [1/2] Loss: 0.0054954360239207745, RECONS: 0.004679379519075155, DISTANCE: 0.816056489944458
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4575, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5931, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [0/25] Loss: 0.0054502603597939014, RECONS: 0.0050878869369626045, DISTANCE: 0.36237335205078125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [1/25] Loss: 0.005679226713255048, RECONS: 0.005339727969840169, DISTANCE: 0.33949875831604004
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [2/25] Loss: 0.005407256229470174, RECONS: 0.0050862994976341724, DISTANCE: 0.3209567070007324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [3/25] Loss: 0.005005888291634619, RECONS: 0.004673094779718667, DISTANCE: 0.3327935039997101
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3314, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8977, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [4/25] Loss: 0.004878657776862383, RECONS: 0.004549160460010171, DISTANCE: 0.32949726581573485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3297, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8796, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [5/25] Loss: 0.004882773306841652, RECONS: 0.0045500041063254075, DISTANCE: 0.33276917537053424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3009, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [6/25] Loss: 0.0051131707483104295, RECONS: 0.004777056530916265, DISTANCE: 0.3361142192568098
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3525, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8661, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [7/25] Loss: 0.004943591135088354, RECONS: 0.004605285037541762, DISTANCE: 0.33830608427524567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3443, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [8/25] Loss: 0.004865109558320708, RECONS: 0.004529669596296217, DISTANCE: 0.3354399734073215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4045, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [9/25] Loss: 0.004904855648055673, RECONS: 0.0045700205722823736, DISTANCE: 0.3348350882530212
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4048, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [10/25] Loss: 0.004825186280703003, RECONS: 0.004495353416793726, DISTANCE: 0.3298328898169778
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8764, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [11/25] Loss: 0.004777551783869664, RECONS: 0.00444786202084894, DISTANCE: 0.3296897808710734
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8563, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [12/25] Loss: 0.004714087941325628, RECONS: 0.004386679806674902, DISTANCE: 0.3274081670320951
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8716, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [13/25] Loss: 0.004787244501390627, RECONS: 0.00446014162818236, DISTANCE: 0.32710289103644236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3582, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [14/25] Loss: 0.004740714095532894, RECONS: 0.004413947913174828, DISTANCE: 0.3267662048339844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6227, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3583, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [15/25] Loss: 0.004702319478383288, RECONS: 0.004377620658488013, DISTANCE: 0.324698843061924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8644, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [16/25] Loss: 0.0047127353301381365, RECONS: 0.004389141535605578, DISTANCE: 0.32359381984261903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8794, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [17/25] Loss: 0.0046785711828205324, RECONS: 0.004356182852966918, DISTANCE: 0.32238836420906913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8702, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [18/25] Loss: 0.004630522263285361, RECONS: 0.00430828733614793, DISTANCE: 0.3222349631158929
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [19/25] Loss: 0.004624265129677951, RECONS: 0.004302630259189755, DISTANCE: 0.32163490653038024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4200, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [20/25] Loss: 0.004639955791866495, RECONS: 0.004318630178680732, DISTANCE: 0.32132565407525926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8454, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [21/25] Loss: 0.00464508966119452, RECONS: 0.004322553042915057, DISTANCE: 0.32253665273839777
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3623, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [22/25] Loss: 0.004635619606984698, RECONS: 0.00431127739948747, DISTANCE: 0.32434223527493683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3302, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [23/25] Loss: 0.004613699527302136, RECONS: 0.004289927805075422, DISTANCE: 0.32377173999945325
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[139/300] [24/25] Loss: 0.004581575049087405, RECONS: 0.004245658423751592, DISTANCE: 0.3359166383743286
Test[139/300] [0/2] Loss: 0.004658767022192478, RECONS: 0.004144180566072464, DISTANCE: 0.5145866870880127
Test[139/300] [1/2] Loss: 0.0047950707376003265, RECONS: 0.003939630463719368, DISTANCE: 0.8554404973983765
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5945, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8781, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [0/25] Loss: 0.006026002112776041, RECONS: 0.005693124607205391, DISTANCE: 0.33287763595581055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [1/25] Loss: 0.005152564030140638, RECONS: 0.004837642889469862, DISTANCE: 0.31492114067077637
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [2/25] Loss: 0.004794423468410969, RECONS: 0.004481826132784287, DISTANCE: 0.312597393989563
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4023, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [3/25] Loss: 0.004827920231036842, RECONS: 0.004503485397435725, DISTANCE: 0.3244348466396332
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3625, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [4/25] Loss: 0.004692708421498537, RECONS: 0.004360007029026747, DISTANCE: 0.33270137310028075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [5/25] Loss: 0.0045189208661516505, RECONS: 0.004184463721079131, DISTANCE: 0.3344571391741435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [6/25] Loss: 0.004402850887605122, RECONS: 0.004068976434479866, DISTANCE: 0.3338744470051357
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3509, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8736, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [7/25] Loss: 0.004437425348442048, RECONS: 0.004106833745026961, DISTANCE: 0.3305915743112564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [8/25] Loss: 0.004359943999184502, RECONS: 0.004032027467878329, DISTANCE: 0.3279165161980523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6187, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [9/25] Loss: 0.004328521899878979, RECONS: 0.003997679217718542, DISTANCE: 0.330842649936676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [10/25] Loss: 0.004297310825098644, RECONS: 0.003956461875614795, DISTANCE: 0.3408489335667003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3416, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8730, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [11/25] Loss: 0.004284859906571607, RECONS: 0.00394321388254563, DISTANCE: 0.34164602557818097
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [12/25] Loss: 0.004294139297249226, RECONS: 0.0039552885036055856, DISTANCE: 0.33885080080765945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [13/25] Loss: 0.00424125516188464, RECONS: 0.003904946464379983, DISTANCE: 0.3363087092127119
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3586, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [14/25] Loss: 0.004251045873388648, RECONS: 0.003913732975100477, DISTANCE: 0.33731289704640705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8691, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [15/25] Loss: 0.004269754936103709, RECONS: 0.003935556815122254, DISTANCE: 0.33419810980558395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8592, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [16/25] Loss: 0.004251922521849766, RECONS: 0.003917446209336905, DISTANCE: 0.3344763096641092
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8835, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [17/25] Loss: 0.004230779582738048, RECONS: 0.0038972371257841587, DISTANCE: 0.33354245291815865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6277, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [18/25] Loss: 0.00421493102208172, RECONS: 0.003883377599873041, DISTANCE: 0.3315534089740954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3178, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6286, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [19/25] Loss: 0.004216102638747543, RECONS: 0.0038862291257828474, DISTANCE: 0.32987349629402163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3211, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8697, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [20/25] Loss: 0.004232645467189806, RECONS: 0.003902833509658064, DISTANCE: 0.3298119476863316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3081, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8707, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [21/25] Loss: 0.004262034961191768, RECONS: 0.003932716642421755, DISTANCE: 0.32931831750002777
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3416, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [22/25] Loss: 0.0042533848697886515, RECONS: 0.003925072980801697, DISTANCE: 0.32831188906794007
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [23/25] Loss: 0.00425668263536257, RECONS: 0.003928030006742726, DISTANCE: 0.32865263521671295
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4047, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[140/300] [24/25] Loss: 0.004351070439442992, RECONS: 0.004006338119506836, DISTANCE: 0.3447323179244995
Test[140/300] [0/2] Loss: 0.006262410897761583, RECONS: 0.0055802203714847565, DISTANCE: 0.6821904182434082
Test[140/300] [1/2] Loss: 0.006790782790631056, RECONS: 0.005768752424046397, DISTANCE: 1.0220303535461426
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4137, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [0/25] Loss: 0.00533654261380434, RECONS: 0.004947583191096783, DISTANCE: 0.3889594078063965
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [1/25] Loss: 0.004849167075008154, RECONS: 0.004482820862904191, DISTANCE: 0.3663461208343506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [2/25] Loss: 0.004714662519594033, RECONS: 0.004363522243996461, DISTANCE: 0.35114022095998126
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [3/25] Loss: 0.0048997580306604505, RECONS: 0.004551341873593628, DISTANCE: 0.34841611981391907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8746, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [4/25] Loss: 0.004756193980574608, RECONS: 0.004410182498395443, DISTANCE: 0.34601147174835206
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8689, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [5/25] Loss: 0.004581029914940397, RECONS: 0.00423955509904772, DISTANCE: 0.3414747913678487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [6/25] Loss: 0.004542580672672817, RECONS: 0.004209541283281786, DISTANCE: 0.3330393689019339
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3499, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8726, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [7/25] Loss: 0.004519300244282931, RECONS: 0.00418335446738638, DISTANCE: 0.3359457403421402
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3577, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [8/25] Loss: 0.004471221628288428, RECONS: 0.004137961581970255, DISTANCE: 0.3332599931293064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [9/25] Loss: 0.004395584017038346, RECONS: 0.004066030285321176, DISTANCE: 0.32955368757247927
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3586, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [10/25] Loss: 0.00440939050167799, RECONS: 0.004080374830995093, DISTANCE: 0.32901564511385833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [11/25] Loss: 0.00443231884855777, RECONS: 0.0041012718381049735, DISTANCE: 0.3310469885667165
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3467, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [12/25] Loss: 0.004388097996035447, RECONS: 0.004058501987646406, DISTANCE: 0.3295959784434392
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5947, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [13/25] Loss: 0.0043620274934385505, RECONS: 0.0040330806846863455, DISTANCE: 0.3289467692375183
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [14/25] Loss: 0.004366568972667058, RECONS: 0.004039343803500136, DISTANCE: 0.32722513675689696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3517, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [15/25] Loss: 0.004366681532701477, RECONS: 0.004039536710479297, DISTANCE: 0.3271447941660881
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6213, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3400, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8685, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [16/25] Loss: 0.00435105779701296, RECONS: 0.004024245447533972, DISTANCE: 0.32681231638964486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3016, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8815, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6239, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [17/25] Loss: 0.0043806826126658255, RECONS: 0.004055191141863664, DISTANCE: 0.32549144824345905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8701, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6255, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [18/25] Loss: 0.004388972308094564, RECONS: 0.0040639607039721385, DISTANCE: 0.32501157333976344
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2982, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6259, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [19/25] Loss: 0.004399947659112513, RECONS: 0.00407506653573364, DISTANCE: 0.3248811006546021
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3509, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [20/25] Loss: 0.004443454201377574, RECONS: 0.004116698766925505, DISTANCE: 0.3267554101489839
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [21/25] Loss: 0.004410277258350768, RECONS: 0.004085669600912793, DISTANCE: 0.324607637795535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5918, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [22/25] Loss: 0.004388742239983833, RECONS: 0.00406470468632229, DISTANCE: 0.32403753633084503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4136, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5860, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [23/25] Loss: 0.004397752626876657, RECONS: 0.004074192790236945, DISTANCE: 0.32355982561906177
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5903, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4264, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5888, device='cuda:0', grad_fn=<MeanBackward0>)
Train[141/300] [24/25] Loss: 0.004450485007837414, RECONS: 0.0041117594297975305, DISTANCE: 0.33872557163238526
Test[141/300] [0/2] Loss: 0.005670749582350254, RECONS: 0.005298998206853867, DISTANCE: 0.3717513084411621
Test[141/300] [1/2] Loss: 0.0059862821362912655, RECONS: 0.005262872204184532, DISTANCE: 0.72340989112854
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5934, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [0/25] Loss: 0.004749068059027195, RECONS: 0.00439910963177681, DISTANCE: 0.3499584197998047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4042, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [1/25] Loss: 0.004779298324137926, RECONS: 0.004430295899510384, DISTANCE: 0.3490023612976074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8872, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [2/25] Loss: 0.004665273707360029, RECONS: 0.004318953802188237, DISTANCE: 0.3463198741277059
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8794, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [3/25] Loss: 0.004540463211014867, RECONS: 0.004209581762552261, DISTANCE: 0.33088141679763794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3779, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8728, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6250, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [4/25] Loss: 0.004567224066704512, RECONS: 0.004237536434084177, DISTANCE: 0.32968764305114745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3494, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8960, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [5/25] Loss: 0.0044580067818363505, RECONS: 0.004131637203196685, DISTANCE: 0.32636956373850506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8664, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [6/25] Loss: 0.004376267648435065, RECONS: 0.004054332684193339, DISTANCE: 0.3219349554606846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3564, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [7/25] Loss: 0.004345172579633072, RECONS: 0.004022906301543117, DISTANCE: 0.32226626574993134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3634, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [8/25] Loss: 0.0043028115760535, RECONS: 0.003979241553073128, DISTANCE: 0.32357002629174125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6206, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [9/25] Loss: 0.004300146806053817, RECONS: 0.003981563146226108, DISTANCE: 0.3185836672782898
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [10/25] Loss: 0.004255084511400623, RECONS: 0.0039381767961789264, DISTANCE: 0.3169077309695157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3637, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [11/25] Loss: 0.004282065298563491, RECONS: 0.003962894241946439, DISTANCE: 0.31917105118433636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3473, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [12/25] Loss: 0.004292297194926784, RECONS: 0.003974927589297295, DISTANCE: 0.31736961694864124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [13/25] Loss: 0.0042456814054665825, RECONS: 0.003929123066232673, DISTANCE: 0.3165583440235683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3392, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [14/25] Loss: 0.004209687265877922, RECONS: 0.0038887074993302424, DISTANCE: 0.32097977002461753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3148, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8731, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [15/25] Loss: 0.0041651751671452075, RECONS: 0.003844306746032089, DISTANCE: 0.3208684176206589
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3220, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [16/25] Loss: 0.0041505094234119445, RECONS: 0.003828293958897976, DISTANCE: 0.3222154659383437
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3113, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8770, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [17/25] Loss: 0.004201882699918415, RECONS: 0.0038794581131595704, DISTANCE: 0.32242459058761597
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [18/25] Loss: 0.004205632979344381, RECONS: 0.003883385871488013, DISTANCE: 0.32224712246342707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [19/25] Loss: 0.004190614505205303, RECONS: 0.003867803537286818, DISTANCE: 0.32281097769737244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [20/25] Loss: 0.004195141062761347, RECONS: 0.0038719958448339077, DISTANCE: 0.3231452249345325
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4403, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [21/25] Loss: 0.0041924251179972834, RECONS: 0.0038692303192378445, DISTANCE: 0.32319480180740356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [22/25] Loss: 0.004207840118476231, RECONS: 0.0038820949848741293, DISTANCE: 0.32574513684148376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4180, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [23/25] Loss: 0.00420560929342173, RECONS: 0.003879363959034284, DISTANCE: 0.3262453426917394
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8878, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[142/300] [24/25] Loss: 0.004229940352961421, RECONS: 0.0038858775049448015, DISTANCE: 0.34406286239624023
Test[142/300] [0/2] Loss: 0.004427528008818626, RECONS: 0.0036300290375947952, DISTANCE: 0.7974991798400879
Test[142/300] [1/2] Loss: 0.004536808002740145, RECONS: 0.0034503600327298045, DISTANCE: 1.0864479541778564
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3679, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8808, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [0/25] Loss: 0.0039499131962656975, RECONS: 0.0036590690724551678, DISTANCE: 0.2908439636230469
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3506, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [1/25] Loss: 0.003886549035087228, RECONS: 0.00356706022284925, DISTANCE: 0.3194887638092041
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3453, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [2/25] Loss: 0.003937103319913149, RECONS: 0.00361895856137077, DISTANCE: 0.3181446393330892
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3360, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [3/25] Loss: 0.0039012673660181463, RECONS: 0.00358011043863371, DISTANCE: 0.3211568593978882
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3351, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8634, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [4/25] Loss: 0.003918059030547738, RECONS: 0.0036069594323635103, DISTANCE: 0.31109957695007323
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [5/25] Loss: 0.003922958586675425, RECONS: 0.0036096868958945074, DISTANCE: 0.3132716417312622
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [6/25] Loss: 0.0038761012588760684, RECONS: 0.003556069419054048, DISTANCE: 0.32003181321280344
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [7/25] Loss: 0.0038885159592609853, RECONS: 0.0035687396011780947, DISTANCE: 0.319776326417923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6242, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [8/25] Loss: 0.003868543129000399, RECONS: 0.003538465593010187, DISTANCE: 0.33007750246259904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3366, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [9/25] Loss: 0.003917309269309044, RECONS: 0.0035882608499377966, DISTANCE: 0.3290483713150024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [10/25] Loss: 0.004093663597648794, RECONS: 0.0037660378200764007, DISTANCE: 0.32762572982094507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3248, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [11/25] Loss: 0.004064465135646363, RECONS: 0.003740612572679917, DISTANCE: 0.3238525191942851
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8833, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [12/25] Loss: 0.004031796097898712, RECONS: 0.003708392381668091, DISTANCE: 0.32340367940755993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [13/25] Loss: 0.004047523801481085, RECONS: 0.003726337238081864, DISTANCE: 0.32118652548108784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4032, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8731, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [14/25] Loss: 0.004042155497396986, RECONS: 0.0037223345755289, DISTANCE: 0.3198208888371786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4151, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8781, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [15/25] Loss: 0.004051111623994075, RECONS: 0.0037278532690834254, DISTANCE: 0.32325831055641174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4100, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [16/25] Loss: 0.004053218166946489, RECONS: 0.0037300861851476573, DISTANCE: 0.3231319259194767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4056, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [17/25] Loss: 0.004055120814074244, RECONS: 0.0037313870594112408, DISTANCE: 0.3237337006462945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4124, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [18/25] Loss: 0.004049544087856224, RECONS: 0.003723603930618418, DISTANCE: 0.3259401070444207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8592, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [19/25] Loss: 0.004061583091970533, RECONS: 0.003736858710180968, DISTANCE: 0.3247243404388428
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [20/25] Loss: 0.0040643825084857995, RECONS: 0.0037372170260087365, DISTANCE: 0.3271654446919759
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3574, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [21/25] Loss: 0.00404145837422799, RECONS: 0.003713656195693395, DISTANCE: 0.3278021378950639
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5908, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [22/25] Loss: 0.004072309188220812, RECONS: 0.0037450763477903347, DISTANCE: 0.32723279621290124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8681, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [23/25] Loss: 0.004075888602528721, RECONS: 0.0037489764799829572, DISTANCE: 0.32691208521525067
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3391, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[143/300] [24/25] Loss: 0.004093441292643547, RECONS: 0.0037483767699450256, DISTANCE: 0.34506447792053224
Test[143/300] [0/2] Loss: 0.004589548334479332, RECONS: 0.003844193648546934, DISTANCE: 0.7453545331954956
Test[143/300] [1/2] Loss: 0.004735775291919708, RECONS: 0.003662233240902424, DISTANCE: 1.073542058467865
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5907, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8749, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [0/25] Loss: 0.003930277191102505, RECONS: 0.003558402881026268, DISTANCE: 0.3718743324279785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [1/25] Loss: 0.004027628805488348, RECONS: 0.0036857184022665024, DISTANCE: 0.34191036224365234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [2/25] Loss: 0.004008369520306587, RECONS: 0.0036688641800234714, DISTANCE: 0.3395053545633952
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3722, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [3/25] Loss: 0.004003021866083145, RECONS: 0.003672559163533151, DISTANCE: 0.3304627239704132
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [4/25] Loss: 0.004011313896626234, RECONS: 0.0036879010498523713, DISTANCE: 0.323412823677063
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3888, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [5/25] Loss: 0.003966049989685416, RECONS: 0.003643706518535813, DISTANCE: 0.32234344879786175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3530, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [6/25] Loss: 0.003922238447038191, RECONS: 0.0035999566316604614, DISTANCE: 0.3222817863736834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3167, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [7/25] Loss: 0.003954333282308653, RECONS: 0.0036359182267915457, DISTANCE: 0.3184150457382202
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2783, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [8/25] Loss: 0.00393599253665242, RECONS: 0.0036112881110360226, DISTANCE: 0.3247044218911065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8829, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [9/25] Loss: 0.003939763526432216, RECONS: 0.0036148724844679236, DISTANCE: 0.32489103078842163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3329, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8797, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [10/25] Loss: 0.00393022891049358, RECONS: 0.0036054156000979924, DISTANCE: 0.32481330091303046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3309, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [11/25] Loss: 0.003942032364041855, RECONS: 0.003617636025107155, DISTANCE: 0.32439632217089337
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [12/25] Loss: 0.003982893531568921, RECONS: 0.003658705552180226, DISTANCE: 0.3241879664934598
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [13/25] Loss: 0.004010493318284196, RECONS: 0.0036861055164730976, DISTANCE: 0.32438778025763376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6229, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4007, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [14/25] Loss: 0.004076991990829507, RECONS: 0.0037538705859333278, DISTANCE: 0.32312137285868325
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4168, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [15/25] Loss: 0.004086516171810217, RECONS: 0.003762059801374562, DISTANCE: 0.3244563490152359
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3604, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [16/25] Loss: 0.0040637477547587715, RECONS: 0.003741640173008337, DISTANCE: 0.32210755348205566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3424, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [17/25] Loss: 0.004118986000927786, RECONS: 0.003796394694493049, DISTANCE: 0.32259129153357613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3308, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8690, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [18/25] Loss: 0.00408806831968066, RECONS: 0.003767005927664669, DISTANCE: 0.3210623766246595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [19/25] Loss: 0.004095727053936571, RECONS: 0.0037762976484373213, DISTANCE: 0.31942938566207885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8624, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [20/25] Loss: 0.004091091420767563, RECONS: 0.003771143178233788, DISTANCE: 0.31994821911766413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3470, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [21/25] Loss: 0.00418228212616999, RECONS: 0.0038616485068235884, DISTANCE: 0.32063359022140503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3888, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [22/25] Loss: 0.004164959020588709, RECONS: 0.003844697797751945, DISTANCE: 0.3202611933583799
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4205, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [23/25] Loss: 0.004161731553419183, RECONS: 0.0038414869826131812, DISTANCE: 0.32024453580379486
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4409, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[144/300] [24/25] Loss: 0.00420545207336545, RECONS: 0.0038690823595970867, DISTANCE: 0.3363696718215942
Test[144/300] [0/2] Loss: 0.005033113993704319, RECONS: 0.004184109624475241, DISTANCE: 0.8490042686462402
Test[144/300] [1/2] Loss: 0.005268045701086521, RECONS: 0.004097539698705077, DISTANCE: 1.1705060005187988
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4436, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [0/25] Loss: 0.0049577271565794945, RECONS: 0.004634890705347061, DISTANCE: 0.32283663749694824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4029, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [1/25] Loss: 0.004362307605333626, RECONS: 0.004049218259751797, DISTANCE: 0.31308943033218384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [2/25] Loss: 0.004280270931000511, RECONS: 0.003964843073238929, DISTANCE: 0.3154279788335164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8681, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [3/25] Loss: 0.004232935549225658, RECONS: 0.003925666271243244, DISTANCE: 0.3072693645954132
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6271, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [4/25] Loss: 0.004215417383238673, RECONS: 0.003904091566801071, DISTANCE: 0.31132586002349855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2728, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8853, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [5/25] Loss: 0.004335840426695843, RECONS: 0.004015851921091477, DISTANCE: 0.31998856862386066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8645, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [6/25] Loss: 0.004217301229281085, RECONS: 0.0038872768969408105, DISTANCE: 0.33002439567020964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3085, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [7/25] Loss: 0.004131110443267971, RECONS: 0.003803816536674276, DISTANCE: 0.3272939473390579
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3272, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8660, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [8/25] Loss: 0.0040794022174345124, RECONS: 0.00375597116847833, DISTANCE: 0.3234310812420315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3329, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8514, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [9/25] Loss: 0.004088909551501274, RECONS: 0.0037629839032888414, DISTANCE: 0.3259256839752197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [10/25] Loss: 0.0040339704137295485, RECONS: 0.0037060603287748313, DISTANCE: 0.3279101089997725
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3577, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8522, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [11/25] Loss: 0.004023062239866704, RECONS: 0.0036965364512676993, DISTANCE: 0.32652580738067627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [12/25] Loss: 0.003988169563504366, RECONS: 0.003662544177271999, DISTANCE: 0.3256254012768085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [13/25] Loss: 0.003953118875090565, RECONS: 0.0036288368948070066, DISTANCE: 0.32428199904305594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8550, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [14/25] Loss: 0.003962682901571194, RECONS: 0.0036346923404683667, DISTANCE: 0.3279905637105306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3836, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8876, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [15/25] Loss: 0.003972895327024162, RECONS: 0.0036453759676078334, DISTANCE: 0.32751935720443726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3730, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8664, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [16/25] Loss: 0.00397930179229554, RECONS: 0.0036520726211807307, DISTANCE: 0.32722917725058165
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [17/25] Loss: 0.003993588189284007, RECONS: 0.0036632855189964175, DISTANCE: 0.33030268881056046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [18/25] Loss: 0.00397988147788534, RECONS: 0.003647584651939963, DISTANCE: 0.332296842022946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8763, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [19/25] Loss: 0.004026459029410035, RECONS: 0.003694486280437559, DISTANCE: 0.3319727599620819
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8808, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [20/25] Loss: 0.004003476384761078, RECONS: 0.0036723398758719363, DISTANCE: 0.33113651616232737
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4124, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [21/25] Loss: 0.003979262948798185, RECONS: 0.0036492027998478575, DISTANCE: 0.33006015149029816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5881, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4160, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [22/25] Loss: 0.00401816688194547, RECONS: 0.0036877476428028035, DISTANCE: 0.3304192501565684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4376, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5914, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [23/25] Loss: 0.004026145218328263, RECONS: 0.0036964029616986713, DISTANCE: 0.3297422726949056
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5871, device='cuda:0', grad_fn=<MeanBackward0>)
Train[145/300] [24/25] Loss: 0.004075001841410995, RECONS: 0.003729279227554798, DISTANCE: 0.3457226276397705
Test[145/300] [0/2] Loss: 0.004213670268654823, RECONS: 0.0036176228895783424, DISTANCE: 0.5960475206375122
Test[145/300] [1/2] Loss: 0.004520880524069071, RECONS: 0.003600363968871534, DISTANCE: 0.9205165505409241
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4220, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5913, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [0/25] Loss: 0.004281984642148018, RECONS: 0.003959235735237598, DISTANCE: 0.32274866104125977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4044, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [1/25] Loss: 0.0041529214940965176, RECONS: 0.003835669602267444, DISTANCE: 0.31725168228149414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [2/25] Loss: 0.0040472383455683785, RECONS: 0.003724463051185012, DISTANCE: 0.3227751652399699
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8799, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [3/25] Loss: 0.0040692585171200335, RECONS: 0.0037455963902175426, DISTANCE: 0.32366201281547546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3462, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6286, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [4/25] Loss: 0.004137115785852075, RECONS: 0.003819554392248392, DISTANCE: 0.31756131649017333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [5/25] Loss: 0.0042061262065544724, RECONS: 0.003893324096376697, DISTANCE: 0.3128020564715068
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3597, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [6/25] Loss: 0.004097156525988664, RECONS: 0.003783759827326451, DISTANCE: 0.31339664118630545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [7/25] Loss: 0.004077327233972028, RECONS: 0.0037634676264133304, DISTANCE: 0.31385958194732666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4141, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [8/25] Loss: 0.004031704738736153, RECONS: 0.0037114249231914678, DISTANCE: 0.3202797969182332
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4207, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5883, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [9/25] Loss: 0.004044188419356942, RECONS: 0.003728241310454905, DISTANCE: 0.3159470796585083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4322, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5869, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [10/25] Loss: 0.0040871171196076, RECONS: 0.003768015166067264, DISTANCE: 0.3191019188274037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4221, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5922, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [11/25] Loss: 0.004117723670788109, RECONS: 0.0037969084029706814, DISTANCE: 0.32081523537635803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [12/25] Loss: 0.004094173469079228, RECONS: 0.0037764951300162533, DISTANCE: 0.3176783048189603
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8881, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [13/25] Loss: 0.004086554931875851, RECONS: 0.0037710039344217095, DISTANCE: 0.3155509744371687
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8939, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [14/25] Loss: 0.004087866206342976, RECONS: 0.0037707315757870676, DISTANCE: 0.31713460286458334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8846, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6318, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [15/25] Loss: 0.004144369377172552, RECONS: 0.0038242476293817163, DISTANCE: 0.320121705532074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3270, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8887, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [16/25] Loss: 0.004154154578881229, RECONS: 0.003834231592276517, DISTANCE: 0.31992295209099264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [17/25] Loss: 0.004141394294694894, RECONS: 0.003820938717884322, DISTANCE: 0.32045555114746094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3714, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [18/25] Loss: 0.0041482145040247, RECONS: 0.003826602031231711, DISTANCE: 0.3216124584800319
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3681, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [19/25] Loss: 0.0041279548313468695, RECONS: 0.0038078549201600253, DISTANCE: 0.32009989619255064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [20/25] Loss: 0.004098047258421069, RECONS: 0.003778760066433322, DISTANCE: 0.31928718090057373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [21/25] Loss: 0.004079442492432215, RECONS: 0.0037591795923865652, DISTANCE: 0.3202628872611306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3752, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8451, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [22/25] Loss: 0.004075677275819623, RECONS: 0.0037563824317539516, DISTANCE: 0.31929483102715533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [23/25] Loss: 0.004085403847663353, RECONS: 0.0037645875418093055, DISTANCE: 0.3208162883917491
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3154, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[146/300] [24/25] Loss: 0.0040620860271155836, RECONS: 0.003728658985346556, DISTANCE: 0.3334270191192627
Test[146/300] [0/2] Loss: 0.004330101888626814, RECONS: 0.0037758145481348038, DISTANCE: 0.5542871952056885
Test[146/300] [1/2] Loss: 0.004460998577997088, RECONS: 0.003603968769311905, DISTANCE: 0.8570297360420227
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3779, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [0/25] Loss: 0.003666951786726713, RECONS: 0.0033662354107946157, DISTANCE: 0.3007164001464844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3296, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [1/25] Loss: 0.0037962929345667362, RECONS: 0.00349409063346684, DISTANCE: 0.3022022247314453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3696, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [2/25] Loss: 0.0037669247637192407, RECONS: 0.003455136281748613, DISTANCE: 0.3117884397506714
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3484, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8770, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [3/25] Loss: 0.003961630049161613, RECONS: 0.003646678291261196, DISTANCE: 0.31495168805122375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3763, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [4/25] Loss: 0.003988824784755707, RECONS: 0.003671973757445812, DISTANCE: 0.31685097217559816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3967, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [5/25] Loss: 0.003966039085450272, RECONS: 0.003644909942522645, DISTANCE: 0.32112910350163776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6226, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [6/25] Loss: 0.004091549764520356, RECONS: 0.0037730976806155275, DISTANCE: 0.31845201764787945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3641, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [7/25] Loss: 0.0042062906723003834, RECONS: 0.003889701038133353, DISTANCE: 0.3165895789861679
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3566, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [8/25] Loss: 0.004133237241249945, RECONS: 0.003817384441693624, DISTANCE: 0.3158527480231391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5914, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8684, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [9/25] Loss: 0.004245302616618573, RECONS: 0.003931751754134893, DISTANCE: 0.3135507941246033
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [10/25] Loss: 0.0042653209318152885, RECONS: 0.003944676792757077, DISTANCE: 0.3206440643830733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3475, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8646, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [11/25] Loss: 0.004200471312894176, RECONS: 0.003878849015260736, DISTANCE: 0.3216222325960795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [12/25] Loss: 0.004177889518009929, RECONS: 0.0038558313300689827, DISTANCE: 0.3220581366465642
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [13/25] Loss: 0.004146836165870939, RECONS: 0.003822748449497989, DISTANCE: 0.3240876623562404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4123, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [14/25] Loss: 0.00412783621189495, RECONS: 0.003805092629045248, DISTANCE: 0.3227435350418091
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [15/25] Loss: 0.00410888773330953, RECONS: 0.0037853851245017722, DISTANCE: 0.3235025629401207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3742, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [16/25] Loss: 0.004094860858886558, RECONS: 0.003770326921606765, DISTANCE: 0.3245338902753942
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3600, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [17/25] Loss: 0.004082176989565293, RECONS: 0.0037575349366913238, DISTANCE: 0.32464200258255005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3304, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [18/25] Loss: 0.0040937626097155245, RECONS: 0.003766760009487993, DISTANCE: 0.3270025567004555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3606, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8674, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [19/25] Loss: 0.004092656588181853, RECONS: 0.003763446363154799, DISTANCE: 0.32921019196510315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [20/25] Loss: 0.004086064174771309, RECONS: 0.003756193322173896, DISTANCE: 0.32987081436883836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3425, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8729, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [21/25] Loss: 0.0040653366278010335, RECONS: 0.003735667697831311, DISTANCE: 0.32966889576478436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3610, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [22/25] Loss: 0.0040612882914264565, RECONS: 0.003731983946636319, DISTANCE: 0.3293043064034503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3703, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [23/25] Loss: 0.004071567139665906, RECONS: 0.0037431942861682423, DISTANCE: 0.3283728063106537
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[147/300] [24/25] Loss: 0.004073644382879138, RECONS: 0.0037333257216960194, DISTANCE: 0.34031862258911133
Test[147/300] [0/2] Loss: 0.004326388239860535, RECONS: 0.003576837945729494, DISTANCE: 0.7495502233505249
Test[147/300] [1/2] Loss: 0.004486699588596821, RECONS: 0.0033846639562398195, DISTANCE: 1.1020357012748718
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3400, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [0/25] Loss: 0.0035690891090780497, RECONS: 0.003287868108600378, DISTANCE: 0.2812209129333496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3378, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [1/25] Loss: 0.0036119725555181503, RECONS: 0.003313510795123875, DISTANCE: 0.2984616756439209
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3628, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [2/25] Loss: 0.003483810151616732, RECONS: 0.003189095063135028, DISTANCE: 0.2947150071461995
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6236, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3521, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [3/25] Loss: 0.0037044761702418327, RECONS: 0.003401656576897949, DISTANCE: 0.30281955003738403
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [4/25] Loss: 0.003726719878613949, RECONS: 0.0034118031151592733, DISTANCE: 0.314916729927063
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3173, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [5/25] Loss: 0.003865720316146811, RECONS: 0.00354612215111653, DISTANCE: 0.31959813833236694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3358, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [6/25] Loss: 0.00381299460838948, RECONS: 0.003483867272734642, DISTANCE: 0.32912732873644146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3503, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8690, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [7/25] Loss: 0.0038255691179074347, RECONS: 0.0035002616932615638, DISTANCE: 0.3253074139356613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3583, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [8/25] Loss: 0.0038271886037869584, RECONS: 0.0035045974525726503, DISTANCE: 0.3225911325878567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [9/25] Loss: 0.003868411364965141, RECONS: 0.003546626423485577, DISTANCE: 0.3217849373817444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [10/25] Loss: 0.003869594455781308, RECONS: 0.0035504280716519465, DISTANCE: 0.3191663785414262
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4053, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [11/25] Loss: 0.003860652504954487, RECONS: 0.003540666541084647, DISTANCE: 0.3199859658877055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [12/25] Loss: 0.003854903607414319, RECONS: 0.003535139052054057, DISTANCE: 0.31976454991560715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4161, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [13/25] Loss: 0.003866427910647222, RECONS: 0.0035454095008649994, DISTANCE: 0.3210183892931257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4163, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [14/25] Loss: 0.0038778407499194143, RECONS: 0.003558820734421412, DISTANCE: 0.3190199851989746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8655, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [15/25] Loss: 0.003864368423819542, RECONS: 0.003545480838511139, DISTANCE: 0.3188875615596771
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8853, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [16/25] Loss: 0.0038482812370228417, RECONS: 0.0035317320212283555, DISTANCE: 0.31654918895048256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3768, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8680, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [17/25] Loss: 0.0038488899978498616, RECONS: 0.003532515916352471, DISTANCE: 0.3163740502463447
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [18/25] Loss: 0.0038403019456094817, RECONS: 0.003522207384536925, DISTANCE: 0.3180945358778301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8706, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [19/25] Loss: 0.003814455633983016, RECONS: 0.003495025367010385, DISTANCE: 0.3194302380084991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3202, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [20/25] Loss: 0.0038540403669079146, RECONS: 0.0035335503718150513, DISTANCE: 0.3204899685723441
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3311, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [21/25] Loss: 0.003850256431509148, RECONS: 0.003530432967553762, DISTANCE: 0.3198234330524098
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [22/25] Loss: 0.0038373376971677594, RECONS: 0.003518718477014614, DISTANCE: 0.31861918905506964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [23/25] Loss: 0.0038561219116672873, RECONS: 0.0035350529748635986, DISTANCE: 0.3210689028104146
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3758, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8550, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[148/300] [24/25] Loss: 0.003918108213692904, RECONS: 0.003572046831250191, DISTANCE: 0.3460613489151001
Test[148/300] [0/2] Loss: 0.004319323692470789, RECONS: 0.0037342794239521027, DISTANCE: 0.5850443840026855
Test[148/300] [1/2] Loss: 0.004435091512277722, RECONS: 0.003506135195493698, DISTANCE: 0.9289563298225403
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3975, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [0/25] Loss: 0.0040850588120520115, RECONS: 0.0037856376729905605, DISTANCE: 0.2994213104248047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4090, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [1/25] Loss: 0.003855045302771032, RECONS: 0.003554031951352954, DISTANCE: 0.3010134696960449
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [2/25] Loss: 0.003856996074318886, RECONS: 0.0035385709876815477, DISTANCE: 0.31842517852783203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4102, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [3/25] Loss: 0.00380388624034822, RECONS: 0.003496611607261002, DISTANCE: 0.3072746992111206
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8464, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [4/25] Loss: 0.0038238394074141977, RECONS: 0.003508791932836175, DISTANCE: 0.3150475263595581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [5/25] Loss: 0.0037865345754350224, RECONS: 0.0034760297276079655, DISTANCE: 0.31050487359364826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8559, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [6/25] Loss: 0.0039575444201805764, RECONS: 0.0036423374632639544, DISTANCE: 0.3152069704873221
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [7/25] Loss: 0.00404810972395353, RECONS: 0.0037311682826839387, DISTANCE: 0.31694144010543823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3767, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [8/25] Loss: 0.003969920152384374, RECONS: 0.003650553007092741, DISTANCE: 0.3193671438429091
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4109, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [9/25] Loss: 0.00400992592331022, RECONS: 0.0036909869406372307, DISTANCE: 0.31893899440765383
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [10/25] Loss: 0.003951317038048397, RECONS: 0.003632748880508271, DISTANCE: 0.31856816465204413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5924, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [11/25] Loss: 0.00394365480557705, RECONS: 0.003626922882782916, DISTANCE: 0.31673192977905273
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [12/25] Loss: 0.0039241679836637695, RECONS: 0.00360698877977064, DISTANCE: 0.31717920303344727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3929, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8636, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [13/25] Loss: 0.003956588700280658, RECONS: 0.003639492888136634, DISTANCE: 0.31709582465035574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [14/25] Loss: 0.003919259210427602, RECONS: 0.0036029933486133813, DISTANCE: 0.316265877087911
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6212, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3942, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8761, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [15/25] Loss: 0.0039496780664194375, RECONS: 0.003634698790847324, DISTANCE: 0.31497927755117416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3788, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [16/25] Loss: 0.003964672769036363, RECONS: 0.003649001050850048, DISTANCE: 0.31567171741934386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6243, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3516, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [17/25] Loss: 0.003972038135139478, RECONS: 0.003656693139216966, DISTANCE: 0.31534498929977417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6191, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [18/25] Loss: 0.003947015239023848, RECONS: 0.003630076939436166, DISTANCE: 0.3169382936076114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8646, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [19/25] Loss: 0.003990402678027749, RECONS: 0.0036736158304847776, DISTANCE: 0.3167868494987488
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2961, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [20/25] Loss: 0.004074422930855127, RECONS: 0.003758177127955215, DISTANCE: 0.3162457999728975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [21/25] Loss: 0.004067207242108204, RECONS: 0.00374909435314211, DISTANCE: 0.31811289353804156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [22/25] Loss: 0.004047458475131703, RECONS: 0.0037303852403293486, DISTANCE: 0.3170732415240744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [23/25] Loss: 0.004061067835815872, RECONS: 0.0037413373356685042, DISTANCE: 0.3197305003801982
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3517, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[149/300] [24/25] Loss: 0.004085566150024533, RECONS: 0.0037437750305980445, DISTANCE: 0.3417911148071289
Test[149/300] [0/2] Loss: 0.004400342702865601, RECONS: 0.003696095198392868, DISTANCE: 0.7042474746704102
Test[149/300] [1/2] Loss: 0.004551165737211704, RECONS: 0.003519180929288268, DISTANCE: 1.031984806060791
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [0/25] Loss: 0.0037389725912362337, RECONS: 0.003432569094002247, DISTANCE: 0.30640339851379395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8726, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [1/25] Loss: 0.003626282326877117, RECONS: 0.0033110883086919785, DISTANCE: 0.3151940107345581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3338, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [2/25] Loss: 0.0037181649822741747, RECONS: 0.003397219115868211, DISTANCE: 0.3209458589553833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3500, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [3/25] Loss: 0.003807349072303623, RECONS: 0.0034897481673397124, DISTANCE: 0.31760087609291077
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3508, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [4/25] Loss: 0.003751878160983324, RECONS: 0.0034295471850782633, DISTANCE: 0.32233095169067383
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3386, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [5/25] Loss: 0.0037373583763837814, RECONS: 0.0034149670973420143, DISTANCE: 0.3223912517229716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [6/25] Loss: 0.003847672071840082, RECONS: 0.0035251789460224764, DISTANCE: 0.3224930763244629
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3739, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8550, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [7/25] Loss: 0.00384474138263613, RECONS: 0.003519288293318823, DISTANCE: 0.3254530429840088
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [8/25] Loss: 0.0037994807223892873, RECONS: 0.0034749460561821857, DISTANCE: 0.32453462812635636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [9/25] Loss: 0.003811100800521672, RECONS: 0.003488844633102417, DISTANCE: 0.32225613594055175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [10/25] Loss: 0.003877838925373825, RECONS: 0.0035565750334750523, DISTANCE: 0.32126387682828034
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8753, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [11/25] Loss: 0.0038853952234300473, RECONS: 0.0035635363116549947, DISTANCE: 0.3218588928381602
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8580, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [12/25] Loss: 0.003853558598516079, RECONS: 0.0035329881983880815, DISTANCE: 0.3205703772031344
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4164, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [13/25] Loss: 0.003908513612779123, RECONS: 0.003589465482426541, DISTANCE: 0.31904812370027813
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5933, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [14/25] Loss: 0.003937702812254429, RECONS: 0.0036175955397387345, DISTANCE: 0.3201072613398234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [15/25] Loss: 0.0039238684985321015, RECONS: 0.003599401708925143, DISTANCE: 0.324466772377491
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [16/25] Loss: 0.0039004221120301414, RECONS: 0.003575627062031451, DISTANCE: 0.32479503575493307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3670, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [17/25] Loss: 0.0038900808431208134, RECONS: 0.0035632661181605524, DISTANCE: 0.3268147044711643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3559, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8794, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [18/25] Loss: 0.0038735291822568365, RECONS: 0.0035468086747354583, DISTANCE: 0.32672048869885895
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3836, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [19/25] Loss: 0.0038460233947262166, RECONS: 0.0035194110125303267, DISTANCE: 0.3266123652458191
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [20/25] Loss: 0.0038346256062920603, RECONS: 0.0035046704911759923, DISTANCE: 0.3299551010131836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [21/25] Loss: 0.0038529387569393625, RECONS: 0.003522063944150101, DISTANCE: 0.33087480610067194
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3396, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [22/25] Loss: 0.003838837146759033, RECONS: 0.003507276541431961, DISTANCE: 0.3315606013588283
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3443, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [23/25] Loss: 0.00383912263593326, RECONS: 0.0035077410478455326, DISTANCE: 0.3313815842072169
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.2784, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3366, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8829, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[150/300] [24/25] Loss: 0.0038694721274077893, RECONS: 0.003522421484813094, DISTANCE: 0.347050633430481
Test[150/300] [0/2] Loss: 0.004176951479166746, RECONS: 0.0035598650574684143, DISTANCE: 0.6170862913131714
Test[150/300] [1/2] Loss: 0.004411527421325445, RECONS: 0.0033603396732360125, DISTANCE: 1.0511876940727234
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3337, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [0/25] Loss: 0.003576236544176936, RECONS: 0.0032558459788560867, DISTANCE: 0.32039058208465576
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8644, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [1/25] Loss: 0.0039066512836143374, RECONS: 0.0035730147501453757, DISTANCE: 0.33363664150238037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3584, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [2/25] Loss: 0.0037689982758214078, RECONS: 0.003432183681676785, DISTANCE: 0.33681464195251465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [3/25] Loss: 0.00395933206891641, RECONS: 0.003634981228969991, DISTANCE: 0.32435089349746704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3565, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8660, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [4/25] Loss: 0.003882974665611982, RECONS: 0.003549656551331282, DISTANCE: 0.3333181381225586
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4054, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [5/25] Loss: 0.0038746348194157085, RECONS: 0.003547562208647529, DISTANCE: 0.3270726402600606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4073, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8926, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [6/25] Loss: 0.0038818802484976394, RECONS: 0.0035582572620894226, DISTANCE: 0.3236229930605207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4278, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [7/25] Loss: 0.0038862860237713903, RECONS: 0.0035652191436383873, DISTANCE: 0.32106687128543854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [8/25] Loss: 0.003958597184262342, RECONS: 0.0036373129890610776, DISTANCE: 0.3212842014100816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8758, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [9/25] Loss: 0.003984675346873701, RECONS: 0.003663447848521173, DISTANCE: 0.321227502822876
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3408, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8689, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [10/25] Loss: 0.00390743227167563, RECONS: 0.003586904505606402, DISTANCE: 0.32052777030251245
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6286, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3205, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [11/25] Loss: 0.0039057494529212513, RECONS: 0.003586533188354224, DISTANCE: 0.3192162712415059
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8770, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [12/25] Loss: 0.003962374363954251, RECONS: 0.0036416484508663416, DISTANCE: 0.32072592698610747
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3088, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [13/25] Loss: 0.004007137081186686, RECONS: 0.0036858605121129324, DISTANCE: 0.3212765710694449
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [14/25] Loss: 0.0039855488886435825, RECONS: 0.0036643856360266606, DISTANCE: 0.3211632490158081
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3408, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8358, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [15/25] Loss: 0.003984042588854209, RECONS: 0.0036623940395656973, DISTANCE: 0.3216485530138016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [16/25] Loss: 0.003967452068429659, RECONS: 0.0036433968583450597, DISTANCE: 0.3240552088793586
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [17/25] Loss: 0.00396976618665374, RECONS: 0.0036455915671669776, DISTANCE: 0.324174616071913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3796, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [18/25] Loss: 0.003950883438320537, RECONS: 0.0036255486897732083, DISTANCE: 0.3253347434495625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3982, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [19/25] Loss: 0.003972304542548955, RECONS: 0.0036461080424487593, DISTANCE: 0.3261964857578278
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3768, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [20/25] Loss: 0.003983325746265196, RECONS: 0.003655276516275037, DISTANCE: 0.32804921127500986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3670, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8685, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [21/25] Loss: 0.00398737560449676, RECONS: 0.0036600012946027246, DISTANCE: 0.3273742903362621
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8700, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [22/25] Loss: 0.003966842778027058, RECONS: 0.0036402552024177885, DISTANCE: 0.3265875577926636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8737, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [23/25] Loss: 0.00396042467521814, RECONS: 0.0036343466102456055, DISTANCE: 0.32607804735501605
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[151/300] [24/25] Loss: 0.003981093084439636, RECONS: 0.00363660310395062, DISTANCE: 0.3444899606704712
Test[151/300] [0/2] Loss: 0.004301468376070261, RECONS: 0.00363691127859056, DISTANCE: 0.6645569801330566
Test[151/300] [1/2] Loss: 0.004551911493763328, RECONS: 0.0034319570986554027, DISTANCE: 1.1199543476104736
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [0/25] Loss: 0.003497534431517124, RECONS: 0.0032177928369492292, DISTANCE: 0.27974164485931396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6242, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4058, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8691, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [1/25] Loss: 0.004246716387569904, RECONS: 0.003965203533880413, DISTANCE: 0.2815127968788147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [2/25] Loss: 0.004009516366447012, RECONS: 0.0037164308596402407, DISTANCE: 0.2930854558944702
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3500, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [3/25] Loss: 0.0038729527732357383, RECONS: 0.0035787824890576303, DISTANCE: 0.29417023062705994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3176, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [4/25] Loss: 0.004119539726525545, RECONS: 0.003821593476459384, DISTANCE: 0.29794623851776125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [5/25] Loss: 0.0040561348432675, RECONS: 0.0037578860064968467, DISTANCE: 0.298248827457428
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3305, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [6/25] Loss: 0.004088579643783825, RECONS: 0.0037881069750125918, DISTANCE: 0.30047266823904856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [7/25] Loss: 0.004021547472802922, RECONS: 0.0037161903455853462, DISTANCE: 0.30535711348056793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5948, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [8/25] Loss: 0.003999309769521157, RECONS: 0.003687633770621485, DISTANCE: 0.31167598565419513
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4283, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5880, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [9/25] Loss: 0.004021346522495151, RECONS: 0.003709597745910287, DISTANCE: 0.311748743057251
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4272, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5890, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [10/25] Loss: 0.004086789802055468, RECONS: 0.0037689449858259072, DISTANCE: 0.31784480268305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4205, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [11/25] Loss: 0.00405133042174081, RECONS: 0.0037312248023226857, DISTANCE: 0.3201056122779846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3905, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8543, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [12/25] Loss: 0.0040247807315049264, RECONS: 0.00370479253335641, DISTANCE: 0.3199881865428044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6194, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [13/25] Loss: 0.0041156882985628074, RECONS: 0.003791745685573135, DISTANCE: 0.3239426016807556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3591, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8825, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [14/25] Loss: 0.004076407477259636, RECONS: 0.003753023020302256, DISTANCE: 0.32338444391886395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [15/25] Loss: 0.004092775488970801, RECONS: 0.00376997199782636, DISTANCE: 0.32280346751213074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6217, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8781, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [16/25] Loss: 0.004082026014871457, RECONS: 0.00375809968339608, DISTANCE: 0.32392630857579846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8728, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [17/25] Loss: 0.004061764520075586, RECONS: 0.0037371318192324704, DISTANCE: 0.3246326711442735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8826, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [18/25] Loss: 0.004048951166240792, RECONS: 0.0037242366295111807, DISTANCE: 0.324714510064376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3443, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [19/25] Loss: 0.004036298312712461, RECONS: 0.003712120302952826, DISTANCE: 0.3241779863834381
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3545, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [20/25] Loss: 0.004026488245775302, RECONS: 0.0037012743497533457, DISTANCE: 0.32521386941274005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8460, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [21/25] Loss: 0.004003848065622151, RECONS: 0.003680445867675272, DISTANCE: 0.3234021717851812
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3902, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [22/25] Loss: 0.004032896700031732, RECONS: 0.0037098357696896014, DISTANCE: 0.32306091163469397
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [23/25] Loss: 0.004023203868806983, RECONS: 0.003699800494359806, DISTANCE: 0.32340335845947266
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3512, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[152/300] [24/25] Loss: 0.0040332458261400465, RECONS: 0.0036941564921289683, DISTANCE: 0.33908931255340574
Test[152/300] [0/2] Loss: 0.004142968449741602, RECONS: 0.00331794167868793, DISTANCE: 0.8250267505645752
Test[152/300] [1/2] Loss: 0.004242720548063517, RECONS: 0.0031693594064563513, DISTANCE: 1.0733610391616821
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8797, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [0/25] Loss: 0.003772267373278737, RECONS: 0.0034719817340373993, DISTANCE: 0.30028557777404785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3566, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [1/25] Loss: 0.00367906189057976, RECONS: 0.0033678547479212284, DISTANCE: 0.311207115650177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3305, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8794, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [2/25] Loss: 0.0038265358501424394, RECONS: 0.003519234092285236, DISTANCE: 0.30730171998341876
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3312, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [3/25] Loss: 0.0037974321749061346, RECONS: 0.0034970645792782307, DISTANCE: 0.3003675639629364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2801, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [4/25] Loss: 0.003723800973966718, RECONS: 0.003411783929914236, DISTANCE: 0.312017035484314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2827, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8753, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [5/25] Loss: 0.003707577668440839, RECONS: 0.0033981578114132085, DISTANCE: 0.30941983064015705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3228, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8691, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [6/25] Loss: 0.003767933463677764, RECONS: 0.0034597961764250484, DISTANCE: 0.30813724654061453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3300, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [7/25] Loss: 0.003908580489223823, RECONS: 0.0035976956132799387, DISTANCE: 0.31088486313819885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [8/25] Loss: 0.003926627415542801, RECONS: 0.0036167695911394227, DISTANCE: 0.3098578055699666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6291, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5924, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [9/25] Loss: 0.004198671062476933, RECONS: 0.0038838540203869343, DISTANCE: 0.3148170351982117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4012, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8746, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [10/25] Loss: 0.00412500757639381, RECONS: 0.0038116375958039002, DISTANCE: 0.31336996772072534
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3736, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [11/25] Loss: 0.004065732762683183, RECONS: 0.00375220375523592, DISTANCE: 0.31352898478507996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3646, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [12/25] Loss: 0.004065374754225979, RECONS: 0.0037512310708944616, DISTANCE: 0.31414366685427153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3317, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8712, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [13/25] Loss: 0.004009570327720472, RECONS: 0.003691419626453093, DISTANCE: 0.31815068210874287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5956, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3478, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8848, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6192, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [14/25] Loss: 0.004055494287361701, RECONS: 0.0037367457523941995, DISTANCE: 0.3187485059102376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3598, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [15/25] Loss: 0.003991660807514563, RECONS: 0.0036726802063640207, DISTANCE: 0.3189805746078491
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3759, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8645, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [16/25] Loss: 0.004000090665238745, RECONS: 0.0036797398728701997, DISTANCE: 0.3203507661819458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3692, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8522, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5971, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [17/25] Loss: 0.003968036604217357, RECONS: 0.0036485777107170885, DISTANCE: 0.31945886876848006
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [18/25] Loss: 0.003966200214467551, RECONS: 0.0036486508202199872, DISTANCE: 0.3175493604258487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [19/25] Loss: 0.003953939571511, RECONS: 0.0036354247597046195, DISTANCE: 0.3185147762298584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4111, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [20/25] Loss: 0.003949613487791447, RECONS: 0.0036308143088327987, DISTANCE: 0.31879914374578566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3745, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [21/25] Loss: 0.003918541934002529, RECONS: 0.0035998959369449453, DISTANCE: 0.3186459649692882
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3617, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [22/25] Loss: 0.0038985881205324245, RECONS: 0.0035814517886256394, DISTANCE: 0.3171362980552342
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3644, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8904, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [23/25] Loss: 0.003893013180155928, RECONS: 0.0035752918726454177, DISTANCE: 0.31772127747535706
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[153/300] [24/25] Loss: 0.0038917438220232724, RECONS: 0.003559032427147031, DISTANCE: 0.33271136283874514
Test[153/300] [0/2] Loss: 0.004396974574774504, RECONS: 0.003371506929397583, DISTANCE: 1.0254675149917603
Test[153/300] [1/2] Loss: 0.004488153615966439, RECONS: 0.0031674227211624384, DISTANCE: 1.320730745792389
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3703, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [0/25] Loss: 0.003495497163385153, RECONS: 0.0031158938072621822, DISTANCE: 0.37960338592529297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [1/25] Loss: 0.0038181717973202467, RECONS: 0.003477401565760374, DISTANCE: 0.34077024459838867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [2/25] Loss: 0.0038181010944147906, RECONS: 0.0034926674949626126, DISTANCE: 0.32543357213338214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8766, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [3/25] Loss: 0.0036627724184654653, RECONS: 0.003338425187394023, DISTANCE: 0.32434719800949097
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3588, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8889, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [4/25] Loss: 0.003704856289550662, RECONS: 0.003381558880209923, DISTANCE: 0.3232973575592041
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3390, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [5/25] Loss: 0.00370073935482651, RECONS: 0.0033751302010690174, DISTANCE: 0.32560908794403076
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [6/25] Loss: 0.003718389564060739, RECONS: 0.0033907353478882995, DISTANCE: 0.32765415736607145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3618, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5928, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [7/25] Loss: 0.00370376740465872, RECONS: 0.003375211643287912, DISTANCE: 0.328555703163147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [8/25] Loss: 0.003702334335280789, RECONS: 0.003369370966942774, DISTANCE: 0.33296332094404435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3353, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [9/25] Loss: 0.003669696091674268, RECONS: 0.00333461684640497, DISTANCE: 0.33507920503616334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3265, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [10/25] Loss: 0.003679602618583224, RECONS: 0.003345135154879906, DISTANCE: 0.334467432715676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3380, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [11/25] Loss: 0.003693867241963744, RECONS: 0.003358102675216893, DISTANCE: 0.3357645372549693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [12/25] Loss: 0.0036561874529490103, RECONS: 0.0033233559941156553, DISTANCE: 0.3328314286011916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [13/25] Loss: 0.0036416491659890327, RECONS: 0.0033092283244643894, DISTANCE: 0.33242080892835346
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [14/25] Loss: 0.0036031308894356093, RECONS: 0.003274294113119443, DISTANCE: 0.3288367509841919
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3558, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8745, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [15/25] Loss: 0.0036128791834926233, RECONS: 0.003284649981651455, DISTANCE: 0.3282291814684868
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3859, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8518, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [16/25] Loss: 0.0036184732692644875, RECONS: 0.0032897437922656536, DISTANCE: 0.32872946122113395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4070, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8596, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [17/25] Loss: 0.0036281361244618893, RECONS: 0.003300724822717408, DISTANCE: 0.32741128073798287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8644, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [18/25] Loss: 0.0036504332613396017, RECONS: 0.0033198201318124405, DISTANCE: 0.33061311119481135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [19/25] Loss: 0.0036685236264020205, RECONS: 0.003339062607847154, DISTANCE: 0.32946100234985354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [20/25] Loss: 0.003706477338536864, RECONS: 0.0033736804588919596, DISTANCE: 0.3327968574705578
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [21/25] Loss: 0.0037296208849346094, RECONS: 0.0033964109501208773, DISTANCE: 0.333209904757413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4147, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [22/25] Loss: 0.003722734455748097, RECONS: 0.0033899346143817124, DISTANCE: 0.33279980783877167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [23/25] Loss: 0.0037431496796974293, RECONS: 0.0034109352952024588, DISTANCE: 0.3322143604358037
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[154/300] [24/25] Loss: 0.003761739498004317, RECONS: 0.0034149437677115204, DISTANCE: 0.34679569721221926
Test[154/300] [0/2] Loss: 0.003800240345299244, RECONS: 0.0031944639049470425, DISTANCE: 0.6057764291763306
Test[154/300] [1/2] Loss: 0.004159793257713318, RECONS: 0.003099602763541043, DISTANCE: 1.060190498828888
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [0/25] Loss: 0.004144391044974327, RECONS: 0.0038358233869075775, DISTANCE: 0.3085674047470093
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3796, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [1/25] Loss: 0.003732428653165698, RECONS: 0.0034041417529806495, DISTANCE: 0.3282868266105652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3711, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [2/25] Loss: 0.003847661272933086, RECONS: 0.0035207580464581647, DISTANCE: 0.32690314451853436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3674, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [3/25] Loss: 0.003832668997347355, RECONS: 0.0035005558747798204, DISTANCE: 0.3321130573749542
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [4/25] Loss: 0.0037683052476495506, RECONS: 0.003422074904665351, DISTANCE: 0.34623026847839355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3773, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [5/25] Loss: 0.0037719515773157277, RECONS: 0.0034287754291047654, DISTANCE: 0.34317608674367267
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [6/25] Loss: 0.0037745499118630376, RECONS: 0.003437801696626203, DISTANCE: 0.33674815722874235
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [7/25] Loss: 0.0038315825222525746, RECONS: 0.0034942606871481985, DISTANCE: 0.33732178807258606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8638, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [8/25] Loss: 0.0037837125257485444, RECONS: 0.003448607555280129, DISTANCE: 0.33510491583082413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [9/25] Loss: 0.003781227208673954, RECONS: 0.003442812245339155, DISTANCE: 0.33841490745544434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3766, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [10/25] Loss: 0.0038134945048527284, RECONS: 0.003476255192336711, DISTANCE: 0.3372392546046864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3381, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [11/25] Loss: 0.003773961196808765, RECONS: 0.0034395037218928337, DISTANCE: 0.3344574272632599
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3085, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8758, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6260, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [12/25] Loss: 0.003792918591688459, RECONS: 0.003457109569213711, DISTANCE: 0.3358089648760282
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6246, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [13/25] Loss: 0.0038164276463378754, RECONS: 0.0034794749891651528, DISTANCE: 0.3369526096752712
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3277, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [14/25] Loss: 0.0038095402686546247, RECONS: 0.0034751034962634247, DISTANCE: 0.3344367186228434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3590, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [15/25] Loss: 0.0038085450942162424, RECONS: 0.003475967110716738, DISTANCE: 0.3325779289007187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3601, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [16/25] Loss: 0.0037798667737447165, RECONS: 0.0034479204674854, DISTANCE: 0.3319462537765503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5906, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [17/25] Loss: 0.0038213179213926196, RECONS: 0.003489134859086739, DISTANCE: 0.33218301004833645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [18/25] Loss: 0.0038462446046699035, RECONS: 0.0035162818814186672, DISTANCE: 0.32996267394015666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [19/25] Loss: 0.0038269771030172706, RECONS: 0.003497799229808152, DISTANCE: 0.3291778266429901
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [20/25] Loss: 0.0038044624074938752, RECONS: 0.0034765734758582852, DISTANCE: 0.3278888918104626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3525, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [21/25] Loss: 0.003830861427228559, RECONS: 0.0035042822974818673, DISTANCE: 0.3265790885145014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [22/25] Loss: 0.003824587222998557, RECONS: 0.0034984135696583467, DISTANCE: 0.32617361130921735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8718, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [23/25] Loss: 0.0038201294955797493, RECONS: 0.003493937498812253, DISTANCE: 0.3261919567982356
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3961, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6217, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3720, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8815, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[155/300] [24/25] Loss: 0.0038432723842561243, RECONS: 0.003502000952139497, DISTANCE: 0.341271390914917
Test[155/300] [0/2] Loss: 0.004619952291250229, RECONS: 0.0035088341683149338, DISTANCE: 1.1111180782318115
Test[155/300] [1/2] Loss: 0.004683620296418667, RECONS: 0.0032680410658940673, DISTANCE: 1.4155791401863098
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3611, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8743, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [0/25] Loss: 0.0043320972472429276, RECONS: 0.004053327254951, DISTANCE: 0.27876996994018555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [1/25] Loss: 0.0038948890287429094, RECONS: 0.0035839234478771687, DISTANCE: 0.31096553802490234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8379, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [2/25] Loss: 0.003758140141144395, RECONS: 0.0034498938669761023, DISTANCE: 0.3082462549209595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [3/25] Loss: 0.00369156216038391, RECONS: 0.0033798819640651345, DISTANCE: 0.3116801679134369
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8518, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [4/25] Loss: 0.0036886080633848906, RECONS: 0.0033744117710739372, DISTANCE: 0.3141962766647339
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5939, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [5/25] Loss: 0.0037884957855567336, RECONS: 0.0034756645327433944, DISTANCE: 0.31283122301101685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3364, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8580, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [6/25] Loss: 0.0037302084799323764, RECONS: 0.003423061321622559, DISTANCE: 0.30714714527130127
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8409, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [7/25] Loss: 0.003694243496283889, RECONS: 0.00338859113981016, DISTANCE: 0.30565235018730164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5962, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8329, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [8/25] Loss: 0.0036666335589769813, RECONS: 0.003356997984358006, DISTANCE: 0.30963557296329075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8406, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5931, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [9/25] Loss: 0.0036746928934007885, RECONS: 0.0033579142997041344, DISTANCE: 0.31677860021591187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3734, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [10/25] Loss: 0.0036862110084092074, RECONS: 0.0033681164707311177, DISTANCE: 0.3180945461446589
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [11/25] Loss: 0.0036632040476736925, RECONS: 0.0033455949548321464, DISTANCE: 0.31760910153388977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3401, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [12/25] Loss: 0.0036533177794458773, RECONS: 0.003336406975554732, DISTANCE: 0.31691080790299636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3283, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8730, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [13/25] Loss: 0.0037508191308006644, RECONS: 0.003430629531586809, DISTANCE: 0.32018959522247314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3174, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [14/25] Loss: 0.0037657710257917643, RECONS: 0.0034464005070428054, DISTANCE: 0.3193705081939697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3486, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8661, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [15/25] Loss: 0.0037404273316496983, RECONS: 0.003422360139666125, DISTANCE: 0.31806717813014984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3782, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8705, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [16/25] Loss: 0.0037041477831628393, RECONS: 0.0033878098954172697, DISTANCE: 0.31633787996628704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3949, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8490, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [17/25] Loss: 0.003729356025966505, RECONS: 0.003408863454953664, DISTANCE: 0.32049257225460476
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4134, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [18/25] Loss: 0.003737836929136201, RECONS: 0.003418670146186885, DISTANCE: 0.31916678579230057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3773, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [19/25] Loss: 0.003718060441315174, RECONS: 0.0034000431071035562, DISTANCE: 0.3180173337459564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8701, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [20/25] Loss: 0.0037275843898810094, RECONS: 0.0034080304072371553, DISTANCE: 0.31955398264385404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3627, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [21/25] Loss: 0.0037144347390329294, RECONS: 0.0033959697783839974, DISTANCE: 0.31846496191891754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8665, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [22/25] Loss: 0.0037179600710616164, RECONS: 0.003399664171687935, DISTANCE: 0.31829590382783307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [23/25] Loss: 0.0037071163048191615, RECONS: 0.0033889086334966123, DISTANCE: 0.31820767124493915
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[156/300] [24/25] Loss: 0.0037129928451031446, RECONS: 0.0033785339258611204, DISTANCE: 0.3344589138031006
Test[156/300] [0/2] Loss: 0.003958188928663731, RECONS: 0.003275791183114052, DISTANCE: 0.682397723197937
Test[156/300] [1/2] Loss: 0.004249365301802754, RECONS: 0.0030815089121460915, DISTANCE: 1.1678562760353088
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [0/25] Loss: 0.0036505574826151133, RECONS: 0.0033054566010832787, DISTANCE: 0.34510087966918945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8569, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [1/25] Loss: 0.0034324773587286472, RECONS: 0.0030971108935773373, DISTANCE: 0.33536648750305176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6282, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [2/25] Loss: 0.0036927256733179092, RECONS: 0.003361127804964781, DISTANCE: 0.3315979242324829
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3526, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [3/25] Loss: 0.0037241309764795005, RECONS: 0.00339763454394415, DISTANCE: 0.3264964520931244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3442, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [4/25] Loss: 0.003808271372690797, RECONS: 0.003477809438481927, DISTANCE: 0.3304619550704956
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3120, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6250, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [5/25] Loss: 0.0037995585007593036, RECONS: 0.0034671429311856627, DISTANCE: 0.3324155807495117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3288, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8650, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [6/25] Loss: 0.0037119678288166013, RECONS: 0.003385205087917192, DISTANCE: 0.3267627613885062
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3483, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [7/25] Loss: 0.0038089997542556375, RECONS: 0.003486012516077608, DISTANCE: 0.32298727333545685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8636, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [8/25] Loss: 0.0037749837566581038, RECONS: 0.003452575687939922, DISTANCE: 0.3224080933464898
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4093, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5924, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [9/25] Loss: 0.00381777654401958, RECONS: 0.003497693152166903, DISTANCE: 0.3200834274291992
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4229, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [10/25] Loss: 0.003825595284896818, RECONS: 0.003504449946128509, DISTANCE: 0.3211453611200506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [11/25] Loss: 0.0038135035041098795, RECONS: 0.003492511711859455, DISTANCE: 0.3209918141365051
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6239, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4111, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8921, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [12/25] Loss: 0.0038721859455108643, RECONS: 0.003551323701126071, DISTANCE: 0.3208622657335721
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3668, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [13/25] Loss: 0.0038510540699852364, RECONS: 0.0035295161651447415, DISTANCE: 0.3215379204068865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3488, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8790, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6294, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [14/25] Loss: 0.003869674416879813, RECONS: 0.003545373786861698, DISTANCE: 0.3243006547292074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3333, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8801, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [15/25] Loss: 0.0038822159403935075, RECONS: 0.003557130665285513, DISTANCE: 0.3250853046774864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3327, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [16/25] Loss: 0.003908064599861117, RECONS: 0.0035827663891455706, DISTANCE: 0.3252982251784381
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3524, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [17/25] Loss: 0.003929661897321542, RECONS: 0.0036058572069224385, DISTANCE: 0.32380469640096027
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3580, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [18/25] Loss: 0.003914472463197614, RECONS: 0.0035920465781696534, DISTANCE: 0.3224258924785413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4115, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5921, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [19/25] Loss: 0.003925520123448223, RECONS: 0.0036034822114743292, DISTANCE: 0.3220379114151001
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [20/25] Loss: 0.003933662803666223, RECONS: 0.003612092352427897, DISTANCE: 0.32157044183640254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4153, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [21/25] Loss: 0.003933377384038811, RECONS: 0.003614099103618752, DISTANCE: 0.31927827813408594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3981, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [22/25] Loss: 0.003928214169876731, RECONS: 0.0036099363401856112, DISTANCE: 0.31827782547992206
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [23/25] Loss: 0.003945798225079973, RECONS: 0.0036279825338472924, DISTANCE: 0.3178156912326813
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3490, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[157/300] [24/25] Loss: 0.003950124550610781, RECONS: 0.003613971034064889, DISTANCE: 0.3361535167694092
Test[157/300] [0/2] Loss: 0.004540337715297937, RECONS: 0.0035945770796388388, DISTANCE: 0.9457607269287109
Test[157/300] [1/2] Loss: 0.0045581471640616655, RECONS: 0.0032642593141645193, DISTANCE: 1.2938878536224365
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [0/25] Loss: 0.003733739722520113, RECONS: 0.0033904514275491238, DISTANCE: 0.3432881832122803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3423, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [1/25] Loss: 0.003544385079294443, RECONS: 0.0032241307199001312, DISTANCE: 0.3202543258666992
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5885, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3131, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8707, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [2/25] Loss: 0.004061007872223854, RECONS: 0.0037374719977378845, DISTANCE: 0.3235359191894531
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [3/25] Loss: 0.004085592809133232, RECONS: 0.0037591400905512273, DISTANCE: 0.32645273208618164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8681, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [4/25] Loss: 0.004046826763078571, RECONS: 0.0037216472905129195, DISTANCE: 0.3251794815063477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [5/25] Loss: 0.003935362212359905, RECONS: 0.0036085383811344704, DISTANCE: 0.3268238306045532
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4177, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5894, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [6/25] Loss: 0.003906779589929751, RECONS: 0.0035810183201517376, DISTANCE: 0.32576128414699007
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4370, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8534, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5897, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [7/25] Loss: 0.004000984423328191, RECONS: 0.0036809188313782215, DISTANCE: 0.32006560266017914
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4115, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [8/25] Loss: 0.004033977993660503, RECONS: 0.0037065868576367698, DISTANCE: 0.327391160859002
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [9/25] Loss: 0.004016092303209007, RECONS: 0.00368812158703804, DISTANCE: 0.3279707312583923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8794, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [10/25] Loss: 0.003980228148231452, RECONS: 0.0036528471814976497, DISTANCE: 0.327380971475081
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [11/25] Loss: 0.003983110480476171, RECONS: 0.0036592985270544887, DISTANCE: 0.3238119383653005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3414, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8746, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [12/25] Loss: 0.0040200891582152015, RECONS: 0.0036935237451241566, DISTANCE: 0.3265653940347525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3572, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8637, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [13/25] Loss: 0.004021892806382051, RECONS: 0.0036971066147089005, DISTANCE: 0.3247861777033125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [14/25] Loss: 0.004008694955458244, RECONS: 0.0036822385930766663, DISTANCE: 0.32645634810129803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3868, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [15/25] Loss: 0.004009179421700537, RECONS: 0.0036818802036577836, DISTANCE: 0.32729919999837875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3629, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [16/25] Loss: 0.0040047330891384795, RECONS: 0.0036806239445200738, DISTANCE: 0.32410912653979135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8702, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [17/25] Loss: 0.003994472816379534, RECONS: 0.0036697104029978314, DISTANCE: 0.32476239071951973
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3393, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [18/25] Loss: 0.0039634235374825565, RECONS: 0.003639160202031857, DISTANCE: 0.32426330917759943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3245, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8619, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6280, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [19/25] Loss: 0.003939653851557523, RECONS: 0.0036166298552416263, DISTANCE: 0.3230239748954773
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3027, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6244, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [20/25] Loss: 0.0039087950274170865, RECONS: 0.0035859958512619848, DISTANCE: 0.32279915469033377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [21/25] Loss: 0.0038722886344079266, RECONS: 0.0035499730994078245, DISTANCE: 0.32231550866907294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [22/25] Loss: 0.003877943391790209, RECONS: 0.0035534611518454294, DISTANCE: 0.3244822077129198
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3124, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [23/25] Loss: 0.003860752961675947, RECONS: 0.00353639696065026, DISTANCE: 0.32435597479343414
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8288, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[158/300] [24/25] Loss: 0.0038827462587505577, RECONS: 0.0035398478247225286, DISTANCE: 0.34289841175079344
Test[158/300] [0/2] Loss: 0.004200543276965618, RECONS: 0.003345869015902281, DISTANCE: 0.8546744585037231
Test[158/300] [1/2] Loss: 0.004347869427874684, RECONS: 0.003204078529961407, DISTANCE: 1.1437910199165344
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [0/25] Loss: 0.003857457311823964, RECONS: 0.003562087193131447, DISTANCE: 0.29537010192871094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [1/25] Loss: 0.0037108614342287183, RECONS: 0.003388834884390235, DISTANCE: 0.32202649116516113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [2/25] Loss: 0.0036076869970808425, RECONS: 0.00328556044648091, DISTANCE: 0.3221265474955241
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6220, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3513, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6191, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [3/25] Loss: 0.0036352581228129566, RECONS: 0.0033192785922437906, DISTANCE: 0.3159795105457306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8674, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [4/25] Loss: 0.003970042942091823, RECONS: 0.0036475135944783687, DISTANCE: 0.32252933979034426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3378, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8688, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [5/25] Loss: 0.003941469282532732, RECONS: 0.0036153007919589677, DISTANCE: 0.3261684775352478
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [6/25] Loss: 0.0039023796562105417, RECONS: 0.0035766142952655044, DISTANCE: 0.32576535429273334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5914, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [7/25] Loss: 0.004023053537821397, RECONS: 0.0036910963826812804, DISTANCE: 0.331957146525383
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8592, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5933, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [8/25] Loss: 0.003994084144425061, RECONS: 0.003661043036522137, DISTANCE: 0.3330410983827379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4043, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5910, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [9/25] Loss: 0.003943411284126341, RECONS: 0.003613001829944551, DISTANCE: 0.33040943145751955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4223, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [10/25] Loss: 0.003904590616002679, RECONS: 0.003576382211494175, DISTANCE: 0.32820839231664484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4040, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [11/25] Loss: 0.0038730872717375555, RECONS: 0.003543746715877205, DISTANCE: 0.32934054732322693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3989, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [12/25] Loss: 0.0038383616170344446, RECONS: 0.0035121043105251514, DISTANCE: 0.3262572930409358
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3368, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [13/25] Loss: 0.0038236423528620173, RECONS: 0.003496367234869727, DISTANCE: 0.3272750973701477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3651, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [14/25] Loss: 0.0038618766392270725, RECONS: 0.0035351089977969726, DISTANCE: 0.326767627398173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3081, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8735, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [15/25] Loss: 0.0038898468483239412, RECONS: 0.003563228456187062, DISTANCE: 0.32661838084459305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3431, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [16/25] Loss: 0.0038593114381108213, RECONS: 0.003533419591429479, DISTANCE: 0.3258918383542229
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [17/25] Loss: 0.003879413668376704, RECONS: 0.003555267467163503, DISTANCE: 0.32414619790183175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3611, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [18/25] Loss: 0.0038649347659788632, RECONS: 0.003543427937026871, DISTANCE: 0.3215068265011436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [19/25] Loss: 0.0038401572965085506, RECONS: 0.0035210598027333615, DISTANCE: 0.3190974950790405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3319, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [20/25] Loss: 0.003811256494373083, RECONS: 0.003490764292932692, DISTANCE: 0.32049219948904856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3185, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [21/25] Loss: 0.00382213973948224, RECONS: 0.003502203352664682, DISTANCE: 0.31993638385425915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [22/25] Loss: 0.0038111612160244713, RECONS: 0.0034912958457742047, DISTANCE: 0.3198653615039328
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3660, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [23/25] Loss: 0.003796676620064924, RECONS: 0.0034786237908216813, DISTANCE: 0.3180528183778127
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[159/300] [24/25] Loss: 0.0037915145419538023, RECONS: 0.0034555477276444436, DISTANCE: 0.33596680164337156
Test[159/300] [0/2] Loss: 0.0037258234806358814, RECONS: 0.003101986600086093, DISTANCE: 0.6238367557525635
Test[159/300] [1/2] Loss: 0.003924910211935639, RECONS: 0.0029921794775873423, DISTANCE: 0.9327305555343628
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [0/25] Loss: 0.0035585674922913313, RECONS: 0.003231688868254423, DISTANCE: 0.32687854766845703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8364, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [1/25] Loss: 0.003790521644987166, RECONS: 0.0034605185501277447, DISTANCE: 0.330003023147583
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3670, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [2/25] Loss: 0.0038283489799747863, RECONS: 0.003502586856484413, DISTANCE: 0.3257621129353841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3496, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [3/25] Loss: 0.0037686038413085043, RECONS: 0.0034449907834641635, DISTANCE: 0.3236130177974701
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [4/25] Loss: 0.0037286830134689807, RECONS: 0.003404667880386114, DISTANCE: 0.32401511669158933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8710, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [5/25] Loss: 0.0036938603734597564, RECONS: 0.003371931961737573, DISTANCE: 0.32192840178807575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [6/25] Loss: 0.003638791519084147, RECONS: 0.003321658287729536, DISTANCE: 0.3171332223074777
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [7/25] Loss: 0.0036601581377908587, RECONS: 0.0033389900054316968, DISTANCE: 0.32116810977458954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [8/25] Loss: 0.003630721734629737, RECONS: 0.003308735348077284, DISTANCE: 0.3219863573710124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4092, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [9/25] Loss: 0.0036147988634184004, RECONS: 0.00329559282399714, DISTANCE: 0.3192060112953186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6221, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [10/25] Loss: 0.0037456315476447344, RECONS: 0.003424547654999928, DISTANCE: 0.3210838599638505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8543, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [11/25] Loss: 0.0036857763576942184, RECONS: 0.0033662665518932045, DISTANCE: 0.3195097843805949
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3457, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8719, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [12/25] Loss: 0.003700901772110508, RECONS: 0.0033794392724163257, DISTANCE: 0.3214624845064603
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3124, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [13/25] Loss: 0.0036681171373597215, RECONS: 0.0033405125640066607, DISTANCE: 0.327604557786669
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3261, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [14/25] Loss: 0.0037083871041735015, RECONS: 0.0033810295009364683, DISTANCE: 0.3273575941721598
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3176, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [15/25] Loss: 0.0036984698235755786, RECONS: 0.0033709412964526564, DISTANCE: 0.32752852141857147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [16/25] Loss: 0.0036867595798171617, RECONS: 0.0033606321496122025, DISTANCE: 0.32612741694730873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3652, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [17/25] Loss: 0.003729660697798762, RECONS: 0.0034003107705050046, DISTANCE: 0.32934991518656415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8559, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [18/25] Loss: 0.0037115857152170257, RECONS: 0.003382282270314662, DISTANCE: 0.3293034277464214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [19/25] Loss: 0.0037278391420841215, RECONS: 0.0033984604640863838, DISTANCE: 0.32937867045402525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8598, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [20/25] Loss: 0.003722216257648099, RECONS: 0.0033932904646332774, DISTANCE: 0.32892578556424096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3400, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [21/25] Loss: 0.0037157262400300665, RECONS: 0.0033882197352464905, DISTANCE: 0.3275064934383739
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [22/25] Loss: 0.0037136726061125164, RECONS: 0.003386953248358939, DISTANCE: 0.3267193410707557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [23/25] Loss: 0.003698015216893206, RECONS: 0.0033732504040623703, DISTANCE: 0.32476479808489483
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3759, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[160/300] [24/25] Loss: 0.003712670598179102, RECONS: 0.0033733300864696504, DISTANCE: 0.3393405055999756
Test[160/300] [0/2] Loss: 0.00428367592394352, RECONS: 0.0033215992152690887, DISTANCE: 0.9620764255523682
Test[160/300] [1/2] Loss: 0.0045179883018136024, RECONS: 0.0031734255608171225, DISTANCE: 1.3445625305175781
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8634, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [0/25] Loss: 0.0035754519049078226, RECONS: 0.0032390260603278875, DISTANCE: 0.33642578125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [1/25] Loss: 0.0032023672247305512, RECONS: 0.0028984283562749624, DISTANCE: 0.3039388656616211
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3909, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [2/25] Loss: 0.003587663716947039, RECONS: 0.0032536272580424943, DISTANCE: 0.33403650919596356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3973, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [3/25] Loss: 0.0036613487754948437, RECONS: 0.0033283400116488338, DISTANCE: 0.3330087661743164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [4/25] Loss: 0.003622664278373122, RECONS: 0.0032877645455300806, DISTANCE: 0.33489973545074464
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8664, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [5/25] Loss: 0.003650945999349157, RECONS: 0.003317170931647221, DISTANCE: 0.33377506335576373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3517, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [6/25] Loss: 0.0036240952488567147, RECONS: 0.0032957603356667925, DISTANCE: 0.3283348934991019
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [7/25] Loss: 0.0036543062597047538, RECONS: 0.0033277913462370634, DISTANCE: 0.3265148848295212
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8751, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [8/25] Loss: 0.003693375193203489, RECONS: 0.0033709369082417753, DISTANCE: 0.3224382797876994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3501, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8639, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [9/25] Loss: 0.003642928902991116, RECONS: 0.003320640535093844, DISTANCE: 0.32228835821151736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3625, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [10/25] Loss: 0.0036096048160371456, RECONS: 0.0032899701248177075, DISTANCE: 0.3196346868168224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3652, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [11/25] Loss: 0.0035887330498856804, RECONS: 0.0032703809556551278, DISTANCE: 0.3183520932992299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [12/25] Loss: 0.0035814180647811065, RECONS: 0.0032620571482066926, DISTANCE: 0.3193609072611882
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [13/25] Loss: 0.003585758402810565, RECONS: 0.00326551723160914, DISTANCE: 0.32024117027010235
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8701, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [14/25] Loss: 0.003576859412714839, RECONS: 0.003257326952492197, DISTANCE: 0.3195324500401815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3679, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8596, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [15/25] Loss: 0.003569995751604438, RECONS: 0.0032483690592925996, DISTANCE: 0.3216266855597496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3684, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [16/25] Loss: 0.0035963043680085857, RECONS: 0.0032751089619363054, DISTANCE: 0.32119539905996886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8650, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [17/25] Loss: 0.003608470963728097, RECONS: 0.003286363906227052, DISTANCE: 0.3221070435312059
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8754, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [18/25] Loss: 0.003618512020789479, RECONS: 0.003295481413308727, DISTANCE: 0.32303059101104736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3811, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8762, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [19/25] Loss: 0.0036231820238754155, RECONS: 0.003298799495678395, DISTANCE: 0.32438250780105593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3768, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [20/25] Loss: 0.003608825971328077, RECONS: 0.003283190463359157, DISTANCE: 0.32563548996334984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3763, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [21/25] Loss: 0.003607343257912858, RECONS: 0.0032821115508506245, DISTANCE: 0.32523169300772925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3552, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [22/25] Loss: 0.003598623696471686, RECONS: 0.00327477700319951, DISTANCE: 0.32384668225827423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [23/25] Loss: 0.0035949367738794535, RECONS: 0.0032720698218327016, DISTANCE: 0.3228669414917628
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8407, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[161/300] [24/25] Loss: 0.003615663470700383, RECONS: 0.003276532208546996, DISTANCE: 0.3391312551498413
Test[161/300] [0/2] Loss: 0.004123137332499027, RECONS: 0.0033101351000368595, DISTANCE: 0.8130021095275879
Test[161/300] [1/2] Loss: 0.004438592353835702, RECONS: 0.0031528460094705224, DISTANCE: 1.2857462763786316
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3732, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8262, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [0/25] Loss: 0.0034730001352727413, RECONS: 0.0031659770756959915, DISTANCE: 0.3070230484008789
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3867, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [1/25] Loss: 0.003626813180744648, RECONS: 0.0033309845020994544, DISTANCE: 0.2958287000656128
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [2/25] Loss: 0.003951377390573422, RECONS: 0.003648327741151055, DISTANCE: 0.30304964383443195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3734, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [3/25] Loss: 0.003821984224487096, RECONS: 0.003516251454129815, DISTANCE: 0.305732786655426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3424, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [4/25] Loss: 0.0036730083171278237, RECONS: 0.003364851465448737, DISTANCE: 0.3081568479537964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6217, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3311, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [5/25] Loss: 0.0036930024701481066, RECONS: 0.0033822744929542146, DISTANCE: 0.31072797377904254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3024, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8697, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6305, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [6/25] Loss: 0.0038829609818224397, RECONS: 0.0035731245630553792, DISTANCE: 0.3098364216940744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8782, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [7/25] Loss: 0.004108872817596421, RECONS: 0.0038026870461180806, DISTANCE: 0.3061857521533966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3404, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [8/25] Loss: 0.004041211317396826, RECONS: 0.003730395239674383, DISTANCE: 0.31081604957580566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [9/25] Loss: 0.004016059590503574, RECONS: 0.003706528851762414, DISTANCE: 0.3095307111740112
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4304, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5923, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [10/25] Loss: 0.004051383542404933, RECONS: 0.003739517012780363, DISTANCE: 0.31186652183532715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8634, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [11/25] Loss: 0.004035387692662577, RECONS: 0.0037238847386712828, DISTANCE: 0.3115029533704122
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [12/25] Loss: 0.004024549638136075, RECONS: 0.003708563780841919, DISTANCE: 0.31598586302537185
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3801, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [13/25] Loss: 0.003967811220458576, RECONS: 0.0036540835862979293, DISTANCE: 0.31372763429369244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8563, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [14/25] Loss: 0.003925503992165128, RECONS: 0.0036122809319446485, DISTANCE: 0.3132230599721273
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3414, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [15/25] Loss: 0.0038900736544746906, RECONS: 0.0035718984727282077, DISTANCE: 0.31817517429590225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5952, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3116, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8738, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [16/25] Loss: 0.0039852528613718114, RECONS: 0.0036652221289627694, DISTANCE: 0.32003073832568
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3498, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8714, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [17/25] Loss: 0.003936089329525, RECONS: 0.003615038340083427, DISTANCE: 0.3210509949260288
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [18/25] Loss: 0.003917506344518379, RECONS: 0.0035977144725620747, DISTANCE: 0.31979187538749293
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [19/25] Loss: 0.003891449945513159, RECONS: 0.0035714468103833497, DISTANCE: 0.3200031340122223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4006, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8543, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [20/25] Loss: 0.003860938883874388, RECONS: 0.0035425404175406412, DISTANCE: 0.31839845861707416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [21/25] Loss: 0.0038564053194766693, RECONS: 0.0035378163976764136, DISTANCE: 0.31858891248703003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [22/25] Loss: 0.0038386133661412673, RECONS: 0.00352023191669065, DISTANCE: 0.3183814390845921
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3324, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [23/25] Loss: 0.0038259273569565266, RECONS: 0.003508027963107452, DISTANCE: 0.31789938112099964
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[162/300] [24/25] Loss: 0.003828003518283367, RECONS: 0.0034960946813225747, DISTANCE: 0.33190882205963135
Test[162/300] [0/2] Loss: 0.004145858343690634, RECONS: 0.003255540272220969, DISTANCE: 0.8903180360794067
Test[162/300] [1/2] Loss: 0.004343659617006779, RECONS: 0.0031342145521193743, DISTANCE: 1.209445059299469
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3475, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [0/25] Loss: 0.0031422078609466553, RECONS: 0.002845673356205225, DISTANCE: 0.29653453826904297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3444, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [1/25] Loss: 0.003774885553866625, RECONS: 0.0034518230240792036, DISTANCE: 0.3230626583099365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [2/25] Loss: 0.0038009060081094503, RECONS: 0.0034800597156087556, DISTANCE: 0.3208463986714681
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3721, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [3/25] Loss: 0.003659806970972568, RECONS: 0.0033325632102787495, DISTANCE: 0.3272438049316406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [4/25] Loss: 0.0036224585492163897, RECONS: 0.0032721160911023616, DISTANCE: 0.3503424644470215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8729, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [5/25] Loss: 0.0035812241258099675, RECONS: 0.0032318190981944404, DISTANCE: 0.3494050105412801
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8391, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [6/25] Loss: 0.003556874647204365, RECONS: 0.003210955365960087, DISTANCE: 0.34591925144195557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [7/25] Loss: 0.0035759092424996197, RECONS: 0.00322723388671875, DISTANCE: 0.34867534041404724
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8456, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [8/25] Loss: 0.0035462381783872843, RECONS: 0.003200894713194834, DISTANCE: 0.3453434573279487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [9/25] Loss: 0.003556883567944169, RECONS: 0.003213436366058886, DISTANCE: 0.34344719648361205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3548, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [10/25] Loss: 0.003497504713860425, RECONS: 0.0031531351322138853, DISTANCE: 0.3443695848638361
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8661, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [11/25] Loss: 0.003499784623272717, RECONS: 0.003158504046344509, DISTANCE: 0.34128057956695557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8822, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [12/25] Loss: 0.003586424729571893, RECONS: 0.0032496711848160396, DISTANCE: 0.3367535609465379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2692, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [13/25] Loss: 0.003552665834182075, RECONS: 0.0032195327304569738, DISTANCE: 0.3331331270081656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3027, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [14/25] Loss: 0.0036022071726620197, RECONS: 0.0032708763300130766, DISTANCE: 0.3313308556874593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8491, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [15/25] Loss: 0.003611161926528439, RECONS: 0.0032807889074319974, DISTANCE: 0.33037303388118744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3725, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [16/25] Loss: 0.0036238982232616227, RECONS: 0.0032946054193684284, DISTANCE: 0.32929281627430634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4030, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [17/25] Loss: 0.0036318888370361594, RECONS: 0.0033026602145077456, DISTANCE: 0.32922862635718453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4187, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [18/25] Loss: 0.003694408720261172, RECONS: 0.0033664603497048744, DISTANCE: 0.3279483820262708
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [19/25] Loss: 0.003705512173473835, RECONS: 0.0033778812852688135, DISTANCE: 0.327630889415741
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8709, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [20/25] Loss: 0.0037176587308446565, RECONS: 0.0033914699174818538, DISTANCE: 0.32618881407238187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [21/25] Loss: 0.003806150984019041, RECONS: 0.0034800397486171937, DISTANCE: 0.32611124082045123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8738, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [22/25] Loss: 0.003789067572063726, RECONS: 0.0034634144976735115, DISTANCE: 0.325653076171875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3471, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [23/25] Loss: 0.0037791587334747114, RECONS: 0.003454944041247169, DISTANCE: 0.32421469191710156
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[163/300] [24/25] Loss: 0.003808904178440571, RECONS: 0.0034709035325795412, DISTANCE: 0.338000636100769
Test[163/300] [0/2] Loss: 0.004496566951274872, RECONS: 0.003334200708195567, DISTANCE: 1.1623663902282715
Test[163/300] [1/2] Loss: 0.004631705116480589, RECONS: 0.0031172519084066153, DISTANCE: 1.5144531726837158
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8646, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [0/25] Loss: 0.004321815446019173, RECONS: 0.003980922978371382, DISTANCE: 0.34089231491088867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4122, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5872, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [1/25] Loss: 0.004369845613837242, RECONS: 0.004033371806144714, DISTANCE: 0.3364737033843994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4190, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5912, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [2/25] Loss: 0.004248811552921931, RECONS: 0.0039175468652198715, DISTANCE: 0.3312646547953288
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4188, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [3/25] Loss: 0.0043628879357129335, RECONS: 0.0040222451207228005, DISTANCE: 0.3406427800655365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3783, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [4/25] Loss: 0.004184878291562199, RECONS: 0.0038536239415407183, DISTANCE: 0.33125431537628175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3364, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8774, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6268, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [5/25] Loss: 0.004033630286964278, RECONS: 0.003704195454095801, DISTANCE: 0.3294348120689392
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3203, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6280, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [6/25] Loss: 0.004157752097983446, RECONS: 0.0038276159736726966, DISTANCE: 0.3301361288343157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5886, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [7/25] Loss: 0.004288116208044812, RECONS: 0.003953801060561091, DISTANCE: 0.33431515097618103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [8/25] Loss: 0.004235855484795239, RECONS: 0.0038978662341833115, DISTANCE: 0.33798925081888836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3954, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5850, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [9/25] Loss: 0.004255304182879627, RECONS: 0.003914145100861788, DISTANCE: 0.3411590814590454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5939, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5897, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [10/25] Loss: 0.004210501253096895, RECONS: 0.0038653010163794865, DISTANCE: 0.3452002460306341
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [11/25] Loss: 0.004225911902418981, RECONS: 0.0038838154481103024, DISTANCE: 0.3420964479446411
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [12/25] Loss: 0.004143907706468151, RECONS: 0.0038020035359435356, DISTANCE: 0.34190415419065034
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8490, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [13/25] Loss: 0.004245009057090751, RECONS: 0.0039031244980703506, DISTANCE: 0.3418845534324646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [14/25] Loss: 0.004234775761142373, RECONS: 0.003895574171716968, DISTANCE: 0.3392015854517619
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3061, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8350, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [15/25] Loss: 0.0041837857133941725, RECONS: 0.003845696584903635, DISTANCE: 0.33808911591768265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3183, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8341, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [16/25] Loss: 0.004150463884477229, RECONS: 0.003810294355977984, DISTANCE: 0.3401695209390977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3521, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5948, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [17/25] Loss: 0.00412600532743252, RECONS: 0.0037848958745598793, DISTANCE: 0.3411094480090671
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [18/25] Loss: 0.004118725792259762, RECONS: 0.0037772882803294217, DISTANCE: 0.34143750291121633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3534, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [19/25] Loss: 0.004104197572451085, RECONS: 0.0037618995876982806, DISTANCE: 0.34229797720909116
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [20/25] Loss: 0.0040816430423763535, RECONS: 0.0037425278929904813, DISTANCE: 0.3391151371456328
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6247, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6295, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [21/25] Loss: 0.004078326588073237, RECONS: 0.0037396652094850488, DISTANCE: 0.3386613672429865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3322, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8740, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6305, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [22/25] Loss: 0.004101112171116731, RECONS: 0.0037650171080199275, DISTANCE: 0.33609504803367285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [23/25] Loss: 0.004109987028641626, RECONS: 0.0037739094210943827, DISTANCE: 0.33607758581638336
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8782, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[164/300] [24/25] Loss: 0.00411232297308743, RECONS: 0.0037606438528746365, DISTANCE: 0.35167909145355225
Test[164/300] [0/2] Loss: 0.004122430924326181, RECONS: 0.0031104020308703184, DISTANCE: 1.012028694152832
Test[164/300] [1/2] Loss: 0.004313040291890502, RECONS: 0.003032760345377028, DISTANCE: 1.2802798748016357
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3717, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8814, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [0/25] Loss: 0.0036520445719361305, RECONS: 0.0033268765546381474, DISTANCE: 0.3251681327819824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5860, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8779, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5971, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [1/25] Loss: 0.004069741349667311, RECONS: 0.003736307146027684, DISTANCE: 0.3334343433380127
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5890, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [2/25] Loss: 0.004007884844516714, RECONS: 0.0036694415224095187, DISTANCE: 0.33844343821207684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6249, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8318, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5883, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [3/25] Loss: 0.004323742177803069, RECONS: 0.003993887105025351, DISTANCE: 0.32985517382621765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3989, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [4/25] Loss: 0.00421653687953949, RECONS: 0.0038915683515369894, DISTANCE: 0.3249686241149902
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [5/25] Loss: 0.00421352474950254, RECONS: 0.0038857325756301484, DISTANCE: 0.3277922471364339
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3493, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [6/25] Loss: 0.00409348019664841, RECONS: 0.003767784019666059, DISTANCE: 0.3256962299346924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8598, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [7/25] Loss: 0.0040669475856702775, RECONS: 0.003742603585124016, DISTANCE: 0.32434405386447906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8762, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [8/25] Loss: 0.0039758582651201226, RECONS: 0.0036566301455928218, DISTANCE: 0.3192281723022461
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6215, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3305, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8706, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [9/25] Loss: 0.003952915384434164, RECONS: 0.003634785511530936, DISTANCE: 0.3181299209594727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3204, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8757, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [10/25] Loss: 0.003919522447342222, RECONS: 0.0036003907126459208, DISTANCE: 0.3191317753358321
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3398, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [11/25] Loss: 0.0038739747057358422, RECONS: 0.0035571271049169204, DISTANCE: 0.3168476422627767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5943, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [12/25] Loss: 0.003939576912671328, RECONS: 0.0036182300223467443, DISTANCE: 0.3213469431950496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8325, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5913, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [13/25] Loss: 0.003933837604043739, RECONS: 0.003614944439115269, DISTANCE: 0.31889321974345614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [14/25] Loss: 0.003908340508739154, RECONS: 0.0035884551238268615, DISTANCE: 0.3198854366938273
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4242, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [15/25] Loss: 0.003965949639678001, RECONS: 0.003643569114501588, DISTANCE: 0.32238055765628815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3540, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [16/25] Loss: 0.003944973392850336, RECONS: 0.00362220687298652, DISTANCE: 0.32276654944700356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8757, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [17/25] Loss: 0.003928069296913843, RECONS: 0.0036046147967378297, DISTANCE: 0.3234545323583815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5960, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3439, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6239, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [18/25] Loss: 0.0039381203609273625, RECONS: 0.003615987768984939, DISTANCE: 0.3221326125295539
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3474, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8722, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [19/25] Loss: 0.003947310906369239, RECONS: 0.003625253972131759, DISTANCE: 0.3220569550991058
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3676, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8764, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [20/25] Loss: 0.003919427859641257, RECONS: 0.0035954799303518875, DISTANCE: 0.3239479462305705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3824, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8706, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [21/25] Loss: 0.003903626252643087, RECONS: 0.0035768087254837155, DISTANCE: 0.32681753960522736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8636, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5973, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [22/25] Loss: 0.0038899598622937565, RECONS: 0.003564562415704131, DISTANCE: 0.32539745517399
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4171, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [23/25] Loss: 0.0038739798377112797, RECONS: 0.003549055002319316, DISTANCE: 0.32492484152317047
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6256, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4020, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[165/300] [24/25] Loss: 0.003988329106941819, RECONS: 0.0036474947817623617, DISTANCE: 0.3408343267440796
Test[165/300] [0/2] Loss: 0.004640789702534676, RECONS: 0.0037576339673250914, DISTANCE: 0.8831559419631958
Test[165/300] [1/2] Loss: 0.0047117117792367935, RECONS: 0.003513582400046289, DISTANCE: 1.1981294751167297
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3796, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [0/25] Loss: 0.0033166224602609873, RECONS: 0.003003073390573263, DISTANCE: 0.3135490417480469
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3155, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6283, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [1/25] Loss: 0.003330801147967577, RECONS: 0.003034857101738453, DISTANCE: 0.2959439754486084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2888, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8726, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6300, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [2/25] Loss: 0.0036676301000018916, RECONS: 0.003369768771032492, DISTANCE: 0.2978612979253133
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8814, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [3/25] Loss: 0.004479086957871914, RECONS: 0.0041823722422122955, DISTANCE: 0.2967146933078766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2676, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [4/25] Loss: 0.004327371250838041, RECONS: 0.004015512531623244, DISTANCE: 0.31185867786407473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3007, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8463, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [5/25] Loss: 0.004200713553776343, RECONS: 0.003885559970512986, DISTANCE: 0.3151535391807556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3453, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [6/25] Loss: 0.004171933779226882, RECONS: 0.0038548098943595377, DISTANCE: 0.3171238728931972
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [7/25] Loss: 0.004104602645384148, RECONS: 0.0037895244313403964, DISTANCE: 0.3150781989097595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [8/25] Loss: 0.004062895792432957, RECONS: 0.0037495893322759205, DISTANCE: 0.31330643759833443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4285, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [9/25] Loss: 0.004055909509770572, RECONS: 0.003743070620112121, DISTANCE: 0.31283888816833494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4214, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8732, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [10/25] Loss: 0.0040678078181702985, RECONS: 0.003753957444463264, DISTANCE: 0.31385035948319867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3886, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [11/25] Loss: 0.004011186092005421, RECONS: 0.003698733247195681, DISTANCE: 0.31245283285776776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [12/25] Loss: 0.0040037174744961355, RECONS: 0.0036935608189266464, DISTANCE: 0.31015663880568284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3629, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8779, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [13/25] Loss: 0.003989367962016591, RECONS: 0.0036788275132754017, DISTANCE: 0.31054043769836426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [14/25] Loss: 0.003973380957419673, RECONS: 0.0036626175822069246, DISTANCE: 0.3107633670171102
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8522, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [15/25] Loss: 0.00396295879909303, RECONS: 0.0036515514948405325, DISTANCE: 0.31140729039907455
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [16/25] Loss: 0.003975753466982175, RECONS: 0.003663848482948892, DISTANCE: 0.311904977349674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4032, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [17/25] Loss: 0.003963774393519593, RECONS: 0.003652186676238974, DISTANCE: 0.3115877045525445
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3621, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [18/25] Loss: 0.0039306846324746545, RECONS: 0.0036189882697439508, DISTANCE: 0.31169635371158
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4032, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [19/25] Loss: 0.003940157743636518, RECONS: 0.0036282793269492688, DISTANCE: 0.3118784189224243
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [20/25] Loss: 0.003916216437660512, RECONS: 0.0036053735696311507, DISTANCE: 0.3108428716659546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3751, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8737, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [21/25] Loss: 0.00389460673217069, RECONS: 0.003583865028552034, DISTANCE: 0.31074170632795856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [22/25] Loss: 0.003878893816600675, RECONS: 0.0035678030842024346, DISTANCE: 0.3110907388770062
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8637, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [23/25] Loss: 0.0038676818755144873, RECONS: 0.003556239059738194, DISTANCE: 0.31144281725088757
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3192, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[166/300] [24/25] Loss: 0.00387497341260314, RECONS: 0.0035464482475072146, DISTANCE: 0.32852515697479245
Test[166/300] [0/2] Loss: 0.004166416358202696, RECONS: 0.0033176408614963293, DISTANCE: 0.8487753868103027
Test[166/300] [1/2] Loss: 0.004227872006595135, RECONS: 0.0030368230072781444, DISTANCE: 1.1910488605499268
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3488, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8598, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [0/25] Loss: 0.0034894305281341076, RECONS: 0.003191903233528137, DISTANCE: 0.2975273132324219
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [1/25] Loss: 0.003604626632295549, RECONS: 0.003289650660008192, DISTANCE: 0.3149759769439697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3419, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [2/25] Loss: 0.0035989064878473678, RECONS: 0.0032890628402431807, DISTANCE: 0.3098436196645101
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [3/25] Loss: 0.0036716016475111246, RECONS: 0.0033589500235393643, DISTANCE: 0.3126515746116638
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6272, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [4/25] Loss: 0.003834255877882242, RECONS: 0.003517541289329529, DISTANCE: 0.3167145252227783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6215, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3180, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [5/25] Loss: 0.0037519446729371944, RECONS: 0.0034370131713027754, DISTANCE: 0.3149314522743225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3127, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8920, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6362, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [6/25] Loss: 0.004110727326146194, RECONS: 0.0037969896636371103, DISTANCE: 0.3137376308441162
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6381, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [7/25] Loss: 0.004122956597711891, RECONS: 0.0038101087557151914, DISTANCE: 0.3128478229045868
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3113, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8709, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [8/25] Loss: 0.0041328492677874034, RECONS: 0.003811161085549328, DISTANCE: 0.3216881619559394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3441, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [9/25] Loss: 0.004042493039742112, RECONS: 0.0037200685823336244, DISTANCE: 0.3224244356155396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3801, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5884, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [10/25] Loss: 0.004029982236467979, RECONS: 0.0037068941588090224, DISTANCE: 0.32308804988861084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6207, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5785, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [11/25] Loss: 0.004156941024120897, RECONS: 0.0038331053025710085, DISTANCE: 0.32383570075035095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3914, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5860, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [12/25] Loss: 0.004127798960185968, RECONS: 0.003799523817948424, DISTANCE: 0.3282751211753258
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [13/25] Loss: 0.004099681225073125, RECONS: 0.003771267082941319, DISTANCE: 0.3284141165869577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4102, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [14/25] Loss: 0.004086146348466476, RECONS: 0.003758077292392651, DISTANCE: 0.3280690352121989
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3866, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [15/25] Loss: 0.0040881322347559035, RECONS: 0.0037623630050802603, DISTANCE: 0.32576921582221985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8834, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [16/25] Loss: 0.00407175747129847, RECONS: 0.0037469784866141923, DISTANCE: 0.3247789775623995
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8738, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [17/25] Loss: 0.004052667296491563, RECONS: 0.0037277616534589064, DISTANCE: 0.3249056339263916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3499, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8874, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [18/25] Loss: 0.0040345879051050075, RECONS: 0.0037097745746570198, DISTANCE: 0.32481331574289424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3782, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8749, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [19/25] Loss: 0.004031107726041228, RECONS: 0.0037072177627123894, DISTANCE: 0.323889946937561
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3623, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [20/25] Loss: 0.004008972673632559, RECONS: 0.003683417447887006, DISTANCE: 0.32555521102178664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [21/25] Loss: 0.003972315631637519, RECONS: 0.003648169243454256, DISTANCE: 0.3241463737054305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6245, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3605, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [22/25] Loss: 0.0039570808977536535, RECONS: 0.003632228143270249, DISTANCE: 0.3248527360999066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [23/25] Loss: 0.003944432256200041, RECONS: 0.0036200683583350233, DISTANCE: 0.3243638773759206
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3048, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8430, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[167/300] [24/25] Loss: 0.003935733493417502, RECONS: 0.0035980423633009194, DISTANCE: 0.33769110679626463
Test[167/300] [0/2] Loss: 0.004604094661772251, RECONS: 0.0035739780869334936, DISTANCE: 1.0301165580749512
Test[167/300] [1/2] Loss: 0.004741689655929804, RECONS: 0.0033343976829200983, DISTANCE: 1.4072918891906738
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2981, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [0/25] Loss: 0.0035793823190033436, RECONS: 0.00324865709990263, DISTANCE: 0.33072519302368164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3244, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8291, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [1/25] Loss: 0.0034825780894607306, RECONS: 0.0031404736218973994, DISTANCE: 0.342104434967041
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5933, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [2/25] Loss: 0.0037142004196842513, RECONS: 0.0033841364396115146, DISTANCE: 0.3300639788309733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3703, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [3/25] Loss: 0.0036437619128264487, RECONS: 0.003316119546070695, DISTANCE: 0.3276423513889313
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3591, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8592, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [4/25] Loss: 0.0037654447834938763, RECONS: 0.0034392140805721283, DISTANCE: 0.3262307167053223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3556, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8684, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [5/25] Loss: 0.003708043252117932, RECONS: 0.0033804677271594605, DISTANCE: 0.3275755246480306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8702, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [6/25] Loss: 0.0037999907841107677, RECONS: 0.0034712299571505617, DISTANCE: 0.32876082829066683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8664, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [7/25] Loss: 0.0037759019469376653, RECONS: 0.003454591322224587, DISTANCE: 0.3213106393814087
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4151, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [8/25] Loss: 0.003740033936790294, RECONS: 0.0034190311044868496, DISTANCE: 0.3210028409957886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4074, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [9/25] Loss: 0.003720072703436017, RECONS: 0.0034029367147013546, DISTANCE: 0.3171359896659851
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6259, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [10/25] Loss: 0.0037794532677666707, RECONS: 0.0034602828620171003, DISTANCE: 0.3191703883084384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [11/25] Loss: 0.0037770349105509617, RECONS: 0.0034594751390007636, DISTANCE: 0.31755975882212323
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3411, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8766, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [12/25] Loss: 0.003745911016057317, RECONS: 0.0034294303578252974, DISTANCE: 0.31648064576662505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6211, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3207, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [13/25] Loss: 0.003714725491590798, RECONS: 0.0033999850773917778, DISTANCE: 0.31474039384296965
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [14/25] Loss: 0.003711507779856523, RECONS: 0.0033985787071287633, DISTANCE: 0.3129290501276652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [15/25] Loss: 0.003685591640532948, RECONS: 0.003373596948222257, DISTANCE: 0.31199466437101364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3300, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [16/25] Loss: 0.0037216831080834657, RECONS: 0.003408711965141051, DISTANCE: 0.3129711080999935
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5934, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [17/25] Loss: 0.0037480866303667426, RECONS: 0.0034327624469167655, DISTANCE: 0.31532416078779435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4042, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8484, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [18/25] Loss: 0.003772148997277806, RECONS: 0.003455795764334892, DISTANCE: 0.3163532206886693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4197, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5914, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [19/25] Loss: 0.003803241124842316, RECONS: 0.0034880058141425253, DISTANCE: 0.3152352929115295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4077, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [20/25] Loss: 0.0037839701399207115, RECONS: 0.0034687482042326813, DISTANCE: 0.3152219227382115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [21/25] Loss: 0.0037604852219704876, RECONS: 0.0034434165678579698, DISTANCE: 0.317068641835993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8771, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [22/25] Loss: 0.0037395663701159797, RECONS: 0.003423556766432265, DISTANCE: 0.31600958886353864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8757, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [23/25] Loss: 0.0037092647689860314, RECONS: 0.0033940466334267208, DISTANCE: 0.31521811584631604
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8640, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[168/300] [24/25] Loss: 0.0037000791635364294, RECONS: 0.003372437637299299, DISTANCE: 0.3276415014266968
Test[168/300] [0/2] Loss: 0.004444338381290436, RECONS: 0.0034206686541438103, DISTANCE: 1.023669719696045
Test[168/300] [1/2] Loss: 0.004717363975942135, RECONS: 0.0032525272108614445, DISTANCE: 1.464836597442627
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8640, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [0/25] Loss: 0.003637676127254963, RECONS: 0.0033078263513743877, DISTANCE: 0.32984983921051025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3204, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8791, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [1/25] Loss: 0.0038749980740249157, RECONS: 0.0035221450962126255, DISTANCE: 0.35285311937332153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3398, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [2/25] Loss: 0.0036200713366270065, RECONS: 0.0032497801973174014, DISTANCE: 0.37029123306274414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3329, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [3/25] Loss: 0.0034211702877655625, RECONS: 0.003067644836846739, DISTANCE: 0.3535255193710327
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [4/25] Loss: 0.003411185182631016, RECONS: 0.003057597205042839, DISTANCE: 0.35358800888061526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6201, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3505, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8514, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [5/25] Loss: 0.003405379985148708, RECONS: 0.0030389472764606276, DISTANCE: 0.36643272638320923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3490, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [6/25] Loss: 0.0034217042183237417, RECONS: 0.003054264766563262, DISTANCE: 0.3674394573484148
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3272, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [7/25] Loss: 0.0034392057568766177, RECONS: 0.003078295208979398, DISTANCE: 0.3609105348587036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3108, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [8/25] Loss: 0.0034819689268867173, RECONS: 0.0031272758626275593, DISTANCE: 0.35469304190741646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3282, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [9/25] Loss: 0.0034366309409961104, RECONS: 0.0030850164592266084, DISTANCE: 0.3516144514083862
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3125, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [10/25] Loss: 0.003465077860958197, RECONS: 0.00311688627963039, DISTANCE: 0.3481915430589156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [11/25] Loss: 0.0034910536099535725, RECONS: 0.003147747328815361, DISTANCE: 0.3433062533537547
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3654, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [12/25] Loss: 0.0035174818028910803, RECONS: 0.003174893808766053, DISTANCE: 0.34258797535529506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [13/25] Loss: 0.003540056009244706, RECONS: 0.0031972521849508795, DISTANCE: 0.3428038103239877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4135, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8776, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [14/25] Loss: 0.003570151686047514, RECONS: 0.003224115415165822, DISTANCE: 0.3460362672805786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [15/25] Loss: 0.0035767804947681725, RECONS: 0.0032324394560419023, DISTANCE: 0.3443410322070122
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4345, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [16/25] Loss: 0.003628135028788272, RECONS: 0.003281602800330695, DISTANCE: 0.3465322256088257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [17/25] Loss: 0.0036363909021019936, RECONS: 0.0032921929507412845, DISTANCE: 0.34419794215096366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4080, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [18/25] Loss: 0.003631764495941369, RECONS: 0.003288859525989545, DISTANCE: 0.3429049567172402
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [19/25] Loss: 0.003689376136753708, RECONS: 0.0033446768531575797, DISTANCE: 0.3446992695331573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3659, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [20/25] Loss: 0.003663689618752826, RECONS: 0.0033212365427364907, DISTANCE: 0.3424530653726487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [21/25] Loss: 0.0036506515885279937, RECONS: 0.0033088661306961017, DISTANCE: 0.3417854471640153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3738, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [22/25] Loss: 0.0036389267416265998, RECONS: 0.0032994562921964603, DISTANCE: 0.33947043833525287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [23/25] Loss: 0.0036243389962085835, RECONS: 0.0032842159659291306, DISTANCE: 0.3401230225960414
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[169/300] [24/25] Loss: 0.003649654509499669, RECONS: 0.00329268422909081, DISTANCE: 0.3569702768325806
Test[169/300] [0/2] Loss: 0.004117243457585573, RECONS: 0.003357343142852187, DISTANCE: 0.7599004507064819
Test[169/300] [1/2] Loss: 0.00408049370162189, RECONS: 0.0030739617068320513, DISTANCE: 1.0065318942070007
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3130, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [0/25] Loss: 0.0030212481506168842, RECONS: 0.0026565580628812313, DISTANCE: 0.3646899461746216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [1/25] Loss: 0.0031254634959623218, RECONS: 0.002764121862128377, DISTANCE: 0.36134153604507446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3328, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [2/25] Loss: 0.0030190591545154652, RECONS: 0.00267489409695069, DISTANCE: 0.34416496753692627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3329, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [3/25] Loss: 0.003163025889080018, RECONS: 0.0028290648479014635, DISTANCE: 0.33396098017692566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3194, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [4/25] Loss: 0.0031491358298808337, RECONS: 0.002820286341011524, DISTANCE: 0.32884945869445803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5896, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [5/25] Loss: 0.003474066072764496, RECONS: 0.0031401681092878184, DISTANCE: 0.3338979085286458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8280, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [6/25] Loss: 0.0034635866593037334, RECONS: 0.0031259256481592146, DISTANCE: 0.3376609597887312
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [7/25] Loss: 0.003469905408564955, RECONS: 0.0031315258820541203, DISTANCE: 0.33837947249412537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4242, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [8/25] Loss: 0.0035509169619116518, RECONS: 0.0032149006405638326, DISTANCE: 0.33601628409491646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4368, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5909, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [9/25] Loss: 0.003620135085657239, RECONS: 0.0032822595443576575, DISTANCE: 0.337875509262085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4224, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [10/25] Loss: 0.003621024608781392, RECONS: 0.0032815317072990265, DISTANCE: 0.33949287371201947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4123, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [11/25] Loss: 0.0035655529742750027, RECONS: 0.003226797853130847, DISTANCE: 0.3387550910313924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3626, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [12/25] Loss: 0.0036155547266109632, RECONS: 0.0032736745197325945, DISTANCE: 0.34188019312345064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3388, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [13/25] Loss: 0.003601084147313876, RECONS: 0.0032594241867108004, DISTANCE: 0.3416599375861032
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3350, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [14/25] Loss: 0.0035653229026744765, RECONS: 0.0032231969758868217, DISTANCE: 0.3421259085337321
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3179, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [15/25] Loss: 0.0035509090666892007, RECONS: 0.003211529430700466, DISTANCE: 0.33937961608171463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3579, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [16/25] Loss: 0.0035467242055079516, RECONS: 0.003207996569793014, DISTANCE: 0.33872762147118063
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3579, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8349, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [17/25] Loss: 0.003524522866225905, RECONS: 0.0031833414557493394, DISTANCE: 0.3411813974380493
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5936, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3673, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [18/25] Loss: 0.0035328450245096497, RECONS: 0.0031928084545621745, DISTANCE: 0.3400365616145887
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3834, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8189, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [19/25] Loss: 0.0035506592015735806, RECONS: 0.003208987438119948, DISTANCE: 0.3416717529296875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [20/25] Loss: 0.0035426802489729155, RECONS: 0.00320329323100547, DISTANCE: 0.3393870081220354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3827, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [21/25] Loss: 0.0035785456315021624, RECONS: 0.0032391937089745293, DISTANCE: 0.3393519033085216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3705, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [22/25] Loss: 0.0036010481417179108, RECONS: 0.003260049776619543, DISTANCE: 0.3409983489824378
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [23/25] Loss: 0.0035878133106355867, RECONS: 0.00324698886834085, DISTANCE: 0.3408244252204895
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3322, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8731, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[170/300] [24/25] Loss: 0.003639094177633524, RECONS: 0.003281621169298887, DISTANCE: 0.35747299671173094
Test[170/300] [0/2] Loss: 0.004480182193219662, RECONS: 0.0035051372833549976, DISTANCE: 0.9750446081161499
Test[170/300] [1/2] Loss: 0.00469996826723218, RECONS: 0.003331640036776662, DISTANCE: 1.368328034877777
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3495, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8890, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [0/25] Loss: 0.00368350837379694, RECONS: 0.0033938675187528133, DISTANCE: 0.2896409034729004
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3928, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [1/25] Loss: 0.003860100172460079, RECONS: 0.0035546000581234694, DISTANCE: 0.3055000305175781
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [2/25] Loss: 0.003963096998631954, RECONS: 0.0036421179150541625, DISTANCE: 0.32097895940144855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4135, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [3/25] Loss: 0.0037524866056628525, RECONS: 0.0034452705876901746, DISTANCE: 0.30721592903137207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8463, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [4/25] Loss: 0.003730792785063386, RECONS: 0.003418219881132245, DISTANCE: 0.3125728368759155
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4139, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [5/25] Loss: 0.0037486266810446978, RECONS: 0.0034363833256065845, DISTANCE: 0.3122432827949524
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8442, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [6/25] Loss: 0.0037026136248771635, RECONS: 0.003391312767884561, DISTANCE: 0.31130080563681467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3805, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [7/25] Loss: 0.0036477659305091947, RECONS: 0.0033388487063348293, DISTANCE: 0.30891717970371246
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5905, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8442, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [8/25] Loss: 0.0036650209739390346, RECONS: 0.0033555729832086298, DISTANCE: 0.3094479507870144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6319, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8377, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [9/25] Loss: 0.0038661933736875652, RECONS: 0.003557493630796671, DISTANCE: 0.30869972705841064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [10/25] Loss: 0.003894653700461442, RECONS: 0.0035851601172577252, DISTANCE: 0.30949356339194556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6209, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3637, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [11/25] Loss: 0.003857805316026012, RECONS: 0.0035465621040202677, DISTANCE: 0.311243196328481
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6328, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [12/25] Loss: 0.003843596097655021, RECONS: 0.0035316199243355254, DISTANCE: 0.3119761668718778
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3260, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8784, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6332, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [13/25] Loss: 0.0038494080903806855, RECONS: 0.0035361176622765405, DISTANCE: 0.31329041719436646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3517, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8741, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6300, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [14/25] Loss: 0.0038432417437434196, RECONS: 0.003530482311422626, DISTANCE: 0.31275941530863444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3525, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [15/25] Loss: 0.00383518825401552, RECONS: 0.003521646707667969, DISTANCE: 0.3135415315628052
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3434, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [16/25] Loss: 0.0037945780957884647, RECONS: 0.003481950638267924, DISTANCE: 0.31262744174284096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [17/25] Loss: 0.0037853209715750483, RECONS: 0.00347074075964176, DISTANCE: 0.31458018885718453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4289, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8323, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5897, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [18/25] Loss: 0.003778421123953242, RECONS: 0.0034655578630535225, DISTANCE: 0.31286323697943436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4080, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8345, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5913, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [19/25] Loss: 0.0037782440660521386, RECONS: 0.003465883294120431, DISTANCE: 0.3123607516288757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4061, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [20/25] Loss: 0.0037525870748573824, RECONS: 0.0034362898496467444, DISTANCE: 0.3162972018832252
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [21/25] Loss: 0.0037504856326532636, RECONS: 0.0034329893850636754, DISTANCE: 0.31749622388319537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4029, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8787, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [22/25] Loss: 0.0037448444079769693, RECONS: 0.0034271135784523644, DISTANCE: 0.31773081033126166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4063, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [23/25] Loss: 0.0037129625561647117, RECONS: 0.003395900595933199, DISTANCE: 0.3170619358619054
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6212, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3538, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[171/300] [24/25] Loss: 0.0037389945238828657, RECONS: 0.0034063265565782786, DISTANCE: 0.3326679468154907
Test[171/300] [0/2] Loss: 0.004790885373950005, RECONS: 0.003507438115775585, DISTANCE: 1.2834473848342896
Test[171/300] [1/2] Loss: 0.004845684394240379, RECONS: 0.00320834934245795, DISTANCE: 1.6373352408409119
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [0/25] Loss: 0.0037061935290694237, RECONS: 0.0033888379111886024, DISTANCE: 0.31735551357269287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3148, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [1/25] Loss: 0.00333447870798409, RECONS: 0.003035392379388213, DISTANCE: 0.2990862727165222
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3266, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8665, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [2/25] Loss: 0.004083056468516588, RECONS: 0.003780652303248644, DISTANCE: 0.3024042050043742
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3177, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [3/25] Loss: 0.003963384428061545, RECONS: 0.003659066802356392, DISTANCE: 0.3043176233768463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3508, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [4/25] Loss: 0.0038428576197475197, RECONS: 0.0035361731890588997, DISTANCE: 0.30668442249298095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [5/25] Loss: 0.0037933876737952232, RECONS: 0.0034877293510362506, DISTANCE: 0.30565832058588666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4193, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8347, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [6/25] Loss: 0.003750543442687818, RECONS: 0.003444763000256249, DISTANCE: 0.3057804448263986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4310, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5919, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [7/25] Loss: 0.0038623472210019827, RECONS: 0.003551182773662731, DISTANCE: 0.3111644387245178
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4222, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8688, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [8/25] Loss: 0.0038211662063582074, RECONS: 0.0035112944638563525, DISTANCE: 0.30987172656589085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8596, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [9/25] Loss: 0.003768998570740223, RECONS: 0.0034589752089232207, DISTANCE: 0.3100233554840088
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8735, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [10/25] Loss: 0.0037877571091733194, RECONS: 0.003473980034786192, DISTANCE: 0.31377705660733307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3194, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6305, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [11/25] Loss: 0.003911647596396506, RECONS: 0.0035936060012318194, DISTANCE: 0.3180415630340576
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3411, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [12/25] Loss: 0.003947722653930004, RECONS: 0.0036294295345074856, DISTANCE: 0.31829309463500977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3314, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8691, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [13/25] Loss: 0.003886928249682699, RECONS: 0.003567407207031335, DISTANCE: 0.31952101843697683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6309, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [14/25] Loss: 0.003939496322224538, RECONS: 0.003618301978955666, DISTANCE: 0.32119430700937907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [15/25] Loss: 0.0038984863203950226, RECONS: 0.0035780370380962268, DISTANCE: 0.32044924050569534
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3421, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [16/25] Loss: 0.0038472825168248486, RECONS: 0.0035270380869726926, DISTANCE: 0.32024439643411073
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3780, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [17/25] Loss: 0.0038154312771641547, RECONS: 0.0034959927304751342, DISTANCE: 0.31943851709365845
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [18/25] Loss: 0.003783282296928136, RECONS: 0.0034603437188228496, DISTANCE: 0.3229385488911679
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3539, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [19/25] Loss: 0.0037734306883066893, RECONS: 0.0034496949170716106, DISTANCE: 0.3237357437610626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3678, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8451, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [20/25] Loss: 0.003790389968171006, RECONS: 0.0034625199401662463, DISTANCE: 0.3278699999763852
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3497, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [21/25] Loss: 0.0037764316551725974, RECONS: 0.0034484263001517816, DISTANCE: 0.32800532471049915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [22/25] Loss: 0.003770297636156497, RECONS: 0.0034443147925902967, DISTANCE: 0.32598280906677246
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5884, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [23/25] Loss: 0.0037654211822276316, RECONS: 0.003438870597165078, DISTANCE: 0.32655054827531177
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5929, device='cuda:0', grad_fn=<MeanBackward0>)
Train[172/300] [24/25] Loss: 0.0038356163911521437, RECONS: 0.0034945628605782984, DISTANCE: 0.3410534906387329
Test[172/300] [0/2] Loss: 0.0042637186124920845, RECONS: 0.0032460293732583523, DISTANCE: 1.0176894664764404
Test[172/300] [1/2] Loss: 0.004265972413122654, RECONS: 0.002984773484058678, DISTANCE: 1.2811989188194275
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [0/25] Loss: 0.0036017338279634714, RECONS: 0.0032277132850140333, DISTANCE: 0.3740205764770508
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8650, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [1/25] Loss: 0.003711645840667188, RECONS: 0.0033627169905230403, DISTANCE: 0.3489288091659546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3188, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8708, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6260, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [2/25] Loss: 0.0035869513327876725, RECONS: 0.003242426086217165, DISTANCE: 0.34452521800994873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [3/25] Loss: 0.003625653451308608, RECONS: 0.0032892421586439013, DISTANCE: 0.3364112973213196
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6213, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8563, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [4/25] Loss: 0.003566771000623703, RECONS: 0.0032261100132018328, DISTANCE: 0.34066100120544435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [5/25] Loss: 0.00357444006173561, RECONS: 0.0032378893035153546, DISTANCE: 0.3365507523218791
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8637, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [6/25] Loss: 0.003527592568259154, RECONS: 0.0032008980799998555, DISTANCE: 0.32669447149549213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3634, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8705, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [7/25] Loss: 0.0035063136310782284, RECONS: 0.0031851516105234623, DISTANCE: 0.32116200029850006
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3410, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [8/25] Loss: 0.0034865184117936427, RECONS: 0.003165838722553518, DISTANCE: 0.320679677857293
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [9/25] Loss: 0.0035117019433528185, RECONS: 0.0031911633675917985, DISTANCE: 0.3205385565757751
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [10/25] Loss: 0.0035438573792238126, RECONS: 0.0032266684680838475, DISTANCE: 0.3171888914975253
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [11/25] Loss: 0.0035543613291035094, RECONS: 0.003234519681427628, DISTANCE: 0.3198416332403819
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [12/25] Loss: 0.003564678204174225, RECONS: 0.0032461438005646835, DISTANCE: 0.31853439257695126
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [13/25] Loss: 0.0035693345624687417, RECONS: 0.003251092857681215, DISTANCE: 0.3182416984013149
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4056, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [14/25] Loss: 0.003547178596879045, RECONS: 0.0032268703449517488, DISTANCE: 0.32030824025472004
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [15/25] Loss: 0.0035255043621873483, RECONS: 0.003202736348612234, DISTANCE: 0.3227680027484894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [16/25] Loss: 0.003499589627608657, RECONS: 0.003174182863029487, DISTANCE: 0.3254067477057962
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [17/25] Loss: 0.0034825281084825597, RECONS: 0.0031576758483424783, DISTANCE: 0.32485224141014946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3396, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [18/25] Loss: 0.0034686656497222813, RECONS: 0.003143398152468236, DISTANCE: 0.32526747803939016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [19/25] Loss: 0.003458147507626563, RECONS: 0.0031340039684437217, DISTANCE: 0.3241435170173645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3424, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [20/25] Loss: 0.0034443017184024767, RECONS: 0.003121452239741172, DISTANCE: 0.3228494610105242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3596, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [21/25] Loss: 0.00349879747425968, RECONS: 0.0031760046152736654, DISTANCE: 0.32279283892024646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [22/25] Loss: 0.0034982509222691474, RECONS: 0.0031766797638619723, DISTANCE: 0.3215711427771527
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [23/25] Loss: 0.0035183652653358877, RECONS: 0.003197878240219628, DISTANCE: 0.32048701246579486
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6211, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[173/300] [24/25] Loss: 0.003589460514485836, RECONS: 0.003249883083626628, DISTANCE: 0.3395774173736572
Test[173/300] [0/2] Loss: 0.005094095598906279, RECONS: 0.003878167597576976, DISTANCE: 1.215928077697754
Test[173/300] [1/2] Loss: 0.0052162474021315575, RECONS: 0.0035851442953571677, DISTANCE: 1.6311030387878418
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [0/25] Loss: 0.003922027535736561, RECONS: 0.003607859369367361, DISTANCE: 0.31416821479797363
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8715, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [1/25] Loss: 0.004069809569045901, RECONS: 0.0037272952031344175, DISTANCE: 0.3425142765045166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3653, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8830, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [2/25] Loss: 0.0038658573757857084, RECONS: 0.0035370970144867897, DISTANCE: 0.328760306040446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3473, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [3/25] Loss: 0.0038474888424389064, RECONS: 0.0035286531201563776, DISTANCE: 0.31883567571640015
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3284, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [4/25] Loss: 0.0038268005941063167, RECONS: 0.0035060047637671234, DISTANCE: 0.32079577445983887
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3591, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [5/25] Loss: 0.003781832793417076, RECONS: 0.0034608132749175033, DISTANCE: 0.321019450823466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3535, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8804, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [6/25] Loss: 0.0037830329300569637, RECONS: 0.0034656760482383625, DISTANCE: 0.31735682487487793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4045, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5975, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [7/25] Loss: 0.003718667256180197, RECONS: 0.0034017708676401526, DISTANCE: 0.31689634919166565
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6268, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8330, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [8/25] Loss: 0.0038006333116855887, RECONS: 0.0034855996103336415, DISTANCE: 0.3150336742401123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8179, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [9/25] Loss: 0.003850967111065984, RECONS: 0.003535688552074134, DISTANCE: 0.3152785420417786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [10/25] Loss: 0.003824127689850601, RECONS: 0.003510321088304574, DISTANCE: 0.3138065879995173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3517, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [11/25] Loss: 0.0038677321087258556, RECONS: 0.0035543105914257467, DISTANCE: 0.3134215176105499
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [12/25] Loss: 0.003821548969986347, RECONS: 0.003506695278562032, DISTANCE: 0.3148536957227267
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6193, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [13/25] Loss: 0.003805604264406221, RECONS: 0.0034895456795181546, DISTANCE: 0.31605859313692364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3601, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [14/25] Loss: 0.003822590286533038, RECONS: 0.003506537309537331, DISTANCE: 0.31605297724405923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3434, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [15/25] Loss: 0.003806445238296874, RECONS: 0.0034901555627584457, DISTANCE: 0.31628967076539993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3597, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [16/25] Loss: 0.003776795942993725, RECONS: 0.0034609322764855973, DISTANCE: 0.31586366541245403
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4098, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [17/25] Loss: 0.003756929900393718, RECONS: 0.0034408726367271608, DISTANCE: 0.3160572581821018
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4214, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [18/25] Loss: 0.003735107921161934, RECONS: 0.0034176729325401155, DISTANCE: 0.31743498852378443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [19/25] Loss: 0.0037693381658755244, RECONS: 0.003452082979492843, DISTANCE: 0.3172551870346069
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [20/25] Loss: 0.0037826587157767442, RECONS: 0.0034629414412414745, DISTANCE: 0.31971727098737446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6236, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4113, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [21/25] Loss: 0.003790347529998557, RECONS: 0.0034696683393452654, DISTANCE: 0.32067918235605414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3166, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8749, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [22/25] Loss: 0.0037801770149203744, RECONS: 0.0034609837963691225, DISTANCE: 0.31919321288233216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3586, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [23/25] Loss: 0.0038037334549395987, RECONS: 0.003485634661046788, DISTANCE: 0.3180987934271495
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5881, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3371, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[174/300] [24/25] Loss: 0.0038820656295865774, RECONS: 0.003549290327355266, DISTANCE: 0.332775297164917
Test[174/300] [0/2] Loss: 0.004623938351869583, RECONS: 0.0035371147096157074, DISTANCE: 1.0868234634399414
Test[174/300] [1/2] Loss: 0.004599566571414471, RECONS: 0.003293854184448719, DISTANCE: 1.3057121634483337
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5947, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [0/25] Loss: 0.0038699025753885508, RECONS: 0.003486159723252058, DISTANCE: 0.38374292850494385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5859, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [1/25] Loss: 0.004042513552121818, RECONS: 0.003692404949106276, DISTANCE: 0.35010868310928345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4288, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8281, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5867, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [2/25] Loss: 0.0040011675252268715, RECONS: 0.0036693119909614325, DISTANCE: 0.3318556547164917
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4417, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8454, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [3/25] Loss: 0.004134971124585718, RECONS: 0.0038124739076010883, DISTANCE: 0.32249733805656433
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [4/25] Loss: 0.004051407473161817, RECONS: 0.0037251929752528667, DISTANCE: 0.3262145757675171
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3770, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [5/25] Loss: 0.003975080520225068, RECONS: 0.0036482148182888827, DISTANCE: 0.32686575253804523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8757, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6298, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [6/25] Loss: 0.003990631849904146, RECONS: 0.003661559761634895, DISTANCE: 0.32907213483537945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3128, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8880, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [7/25] Loss: 0.0039041531563270837, RECONS: 0.0035749501548707485, DISTANCE: 0.3292030394077301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6229, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [8/25] Loss: 0.0039014617602030435, RECONS: 0.003568715105454127, DISTANCE: 0.3327466911739773
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3221, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [9/25] Loss: 0.0038391204318031667, RECONS: 0.003508562664501369, DISTANCE: 0.3305577993392944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3384, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [10/25] Loss: 0.0038167237177152524, RECONS: 0.0034882880704985423, DISTANCE: 0.3284356810829856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [11/25] Loss: 0.003803245509819438, RECONS: 0.003473579437316706, DISTANCE: 0.3296661078929901
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [12/25] Loss: 0.003796283925811832, RECONS: 0.003466349901058353, DISTANCE: 0.32993404681865984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3591, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [13/25] Loss: 0.0037454409092398627, RECONS: 0.0034154741359608515, DISTANCE: 0.32996678352355957
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8489, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [14/25] Loss: 0.0037361620459705593, RECONS: 0.0034081117250025273, DISTANCE: 0.3280503273010254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [15/25] Loss: 0.0037037305592093617, RECONS: 0.003374185776920058, DISTANCE: 0.3295447826385498
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3844, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8738, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [16/25] Loss: 0.003690856700653539, RECONS: 0.003359857713803649, DISTANCE: 0.330998981700224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [17/25] Loss: 0.003751629860036903, RECONS: 0.0034204491077818805, DISTANCE: 0.33118073807822335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3949, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8559, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [18/25] Loss: 0.0037203277706315645, RECONS: 0.0033896638350071093, DISTANCE: 0.33066391944885254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8751, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [19/25] Loss: 0.0037096166634000838, RECONS: 0.0033795289462432267, DISTANCE: 0.3300876975059509
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [20/25] Loss: 0.003703195069517408, RECONS: 0.0033732831943780184, DISTANCE: 0.3299118564242408
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [21/25] Loss: 0.003698871777900918, RECONS: 0.0033684091388501906, DISTANCE: 0.3304626237262379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8602, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [22/25] Loss: 0.0036877854727208614, RECONS: 0.00335699364380992, DISTANCE: 0.33079181546750275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8797, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [23/25] Loss: 0.003670059648963312, RECONS: 0.003338476080292215, DISTANCE: 0.33158355454603833
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[175/300] [24/25] Loss: 0.0037229451537132262, RECONS: 0.0033755753003060817, DISTANCE: 0.34736984729766845
Test[175/300] [0/2] Loss: 0.00447362195700407, RECONS: 0.003177111502736807, DISTANCE: 1.2965102195739746
Test[175/300] [1/2] Loss: 0.004441361408680677, RECONS: 0.002933582989498973, DISTANCE: 1.5077783465385437
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3474, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [0/25] Loss: 0.00322700385004282, RECONS: 0.0029062069952487946, DISTANCE: 0.3207968473434448
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8439, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [1/25] Loss: 0.003124555223621428, RECONS: 0.002809857949614525, DISTANCE: 0.314697265625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [2/25] Loss: 0.00326952935817341, RECONS: 0.0029544344482322535, DISTANCE: 0.31509490807851154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3399, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [3/25] Loss: 0.0032330951653420925, RECONS: 0.00292255450040102, DISTANCE: 0.31054067611694336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3208, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [4/25] Loss: 0.0032355362549424172, RECONS: 0.0029297173023223877, DISTANCE: 0.3058189630508423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3374, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [5/25] Loss: 0.003212536646363636, RECONS: 0.002896877742993335, DISTANCE: 0.31565890709559125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3679, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8302, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [6/25] Loss: 0.003264649006138955, RECONS: 0.002947318068306361, DISTANCE: 0.31733092239924837
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3669, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5967, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [7/25] Loss: 0.003299444681033492, RECONS: 0.002982482372317463, DISTANCE: 0.3169623017311096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3583, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [8/25] Loss: 0.0032994564001758895, RECONS: 0.002984340199165874, DISTANCE: 0.31511619355943465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3728, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [9/25] Loss: 0.003302519838325679, RECONS: 0.0029913286445662378, DISTANCE: 0.31119117736816404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [10/25] Loss: 0.0033270942512899637, RECONS: 0.0030163798946887255, DISTANCE: 0.3107143315401944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5943, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8770, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [11/25] Loss: 0.003376525108857701, RECONS: 0.0030676486009421446, DISTANCE: 0.30887646476427716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [12/25] Loss: 0.003371605219749304, RECONS: 0.003062553363494002, DISTANCE: 0.30905181628007156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8828, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [13/25] Loss: 0.0033674005951200214, RECONS: 0.003058184387295374, DISTANCE: 0.30921616724559237
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4097, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5925, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [14/25] Loss: 0.0034352732511858147, RECONS: 0.003123455106591185, DISTANCE: 0.3118180990219116
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6226, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [15/25] Loss: 0.003470354073215276, RECONS: 0.0031552394066238776, DISTANCE: 0.3151146173477173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [16/25] Loss: 0.0034562940572333686, RECONS: 0.003139677087721579, DISTANCE: 0.316616927876192
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3512, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [17/25] Loss: 0.0034467389858845207, RECONS: 0.0031321254015589752, DISTANCE: 0.3146135475900438
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3685, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [18/25] Loss: 0.003472649075679089, RECONS: 0.0031571700115148957, DISTANCE: 0.31547902132335465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3717, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [19/25] Loss: 0.0035006674006581306, RECONS: 0.003184885298833251, DISTANCE: 0.31578205823898314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3959, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [20/25] Loss: 0.003502226257253261, RECONS: 0.0031873218138657863, DISTANCE: 0.31490440028054373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6235, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3909, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8326, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [21/25] Loss: 0.0035322024275294757, RECONS: 0.0032174503536556254, DISTANCE: 0.3147520260377364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [22/25] Loss: 0.0035446396542956, RECONS: 0.003229429267103905, DISTANCE: 0.315210337224214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4030, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [23/25] Loss: 0.003545357312153404, RECONS: 0.0032287675130646676, DISTANCE: 0.31658974786599475
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3819, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8810, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[176/300] [24/25] Loss: 0.003567823888733983, RECONS: 0.003234980357810855, DISTANCE: 0.33284348011016845
Test[176/300] [0/2] Loss: 0.004380202852189541, RECONS: 0.0032962914556264877, DISTANCE: 1.0839110612869263
Test[176/300] [1/2] Loss: 0.004403081489726901, RECONS: 0.0031198710203170776, DISTANCE: 1.2832103371620178
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3522, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [0/25] Loss: 0.003860562341287732, RECONS: 0.003516769502311945, DISTANCE: 0.34379279613494873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [1/25] Loss: 0.0037025021156296134, RECONS: 0.0033675723243504763, DISTANCE: 0.3349297046661377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [2/25] Loss: 0.003508645265052716, RECONS: 0.003187865096454819, DISTANCE: 0.32078007857004803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3484, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [3/25] Loss: 0.003473437449429184, RECONS: 0.0031542580109089613, DISTANCE: 0.31917935609817505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3497, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8845, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [4/25] Loss: 0.003495098510757089, RECONS: 0.0031808276660740377, DISTANCE: 0.31427075862884524
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [5/25] Loss: 0.003439151681959629, RECONS: 0.0031215704511851072, DISTANCE: 0.3175811568895976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3732, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [6/25] Loss: 0.003534496096628053, RECONS: 0.003212778762515102, DISTANCE: 0.3217172452381679
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [7/25] Loss: 0.0034806722251232713, RECONS: 0.0031538005569018424, DISTANCE: 0.3268715888261795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [8/25] Loss: 0.0034498743868122497, RECONS: 0.0031237339911361537, DISTANCE: 0.3261403242746989
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [9/25] Loss: 0.0034492405829951167, RECONS: 0.003123265132308006, DISTANCE: 0.3259753942489624
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8624, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [10/25] Loss: 0.003446465548635884, RECONS: 0.0031204636589708653, DISTANCE: 0.3260018283670599
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [11/25] Loss: 0.003489424028278639, RECONS: 0.003164667267507563, DISTANCE: 0.32475672165552777
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3493, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [12/25] Loss: 0.003482761577917979, RECONS: 0.003160880233805913, DISTANCE: 0.321881312590379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [13/25] Loss: 0.0035031905697126475, RECONS: 0.0031816344375589062, DISTANCE: 0.32155610833849224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4119, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [14/25] Loss: 0.003506476851180196, RECONS: 0.003183205130820473, DISTANCE: 0.3232717037200928
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4081, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [15/25] Loss: 0.0035005790123250335, RECONS: 0.003178799248416908, DISTANCE: 0.3217797428369522
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [16/25] Loss: 0.0035167176769498516, RECONS: 0.0031958053655484144, DISTANCE: 0.32091229102190805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4059, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [17/25] Loss: 0.003567209363811546, RECONS: 0.003245830484148529, DISTANCE: 0.32137885358598495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8661, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [18/25] Loss: 0.0035541213093031395, RECONS: 0.003233186042818584, DISTANCE: 0.32093523678026703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4148, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [19/25] Loss: 0.003536536835599691, RECONS: 0.003216803120449185, DISTANCE: 0.31973368525505064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [20/25] Loss: 0.0035223636354896285, RECONS: 0.0032036278529890944, DISTANCE: 0.31873575278690885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [21/25] Loss: 0.0035231534751470795, RECONS: 0.0032043678432025695, DISTANCE: 0.3187855969775807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6227, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3973, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [22/25] Loss: 0.0035249821578516908, RECONS: 0.0032070072408279648, DISTANCE: 0.31797487839408545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3682, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [23/25] Loss: 0.0035113189660478383, RECONS: 0.0031938064785208553, DISTANCE: 0.3175124526023865
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3647, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8812, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[177/300] [24/25] Loss: 0.0035032800398766993, RECONS: 0.0031722602993249894, DISTANCE: 0.3310197067260742
Test[177/300] [0/2] Loss: 0.004133629612624645, RECONS: 0.0031027444638311863, DISTANCE: 1.0308852195739746
Test[177/300] [1/2] Loss: 0.004078821744769812, RECONS: 0.002882972126826644, DISTANCE: 1.1958496570587158
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [0/25] Loss: 0.004196282010525465, RECONS: 0.0038236379623413086, DISTANCE: 0.37264418601989746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [1/25] Loss: 0.003960150992497802, RECONS: 0.003595394780859351, DISTANCE: 0.3647562265396118
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4062, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [2/25] Loss: 0.0036966881404320398, RECONS: 0.003336404295017322, DISTANCE: 0.360283891359965
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8286, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [3/25] Loss: 0.0037111819838173687, RECONS: 0.003360210277605802, DISTANCE: 0.3509717583656311
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8369, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [4/25] Loss: 0.003665478201583028, RECONS: 0.0033174818847328423, DISTANCE: 0.34799633026123045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8842, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [5/25] Loss: 0.0035755208615834513, RECONS: 0.0032399491174146533, DISTANCE: 0.3355717658996582
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3256, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [6/25] Loss: 0.0034684547821858098, RECONS: 0.0031348806473293473, DISTANCE: 0.33357415880475727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [7/25] Loss: 0.003582917939638719, RECONS: 0.0032496423518750817, DISTANCE: 0.33327561616897583
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3783, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8545, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [8/25] Loss: 0.0035498839440859025, RECONS: 0.0032206525405248008, DISTANCE: 0.32923142115275067
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [9/25] Loss: 0.0034915402298793196, RECONS: 0.0031644316390156747, DISTANCE: 0.3271085977554321
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [10/25] Loss: 0.0034651145635342055, RECONS: 0.003135712965476242, DISTANCE: 0.3294016014445912
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [11/25] Loss: 0.0034333443036302924, RECONS: 0.003102220497870197, DISTANCE: 0.33112380901972455
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4236, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [12/25] Loss: 0.0034455120062025692, RECONS: 0.0031155762979044365, DISTANCE: 0.32993571574871355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [13/25] Loss: 0.0034322081732430627, RECONS: 0.003102102000931544, DISTANCE: 0.33010617324284147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [14/25] Loss: 0.0034615138235191503, RECONS: 0.003129651475076874, DISTANCE: 0.3318623542785645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5919, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [15/25] Loss: 0.0035233631206210703, RECONS: 0.003193487136741169, DISTANCE: 0.32987599074840546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3961, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8592, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [16/25] Loss: 0.003507069791393245, RECONS: 0.003179308752912809, DISTANCE: 0.3277610470266903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4202, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [17/25] Loss: 0.0035076362158482275, RECONS: 0.0031803264153293436, DISTANCE: 0.3273098071416219
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4228, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [18/25] Loss: 0.003512267096850433, RECONS: 0.0031849381293317207, DISTANCE: 0.32732897683193807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4129, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [19/25] Loss: 0.003495199396274984, RECONS: 0.0031682510511018337, DISTANCE: 0.32694835066795347
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8638, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [20/25] Loss: 0.0034948503487699087, RECONS: 0.003166592147733484, DISTANCE: 0.3282582021894909
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4167, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8331, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [21/25] Loss: 0.003473740198056806, RECONS: 0.003145494836975228, DISTANCE: 0.3282453634522178
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3541, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8640, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [22/25] Loss: 0.003458136328212593, RECONS: 0.0031302960326328225, DISTANCE: 0.3278402919354646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3485, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [23/25] Loss: 0.0034864395080755153, RECONS: 0.00315893807176811, DISTANCE: 0.32750143110752106
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3318, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[178/300] [24/25] Loss: 0.0035296499542891977, RECONS: 0.003187100300565362, DISTANCE: 0.34254964828491213
Test[178/300] [0/2] Loss: 0.0043954020366072655, RECONS: 0.0032571456395089626, DISTANCE: 1.1382560729980469
Test[178/300] [1/2] Loss: 0.0045423489063978195, RECONS: 0.003031535539776087, DISTANCE: 1.5108132362365723
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3674, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [0/25] Loss: 0.0035550629254430532, RECONS: 0.0032121464610099792, DISTANCE: 0.34291648864746094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3655, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [1/25] Loss: 0.003620460396632552, RECONS: 0.003286572638899088, DISTANCE: 0.3338877558708191
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [2/25] Loss: 0.0036392946106692157, RECONS: 0.0033052743722995124, DISTANCE: 0.3340202172597249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [3/25] Loss: 0.0036014774232171476, RECONS: 0.0032668907078914344, DISTANCE: 0.3345866799354553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [4/25] Loss: 0.003601492289453745, RECONS: 0.003268828010186553, DISTANCE: 0.33266425132751465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3813, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [5/25] Loss: 0.003613194295515617, RECONS: 0.003277707650947074, DISTANCE: 0.3354866107304891
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [6/25] Loss: 0.0035378584039530586, RECONS: 0.0032013450815741506, DISTANCE: 0.33651329789842876
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [7/25] Loss: 0.0035063103132415563, RECONS: 0.0031709372415207326, DISTANCE: 0.33537304401397705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [8/25] Loss: 0.0034767493553873566, RECONS: 0.0031448452629976803, DISTANCE: 0.3319040801790025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [9/25] Loss: 0.0034568159375339747, RECONS: 0.0031303254421800376, DISTANCE: 0.3264904856681824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8650, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [10/25] Loss: 0.0034699959638105197, RECONS: 0.00314230141653256, DISTANCE: 0.32769453525543213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4045, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [11/25] Loss: 0.003451815942147126, RECONS: 0.003127945470623672, DISTANCE: 0.323870450258255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [12/25] Loss: 0.003481804446962017, RECONS: 0.0031581418946958506, DISTANCE: 0.3236625286249014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3928, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [13/25] Loss: 0.0034859692178932683, RECONS: 0.003160762267985514, DISTANCE: 0.3252069183758327
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4037, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [14/25] Loss: 0.003493585220227639, RECONS: 0.0031676942482590674, DISTANCE: 0.3258909463882446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3545, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [15/25] Loss: 0.003466518464847468, RECONS: 0.003138371423119679, DISTANCE: 0.3281470164656639
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3776, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [16/25] Loss: 0.0034570587004589684, RECONS: 0.0031289242016261116, DISTANCE: 0.3281344736323637
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3665, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8743, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [17/25] Loss: 0.0034624948425011504, RECONS: 0.0031364879363940824, DISTANCE: 0.3260068827205234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8702, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [18/25] Loss: 0.003461791386239623, RECONS: 0.0031360046521417403, DISTANCE: 0.3257867097854614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [19/25] Loss: 0.0034351531299762427, RECONS: 0.0031074322294443847, DISTANCE: 0.3277208745479584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [20/25] Loss: 0.0034265644027895873, RECONS: 0.0030977369751781225, DISTANCE: 0.3288273981639317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [21/25] Loss: 0.003434383066963743, RECONS: 0.003104908487082205, DISTANCE: 0.3294745521111922
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3975, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [22/25] Loss: 0.003423785983139406, RECONS: 0.003093567838811356, DISTANCE: 0.3302181181700333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4191, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8518, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [23/25] Loss: 0.00343098749484246, RECONS: 0.0031009772404407463, DISTANCE: 0.33001022537549335
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[179/300] [24/25] Loss: 0.0034601575322449206, RECONS: 0.003114323057234287, DISTANCE: 0.345834436416626
Test[179/300] [0/2] Loss: 0.004327734000980854, RECONS: 0.00327995209954679, DISTANCE: 1.0477819442749023
Test[179/300] [1/2] Loss: 0.004428421845659614, RECONS: 0.003227926674298942, DISTANCE: 1.2004951238632202
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8665, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [0/25] Loss: 0.0031556086614727974, RECONS: 0.0028260890394449234, DISTANCE: 0.3295196294784546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8700, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [1/25] Loss: 0.00320897507481277, RECONS: 0.0028917475137859583, DISTANCE: 0.3172275424003601
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4198, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [2/25] Loss: 0.0032954736767957606, RECONS: 0.002980917226523161, DISTANCE: 0.31455639998118085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [3/25] Loss: 0.0032656004186719656, RECONS: 0.002943816245533526, DISTANCE: 0.321784108877182
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8715, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [4/25] Loss: 0.0033196043223142624, RECONS: 0.0030006928369402885, DISTANCE: 0.31891140937805174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8839, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [5/25] Loss: 0.003445014590397477, RECONS: 0.00312391707363228, DISTANCE: 0.3210974335670471
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3541, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [6/25] Loss: 0.0035591539926826954, RECONS: 0.003227591946987169, DISTANCE: 0.3315619570868356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8451, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [7/25] Loss: 0.0035213175287935883, RECONS: 0.0031952646386343986, DISTANCE: 0.32605281472206116
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4044, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [8/25] Loss: 0.0035217543287823596, RECONS: 0.0031945690667877593, DISTANCE: 0.32718518045213485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4132, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5971, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [9/25] Loss: 0.003480119025334716, RECONS: 0.0031550674233585597, DISTANCE: 0.3250515222549438
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8334, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [10/25] Loss: 0.003473437031392347, RECONS: 0.0031460876237939706, DISTANCE: 0.3273493376645175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4060, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [11/25] Loss: 0.0035154720729527376, RECONS: 0.003181902226060629, DISTANCE: 0.3335697849591573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8602, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [12/25] Loss: 0.003519111366655964, RECONS: 0.003184163710102439, DISTANCE: 0.33494760439946103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [13/25] Loss: 0.003539129542852087, RECONS: 0.0032073300099000335, DISTANCE: 0.3317994901112148
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3783, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [14/25] Loss: 0.0035458994408448536, RECONS: 0.0032112183670202892, DISTANCE: 0.33468103408813477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8598, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [15/25] Loss: 0.003514381969580427, RECONS: 0.003181218955432996, DISTANCE: 0.33316297084093094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8719, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [16/25] Loss: 0.003524479771252064, RECONS: 0.0031919023569892437, DISTANCE: 0.3325773758046767
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [17/25] Loss: 0.003511683446251684, RECONS: 0.003179511508076555, DISTANCE: 0.332171897093455
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [18/25] Loss: 0.003495686663020598, RECONS: 0.003164675000956968, DISTANCE: 0.3310116278497796
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [19/25] Loss: 0.003471704467665404, RECONS: 0.0031394189689308407, DISTANCE: 0.3322854697704315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4058, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [20/25] Loss: 0.0034634548993337723, RECONS: 0.0031314114153030374, DISTANCE: 0.3320434604372297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [21/25] Loss: 0.0034637274432250047, RECONS: 0.0031338756353679028, DISTANCE: 0.32985178990797565
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [22/25] Loss: 0.003456548979991804, RECONS: 0.003128419387275758, DISTANCE: 0.32812957141710364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6235, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2814, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [23/25] Loss: 0.0034414807062906525, RECONS: 0.003111292996133367, DISTANCE: 0.33018768827120465
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2259, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8606, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6284, device='cuda:0', grad_fn=<MeanBackward0>)
Train[180/300] [24/25] Loss: 0.0034682036004960535, RECONS: 0.0031220382917672394, DISTANCE: 0.3461652851104736
Test[180/300] [0/2] Loss: 0.0046777138486504555, RECONS: 0.003776809200644493, DISTANCE: 0.9009045362472534
Test[180/300] [1/2] Loss: 0.004806269193068147, RECONS: 0.0035010247956961393, DISTANCE: 1.3052443861961365
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3057, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [0/25] Loss: 0.0039646863006055355, RECONS: 0.0036778580397367477, DISTANCE: 0.28682804107666016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3141, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [1/25] Loss: 0.0040804625023156404, RECONS: 0.003780859289690852, DISTANCE: 0.2996029853820801
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [2/25] Loss: 0.004061324677119653, RECONS: 0.003737754188477993, DISTANCE: 0.32357025146484375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6211, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [3/25] Loss: 0.003999669454060495, RECONS: 0.0036809039302170277, DISTANCE: 0.3187653124332428
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4044, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [4/25] Loss: 0.003910817205905914, RECONS: 0.003585891192778945, DISTANCE: 0.3249258518218994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4256, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8354, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [5/25] Loss: 0.0038977715109164515, RECONS: 0.0035721317399293184, DISTANCE: 0.32563964525858563
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6218, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4065, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [6/25] Loss: 0.0039293542171695405, RECONS: 0.003608163512711014, DISTANCE: 0.321190561567034
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4173, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [7/25] Loss: 0.003872739733196795, RECONS: 0.0035539032542146742, DISTANCE: 0.31883636116981506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [8/25] Loss: 0.003892243011958069, RECONS: 0.0035720381937507126, DISTANCE: 0.3202047215567695
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8802, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [9/25] Loss: 0.0038499161135405304, RECONS: 0.0035278141498565675, DISTANCE: 0.32210186719894407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8772, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [10/25] Loss: 0.0037864860020239244, RECONS: 0.0034684175413779235, DISTANCE: 0.3180683742869984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3503, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [11/25] Loss: 0.0037472711604398987, RECONS: 0.0034302270699602864, DISTANCE: 0.3170440196990967
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3997, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8649, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [12/25] Loss: 0.0036984362746947086, RECONS: 0.0033810792598300255, DISTANCE: 0.31735695325411284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [13/25] Loss: 0.0036700854044673698, RECONS: 0.0033536958009270684, DISTANCE: 0.3163895436695644
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [14/25] Loss: 0.0036371868879844743, RECONS: 0.0033229566644877194, DISTANCE: 0.31423017183939617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3739, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [15/25] Loss: 0.0036362680548336357, RECONS: 0.003321312178741209, DISTANCE: 0.31495582312345505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8351, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [16/25] Loss: 0.003623032654799959, RECONS: 0.003308204865521368, DISTANCE: 0.31482773668625774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3660, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [17/25] Loss: 0.0036911520874127746, RECONS: 0.0033759587935896385, DISTANCE: 0.3151932424969143
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3495, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [18/25] Loss: 0.0036732589850496304, RECONS: 0.0033581268998157036, DISTANCE: 0.3151320407265111
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3491, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [19/25] Loss: 0.003644674364477396, RECONS: 0.003328955720644444, DISTANCE: 0.3157186031341553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [20/25] Loss: 0.003624954005880725, RECONS: 0.003310731179746134, DISTANCE: 0.31422278994605657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4113, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8606, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [21/25] Loss: 0.003629351860250939, RECONS: 0.0033158444354987955, DISTANCE: 0.313507388938557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [22/25] Loss: 0.0036200832008667612, RECONS: 0.0033065654722082873, DISTANCE: 0.3135176948879076
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4054, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [23/25] Loss: 0.0036242772184778005, RECONS: 0.0033108351150682815, DISTANCE: 0.31344206631183624
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5935, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3606, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[181/300] [24/25] Loss: 0.0037103994842618703, RECONS: 0.0033778606448322535, DISTANCE: 0.3325388050079346
Test[181/300] [0/2] Loss: 0.003857548115774989, RECONS: 0.0030690282583236694, DISTANCE: 0.7885197401046753
Test[181/300] [1/2] Loss: 0.00420934206340462, RECONS: 0.002997587900608778, DISTANCE: 1.2117540836334229
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3620, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8762, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [0/25] Loss: 0.002950909547507763, RECONS: 0.0026063318364322186, DISTANCE: 0.3445777893066406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8743, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [1/25] Loss: 0.0030289876740425825, RECONS: 0.0027092942036688328, DISTANCE: 0.31969356536865234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3231, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [2/25] Loss: 0.0031279114385445914, RECONS: 0.0027935593388974667, DISTANCE: 0.33435217539469403
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [3/25] Loss: 0.0033088578493334353, RECONS: 0.0029734057025052607, DISTANCE: 0.33545219898223877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [4/25] Loss: 0.0034341565798968075, RECONS: 0.0030968021601438522, DISTANCE: 0.3373544692993164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [5/25] Loss: 0.0034545089971895018, RECONS: 0.0031236953024441996, DISTANCE: 0.330813725789388
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [6/25] Loss: 0.003398776087643845, RECONS: 0.0030686531348952223, DISTANCE: 0.3301229647227696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [7/25] Loss: 0.003318303031846881, RECONS: 0.002992542431456968, DISTANCE: 0.325760617852211
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3692, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8651, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [8/25] Loss: 0.003361872914764616, RECONS: 0.003031719864035646, DISTANCE: 0.33015305466122097
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [9/25] Loss: 0.0033722845371812584, RECONS: 0.003037332696840167, DISTANCE: 0.3349518537521362
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [10/25] Loss: 0.0033466671805151486, RECONS: 0.003012989605353637, DISTANCE: 0.333677584474737
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8674, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [11/25] Loss: 0.0033387292254095278, RECONS: 0.0030050476586135724, DISTANCE: 0.33368157347043353
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4280, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8596, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [12/25] Loss: 0.003343170741572976, RECONS: 0.003012723558080884, DISTANCE: 0.33044718779050386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4177, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [13/25] Loss: 0.0033282530161419083, RECONS: 0.002998571194309209, DISTANCE: 0.3296818307467869
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3434, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [14/25] Loss: 0.003348458930850029, RECONS: 0.0030156983838727077, DISTANCE: 0.33276054859161375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [15/25] Loss: 0.0033676150196697563, RECONS: 0.003036536669242196, DISTANCE: 0.33107834309339523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [16/25] Loss: 0.003377396216177765, RECONS: 0.003046618089737261, DISTANCE: 0.3307781219482422
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [17/25] Loss: 0.003400912133252455, RECONS: 0.0030721839025823604, DISTANCE: 0.32872821887334186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5948, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [18/25] Loss: 0.0033929700791639717, RECONS: 0.003064507802360152, DISTANCE: 0.32846226190265854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5923, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [19/25] Loss: 0.0034183472977019846, RECONS: 0.0030910135828889906, DISTANCE: 0.3273337006568909
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4405, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5888, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [20/25] Loss: 0.003435975583713679, RECONS: 0.003109654156668555, DISTANCE: 0.3263214088621594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4413, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [21/25] Loss: 0.0034524566303430634, RECONS: 0.003127310795455494, DISTANCE: 0.3251458135518161
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [22/25] Loss: 0.003444053465500474, RECONS: 0.0031202192640984836, DISTANCE: 0.3238341756488966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6208, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [23/25] Loss: 0.0034174247509023794, RECONS: 0.003093300222341592, DISTANCE: 0.3241245001554489
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3308, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6244, device='cuda:0', grad_fn=<MeanBackward0>)
Train[182/300] [24/25] Loss: 0.0034129719249904157, RECONS: 0.003076585792005062, DISTANCE: 0.33638610363006594
Test[182/300] [0/2] Loss: 0.004512306302785873, RECONS: 0.0035978376399725676, DISTANCE: 0.91446852684021
Test[182/300] [1/2] Loss: 0.004652473144233227, RECONS: 0.003386521013453603, DISTANCE: 1.2659520506858826
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3189, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6257, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [0/25] Loss: 0.003711152356117964, RECONS: 0.0034062820486724377, DISTANCE: 0.3048703670501709
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3386, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [1/25] Loss: 0.003582415636628866, RECONS: 0.00329402566421777, DISTANCE: 0.28839004039764404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3354, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [2/25] Loss: 0.0038140863180160522, RECONS: 0.0035264104759941497, DISTANCE: 0.287675937016805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3605, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [3/25] Loss: 0.0036363903782330453, RECONS: 0.0033461223356425762, DISTANCE: 0.2902681231498718
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4406, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5890, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [4/25] Loss: 0.003601992782205343, RECONS: 0.003305797651410103, DISTANCE: 0.2961951732635498
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5869, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [5/25] Loss: 0.003622541514535745, RECONS: 0.0033227181217322745, DISTANCE: 0.29982344309488934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4485, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8447, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5925, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [6/25] Loss: 0.0036710938438773155, RECONS: 0.0033698402611272676, DISTANCE: 0.30125359126499723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [7/25] Loss: 0.003609867999330163, RECONS: 0.0033100138534791768, DISTANCE: 0.2998541593551636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4245, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [8/25] Loss: 0.0036187879741191864, RECONS: 0.00331912101763818, DISTANCE: 0.299666961034139
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8759, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [9/25] Loss: 0.003595947683788836, RECONS: 0.0032932952279224994, DISTANCE: 0.3026524543762207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [10/25] Loss: 0.003581149313090877, RECONS: 0.0032772050154480066, DISTANCE: 0.30394430594010785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3562, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8786, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [11/25] Loss: 0.0035412942330973842, RECONS: 0.003237485303543508, DISTANCE: 0.3038089374701182
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [12/25] Loss: 0.0035300615171973524, RECONS: 0.003223629417614295, DISTANCE: 0.30643210961268497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3523, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [13/25] Loss: 0.003527116995038731, RECONS: 0.0032198535544531687, DISTANCE: 0.30726345096315655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3515, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [14/25] Loss: 0.0034856931927303475, RECONS: 0.0031770474277436735, DISTANCE: 0.308645764986674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8329, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [15/25] Loss: 0.0034460708557162434, RECONS: 0.003138979693176225, DISTANCE: 0.3070911690592766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3788, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [16/25] Loss: 0.0034371097572147846, RECONS: 0.0031285202952430527, DISTANCE: 0.30858947249019847
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [17/25] Loss: 0.0034465292313446603, RECONS: 0.00313823525276449, DISTANCE: 0.30829399161868626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6233, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3577, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8460, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [18/25] Loss: 0.003458810884407476, RECONS: 0.003151512055314685, DISTANCE: 0.30729883595516805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [19/25] Loss: 0.0034633004222996535, RECONS: 0.0031554777058772744, DISTANCE: 0.3078227162361145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3601, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [20/25] Loss: 0.003460427358125647, RECONS: 0.0031515903260913632, DISTANCE: 0.308837027776809
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [21/25] Loss: 0.0034749628446826882, RECONS: 0.003166519983840937, DISTANCE: 0.308442852713845
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3730, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [22/25] Loss: 0.0034574787739826284, RECONS: 0.0031485841103384028, DISTANCE: 0.3088946549788765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3888, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [23/25] Loss: 0.003449976308426509, RECONS: 0.003141202701954171, DISTANCE: 0.30877359708150226
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6222, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8370, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[183/300] [24/25] Loss: 0.00345500648021698, RECONS: 0.0031320524588227274, DISTANCE: 0.32295401573181154
Test[183/300] [0/2] Loss: 0.0041312542743980885, RECONS: 0.0031698751263320446, DISTANCE: 0.9613790512084961
Test[183/300] [1/2] Loss: 0.004244492622092366, RECONS: 0.0029197377152740955, DISTANCE: 1.3247548937797546
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [0/25] Loss: 0.003721400164067745, RECONS: 0.003431817051023245, DISTANCE: 0.2895832061767578
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8707, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [1/25] Loss: 0.0034931593108922243, RECONS: 0.0031840942101553082, DISTANCE: 0.3090651035308838
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [2/25] Loss: 0.0035466239787638187, RECONS: 0.003233980077008406, DISTANCE: 0.31264392534891766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4046, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8423, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [3/25] Loss: 0.003653493127785623, RECONS: 0.0033307296689599752, DISTANCE: 0.3227634131908417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [4/25] Loss: 0.003593664336949587, RECONS: 0.0032702045515179633, DISTANCE: 0.3234597682952881
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3582, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [5/25] Loss: 0.0035882062123467526, RECONS: 0.0032668768350655832, DISTANCE: 0.32132937510808307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3862, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [6/25] Loss: 0.0035532857956630842, RECONS: 0.0032341477261590107, DISTANCE: 0.3191380500793457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3485, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [7/25] Loss: 0.003486461180727929, RECONS: 0.0031614623148925602, DISTANCE: 0.3249988555908203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [8/25] Loss: 0.0034378852643486527, RECONS: 0.003117655093471209, DISTANCE: 0.3202301661173503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8705, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [9/25] Loss: 0.003463567444123328, RECONS: 0.0031431501265615225, DISTANCE: 0.32041730880737307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6221, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [10/25] Loss: 0.003429859813133424, RECONS: 0.003108416556973349, DISTANCE: 0.32144325429742987
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3583, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [11/25] Loss: 0.0034124411758966744, RECONS: 0.003092735404303918, DISTANCE: 0.3197057743867238
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3270, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [12/25] Loss: 0.0034411828606747664, RECONS: 0.003117033137151828, DISTANCE: 0.3241497278213501
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3754, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [13/25] Loss: 0.003417075495235622, RECONS: 0.003089529578574002, DISTANCE: 0.3275459238461086
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3562, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [14/25] Loss: 0.003395919439693292, RECONS: 0.0030642721336334943, DISTANCE: 0.3316473166147868
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3816, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [15/25] Loss: 0.003376858541741967, RECONS: 0.003047060497920029, DISTANCE: 0.32979805767536163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3774, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [16/25] Loss: 0.003382443751701537, RECONS: 0.003053713562514852, DISTANCE: 0.32873020452611584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [17/25] Loss: 0.003375777741894126, RECONS: 0.0030469707885964047, DISTANCE: 0.3288069698545668
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5862, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [18/25] Loss: 0.003462773625199732, RECONS: 0.0031338674996636414, DISTANCE: 0.3289061533777337
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8692, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [19/25] Loss: 0.003458626486826688, RECONS: 0.003128297603689134, DISTANCE: 0.33032891154289246
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4318, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [20/25] Loss: 0.003447040117212704, RECONS: 0.0031154670286923647, DISTANCE: 0.3315731173469907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [21/25] Loss: 0.003459731783633205, RECONS: 0.0031295659295706587, DISTANCE: 0.33016587929292157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4063, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [22/25] Loss: 0.003472511120059568, RECONS: 0.003141839067330179, DISTANCE: 0.3306720723276553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4136, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [23/25] Loss: 0.0034542151649172106, RECONS: 0.0031244625570252538, DISTANCE: 0.3297526240348816
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3727, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8790, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[184/300] [24/25] Loss: 0.003482168074697256, RECONS: 0.0031398435402661563, DISTANCE: 0.34232454299926757
Test[184/300] [0/2] Loss: 0.004289333708584309, RECONS: 0.003226212691515684, DISTANCE: 1.0631210803985596
Test[184/300] [1/2] Loss: 0.004606693517416716, RECONS: 0.0030774764018133283, DISTANCE: 1.5292171239852905
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [0/25] Loss: 0.003488738089799881, RECONS: 0.0031297029927372932, DISTANCE: 0.35903501510620117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [1/25] Loss: 0.0038525713607668877, RECONS: 0.00350560643710196, DISTANCE: 0.34696483612060547
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3319, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [2/25] Loss: 0.0035899861250072718, RECONS: 0.003250371121490995, DISTANCE: 0.33961490790049237
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3027, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8602, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [3/25] Loss: 0.0034781514550559223, RECONS: 0.0031507527455687523, DISTANCE: 0.3273986577987671
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3582, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [4/25] Loss: 0.0034166719298809765, RECONS: 0.0030901525169610977, DISTANCE: 0.32651939392089846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3304, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [5/25] Loss: 0.00339490893141677, RECONS: 0.003066760099803408, DISTANCE: 0.32814882198969525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3242, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [6/25] Loss: 0.0033488886297813486, RECONS: 0.0030208625498094727, DISTANCE: 0.32802607331957134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3844, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [7/25] Loss: 0.0033188332454301417, RECONS: 0.002991740679135546, DISTANCE: 0.32709257304668427
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6230, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [8/25] Loss: 0.003350047886164652, RECONS: 0.0030249052474068273, DISTANCE: 0.32514264848497176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [9/25] Loss: 0.003314818162471056, RECONS: 0.00299150173086673, DISTANCE: 0.3233164310455322
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3634, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8624, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6259, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [10/25] Loss: 0.003337388244372877, RECONS: 0.0030144970567727632, DISTANCE: 0.3228911920027299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3385, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8463, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6264, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [11/25] Loss: 0.0033417288796044886, RECONS: 0.0030182963431191943, DISTANCE: 0.3234325349330902
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3423, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [12/25] Loss: 0.0034175418997899843, RECONS: 0.003091420351455991, DISTANCE: 0.3261215595098642
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8402, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [13/25] Loss: 0.003387554864665227, RECONS: 0.0030603299216766444, DISTANCE: 0.32722494431904386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5919, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [14/25] Loss: 0.003408886414642135, RECONS: 0.0030775380786508323, DISTANCE: 0.33134833176930745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4135, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8297, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5903, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [15/25] Loss: 0.0034002530883299187, RECONS: 0.003070878912694752, DISTANCE: 0.32937417179346085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4341, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8660, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [16/25] Loss: 0.003430061603841536, RECONS: 0.003099051016547224, DISTANCE: 0.33101057305055503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4439, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [17/25] Loss: 0.0034300588304176927, RECONS: 0.00310201869190981, DISTANCE: 0.32804012298583984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4037, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8698, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [18/25] Loss: 0.0034369042290276603, RECONS: 0.0031097644302797945, DISTANCE: 0.3271397791410747
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8714, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6259, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [19/25] Loss: 0.0034522423637099566, RECONS: 0.0031254265923053026, DISTANCE: 0.3268157482147217
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8821, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [20/25] Loss: 0.003476637936685057, RECONS: 0.00314973728243439, DISTANCE: 0.32690063544682096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8730, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [21/25] Loss: 0.0034944049548357725, RECONS: 0.0031684337247332387, DISTANCE: 0.3259712078354575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [22/25] Loss: 0.0034986668387832847, RECONS: 0.003172130516284834, DISTANCE: 0.32653629779815674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5901, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [23/25] Loss: 0.0034975515639719865, RECONS: 0.0031707342131994665, DISTANCE: 0.326817328731219
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8563, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5942, device='cuda:0', grad_fn=<MeanBackward0>)
Train[185/300] [24/25] Loss: 0.0035283270850777625, RECONS: 0.003185587115585804, DISTANCE: 0.3427399492263794
Test[185/300] [0/2] Loss: 0.0041402108035981655, RECONS: 0.0032018576748669147, DISTANCE: 0.9383530616760254
Test[185/300] [1/2] Loss: 0.004144249251112342, RECONS: 0.0029713779222220182, DISTANCE: 1.1728712916374207
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4252, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8318, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [0/25] Loss: 0.003334660781547427, RECONS: 0.0029947389848530293, DISTANCE: 0.3399217128753662
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4388, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8776, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [1/25] Loss: 0.0036103299353271723, RECONS: 0.0032643150771036744, DISTANCE: 0.3460148572921753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4087, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [2/25] Loss: 0.0035527792448798814, RECONS: 0.003225636746113499, DISTANCE: 0.32714247703552246
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8708, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [3/25] Loss: 0.0035903233801946044, RECONS: 0.0032526447321288288, DISTANCE: 0.33767861127853394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6228, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [4/25] Loss: 0.0035212027374655007, RECONS: 0.003192080603912473, DISTANCE: 0.32912211418151854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8814, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [5/25] Loss: 0.003483078869370123, RECONS: 0.003153095991971592, DISTANCE: 0.329982856909434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [6/25] Loss: 0.0034460374486765693, RECONS: 0.003119083254465035, DISTANCE: 0.32695417744772776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [7/25] Loss: 0.0034484016068745404, RECONS: 0.003121030400507152, DISTANCE: 0.32737119495868683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3482, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [8/25] Loss: 0.003443566228573521, RECONS: 0.0031180719120634925, DISTANCE: 0.32549431588914657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3621, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8460, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [9/25] Loss: 0.0034046575659886003, RECONS: 0.003082537977024913, DISTANCE: 0.3221195936203003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3423, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [10/25] Loss: 0.003360388461839069, RECONS: 0.0030398017684505744, DISTANCE: 0.32058670304038306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3521, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [11/25] Loss: 0.0033178336452692747, RECONS: 0.002997772224868337, DISTANCE: 0.3200614353020986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [12/25] Loss: 0.0033020856969345072, RECONS: 0.002981863378618772, DISTANCE: 0.32022233192737287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6207, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3341, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [13/25] Loss: 0.0032973880048042963, RECONS: 0.0029725301678159405, DISTANCE: 0.32485784803118023
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [14/25] Loss: 0.003362514746064941, RECONS: 0.003038783837109804, DISTANCE: 0.32373091379801433
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2960, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [15/25] Loss: 0.0034054551942972466, RECONS: 0.0030804457783233374, DISTANCE: 0.32500940561294556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5861, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3550, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [16/25] Loss: 0.0034873442149118464, RECONS: 0.0031638346776804503, DISTANCE: 0.32350952485028434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4198, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8299, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5879, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [17/25] Loss: 0.0035216351582979164, RECONS: 0.0031984982908599907, DISTANCE: 0.3231368594699436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8543, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5806, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [18/25] Loss: 0.003551294696272204, RECONS: 0.0032270609425674927, DISTANCE: 0.3242337327254446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4571, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5895, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [19/25] Loss: 0.0035520160337910054, RECONS: 0.0032268973300233483, DISTANCE: 0.3251186847686768
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6209, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4623, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [20/25] Loss: 0.003576875886037236, RECONS: 0.0032521369201796396, DISTANCE: 0.32473894527980257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4308, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [21/25] Loss: 0.003584629453887994, RECONS: 0.0032603431450711055, DISTANCE: 0.32428629289973865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8765, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6317, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [22/25] Loss: 0.0036281738025338755, RECONS: 0.003301887266823779, DISTANCE: 0.3262865284214849
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3684, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8745, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6345, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [23/25] Loss: 0.0036782098468393087, RECONS: 0.003352470404934138, DISTANCE: 0.32573942840099335
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3652, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[186/300] [24/25] Loss: 0.003766809217631817, RECONS: 0.003426973819732666, DISTANCE: 0.3398353815078735
Test[186/300] [0/2] Loss: 0.004591453354805708, RECONS: 0.003441610373556614, DISTANCE: 1.1498428583145142
Test[186/300] [1/2] Loss: 0.00455132219940424, RECONS: 0.0031184502877295017, DISTANCE: 1.4328718781471252
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8754, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [0/25] Loss: 0.004455904476344585, RECONS: 0.0040990328416228294, DISTANCE: 0.35687172412872314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4092, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [1/25] Loss: 0.004235656000673771, RECONS: 0.0039086907636374235, DISTANCE: 0.3269653916358948
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4128, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5864, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [2/25] Loss: 0.004310641127328078, RECONS: 0.003984318890919288, DISTANCE: 0.32632235685984295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4310, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5924, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [3/25] Loss: 0.004175803740508854, RECONS: 0.0038472667802125216, DISTANCE: 0.32853707671165466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [4/25] Loss: 0.004028812982141972, RECONS: 0.0037031506653875113, DISTANCE: 0.32566242218017577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [5/25] Loss: 0.003993057684662442, RECONS: 0.003657556876229743, DISTANCE: 0.33550089597702026
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6211, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3464, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8580, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [6/25] Loss: 0.003935003852737802, RECONS: 0.0035965322250766413, DISTANCE: 0.33847170216696604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3334, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [7/25] Loss: 0.0040509975515306, RECONS: 0.0037144945235922933, DISTANCE: 0.3365031033754349
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3213, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8430, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [8/25] Loss: 0.003978224936872721, RECONS: 0.003642059759133392, DISTANCE: 0.33616522947947186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [9/25] Loss: 0.003932370105758309, RECONS: 0.0035972438286989926, DISTANCE: 0.3351263165473938
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3248, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [10/25] Loss: 0.003874215212735263, RECONS: 0.0035390018231489444, DISTANCE: 0.33521342277526855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3517, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8464, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [11/25] Loss: 0.003788001874151329, RECONS: 0.0034551325952634215, DISTANCE: 0.3328693111737569
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4026, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [12/25] Loss: 0.0037688056472688913, RECONS: 0.0034308301714750435, DISTANCE: 0.3379755111841055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4005, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [13/25] Loss: 0.0037385928111949135, RECONS: 0.0034005865454673767, DISTANCE: 0.33800630058561054
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3895, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [14/25] Loss: 0.003690686030313373, RECONS: 0.003353680716827512, DISTANCE: 0.337005345026652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [15/25] Loss: 0.003656143249827437, RECONS: 0.003319640629342757, DISTANCE: 0.33650265634059906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3600, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8451, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [16/25] Loss: 0.0036235184764818232, RECONS: 0.0032873960376224097, DISTANCE: 0.3361224707435159
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [17/25] Loss: 0.0035912596310178437, RECONS: 0.0032591092943524322, DISTANCE: 0.33215036657121444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5916, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8504, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [18/25] Loss: 0.003606485570535848, RECONS: 0.003274053813105351, DISTANCE: 0.3324317806645444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3491, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [19/25] Loss: 0.003574227308854461, RECONS: 0.0032431290717795493, DISTANCE: 0.3310982584953308
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3534, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [20/25] Loss: 0.003565012976261122, RECONS: 0.003233308870611446, DISTANCE: 0.331704128356207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8268, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [21/25] Loss: 0.0035748006775975227, RECONS: 0.0032426041275770826, DISTANCE: 0.33219657161019067
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [22/25] Loss: 0.0035676830549440956, RECONS: 0.0032365797796165166, DISTANCE: 0.3311032989750738
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8484, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [23/25] Loss: 0.0035728413883286216, RECONS: 0.003241707192501053, DISTANCE: 0.33113421499729156
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6246, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3717, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[187/300] [24/25] Loss: 0.003589607942849398, RECONS: 0.0032410491723567246, DISTANCE: 0.3485587787628174
Test[187/300] [0/2] Loss: 0.004326402209699154, RECONS: 0.0033394009806215763, DISTANCE: 0.9870014190673828
Test[187/300] [1/2] Loss: 0.0043360330164432526, RECONS: 0.003019444760866463, DISTANCE: 1.3165883421897888
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4069, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8646, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [0/25] Loss: 0.0029873931780457497, RECONS: 0.002668933942914009, DISTANCE: 0.31845927238464355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8808, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [1/25] Loss: 0.0032503705006092787, RECONS: 0.0029325454961508512, DISTANCE: 0.31782495975494385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [2/25] Loss: 0.0033411154678712287, RECONS: 0.0030145192674050727, DISTANCE: 0.3265961805979411
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4373, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8749, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [3/25] Loss: 0.0033501136349514127, RECONS: 0.0030246907263062894, DISTANCE: 0.32542291283607483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4391, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8914, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [4/25] Loss: 0.003345180256292224, RECONS: 0.0029988429974764585, DISTANCE: 0.3463372468948364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4220, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [5/25] Loss: 0.003398650985521575, RECONS: 0.00305590588444223, DISTANCE: 0.3427450855573018
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4269, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [6/25] Loss: 0.0034021154112581697, RECONS: 0.0030669506772288252, DISTANCE: 0.3351647172655378
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4178, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [7/25] Loss: 0.0033556479902472347, RECONS: 0.0030153362604323775, DISTANCE: 0.3403117209672928
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4111, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [8/25] Loss: 0.0033738703156510987, RECONS: 0.0030333437284247745, DISTANCE: 0.3405265808105469
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [9/25] Loss: 0.003327567409723997, RECONS: 0.0029910159995779396, DISTANCE: 0.3365513920783997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3720, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8638, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [10/25] Loss: 0.0033410358750684695, RECONS: 0.0030079744121229105, DISTANCE: 0.3330614458430897
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3528, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [11/25] Loss: 0.0033759752986952662, RECONS: 0.0030459180901137493, DISTANCE: 0.33005719383557636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [12/25] Loss: 0.003389919803549464, RECONS: 0.0030597999799423493, DISTANCE: 0.33011980240161604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [13/25] Loss: 0.003402487840503454, RECONS: 0.0030714458553120494, DISTANCE: 0.3310419576508658
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4232, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [14/25] Loss: 0.0034258560587962466, RECONS: 0.0030978152994066478, DISTANCE: 0.32804073492685953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [15/25] Loss: 0.0034084125654771924, RECONS: 0.0030808409937890247, DISTANCE: 0.3275715559720993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4279, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [16/25] Loss: 0.0034367546904832125, RECONS: 0.003109662136172547, DISTANCE: 0.327092542367823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6257, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [17/25] Loss: 0.0034360788866049713, RECONS: 0.0031067512075727186, DISTANCE: 0.32932766940858627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3649, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [18/25] Loss: 0.003429611605641089, RECONS: 0.0031003376689592473, DISTANCE: 0.3292739328585173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [19/25] Loss: 0.003407784691080451, RECONS: 0.0030788777861744166, DISTANCE: 0.32890689969062803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3269, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6244, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [20/25] Loss: 0.003385264359946762, RECONS: 0.0030551497558397906, DISTANCE: 0.3301145973659697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3060, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [21/25] Loss: 0.003396912075748498, RECONS: 0.0030671041247180915, DISTANCE: 0.3298079479824413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3596, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8569, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [22/25] Loss: 0.0034114476293325424, RECONS: 0.0030827863324109626, DISTANCE: 0.3286612914956134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8545, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [23/25] Loss: 0.0034071529710975787, RECONS: 0.0030793571786489338, DISTANCE: 0.3277957836786906
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5941, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[188/300] [24/25] Loss: 0.0034259490203112364, RECONS: 0.003080565072596073, DISTANCE: 0.3453839349746704
Test[188/300] [0/2] Loss: 0.004177417140454054, RECONS: 0.0031840242445468903, DISTANCE: 0.9933929443359375
Test[188/300] [1/2] Loss: 0.00436958228237927, RECONS: 0.00288593047298491, DISTANCE: 1.4836516380310059
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3813, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8305, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [0/25] Loss: 0.0033853473141789436, RECONS: 0.0030222665518522263, DISTANCE: 0.36308085918426514
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3532, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [1/25] Loss: 0.003276557894423604, RECONS: 0.002919471589848399, DISTANCE: 0.3570863604545593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [2/25] Loss: 0.00320408803721269, RECONS: 0.002854874823242426, DISTANCE: 0.34921324253082275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3189, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [3/25] Loss: 0.0032274560653604567, RECONS: 0.002880761749111116, DISTANCE: 0.34669432044029236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3682, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [4/25] Loss: 0.003228913666680455, RECONS: 0.0028822992462664843, DISTANCE: 0.3466144323348999
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [5/25] Loss: 0.0033115928915018835, RECONS: 0.0029716569697484374, DISTANCE: 0.33993591864903766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [6/25] Loss: 0.0032668983497257742, RECONS: 0.0029293168003537823, DISTANCE: 0.33758154937199186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8751, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [7/25] Loss: 0.003320777672342956, RECONS: 0.002987446991028264, DISTANCE: 0.3333306759595871
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4145, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [8/25] Loss: 0.0032990028460820517, RECONS: 0.002968378546130326, DISTANCE: 0.3306243022282918
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4259, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [9/25] Loss: 0.0033270774642005564, RECONS: 0.0029952931916341187, DISTANCE: 0.3317842721939087
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4190, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [10/25] Loss: 0.003308503274721178, RECONS: 0.0029799106361513786, DISTANCE: 0.32859263636849145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4305, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [11/25] Loss: 0.0032756459744026265, RECONS: 0.002946100120122234, DISTANCE: 0.3295458455880483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5900, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4396, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [12/25] Loss: 0.0032736876477988865, RECONS: 0.002943791735630769, DISTANCE: 0.3298958998460036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [13/25] Loss: 0.003296829227890287, RECONS: 0.0029651158090148655, DISTANCE: 0.3317134039742606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3803, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8305, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [14/25] Loss: 0.0032997545010099807, RECONS: 0.002969662022466461, DISTANCE: 0.33009246190388997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3624, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8491, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [15/25] Loss: 0.0032766840449767187, RECONS: 0.0029492810572264716, DISTANCE: 0.3274029716849327
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3621, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [16/25] Loss: 0.0033122428199824166, RECONS: 0.0029843981816049885, DISTANCE: 0.32784461975097656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6211, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3336, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6192, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [17/25] Loss: 0.0033237731679239208, RECONS: 0.0029948175522602266, DISTANCE: 0.32895559734768337
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [18/25] Loss: 0.0033231487032026052, RECONS: 0.0029934810866650784, DISTANCE: 0.32966759330347967
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3492, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8402, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [19/25] Loss: 0.003321213263552636, RECONS: 0.0029920569504611194, DISTANCE: 0.32915628552436826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3613, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8310, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [20/25] Loss: 0.0033188897983304094, RECONS: 0.0029901897956040643, DISTANCE: 0.32869998046330046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8456, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [21/25] Loss: 0.003301338239742274, RECONS: 0.0029721938031302257, DISTANCE: 0.3291444182395935
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4027, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8376, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [22/25] Loss: 0.0032958660335482464, RECONS: 0.0029671406575843043, DISTANCE: 0.3287253535312155
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6212, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4189, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [23/25] Loss: 0.0033075800068521253, RECONS: 0.002978563502741357, DISTANCE: 0.32901648183663684
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8391, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[189/300] [24/25] Loss: 0.003343004947528243, RECONS: 0.0029925396200269462, DISTANCE: 0.3504652976989746
Test[189/300] [0/2] Loss: 0.004360188730061054, RECONS: 0.003268748987466097, DISTANCE: 1.0914394855499268
Test[189/300] [1/2] Loss: 0.004499169299378991, RECONS: 0.002976559568196535, DISTANCE: 1.5226095914840698
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [0/25] Loss: 0.0034122979268431664, RECONS: 0.003057983238250017, DISTANCE: 0.35431456565856934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [1/25] Loss: 0.0031180636724457145, RECONS: 0.002794796251691878, DISTANCE: 0.3232673406600952
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3651, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6250, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [2/25] Loss: 0.0031821544592579207, RECONS: 0.0028691415985425315, DISTANCE: 0.3130127986272176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [3/25] Loss: 0.003420707187615335, RECONS: 0.0031074670841917396, DISTANCE: 0.31324008107185364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3470, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [4/25] Loss: 0.00334645239636302, RECONS: 0.003035620879381895, DISTANCE: 0.3108314752578735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3827, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [5/25] Loss: 0.003328311489894986, RECONS: 0.0030173485865816474, DISTANCE: 0.31096287568410236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3876, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8149, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [6/25] Loss: 0.003342564483838422, RECONS: 0.003024460781099541, DISTANCE: 0.31810368810381207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4376, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5910, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [7/25] Loss: 0.003387645381735638, RECONS: 0.003065588854951784, DISTANCE: 0.32205650210380554
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4128, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8460, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [8/25] Loss: 0.003406205757831534, RECONS: 0.0030856941464460557, DISTANCE: 0.3205115927590264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4087, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [9/25] Loss: 0.003439042833633721, RECONS: 0.0031189553905278445, DISTANCE: 0.32008742094039916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [10/25] Loss: 0.0034154876431619578, RECONS: 0.00308923160826618, DISTANCE: 0.3262560150840066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3332, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6310, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [11/25] Loss: 0.0034942073398269713, RECONS: 0.0031628222592795887, DISTANCE: 0.3313850561777751
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3633, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [12/25] Loss: 0.0035307757162417355, RECONS: 0.003202155913011386, DISTANCE: 0.3286197644013625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8843, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [13/25] Loss: 0.0035364953302113073, RECONS: 0.003208433959766158, DISTANCE: 0.32806133372443064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [14/25] Loss: 0.0035177814774215222, RECONS: 0.003189913121362527, DISTANCE: 0.32786832650502523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4135, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5904, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [15/25] Loss: 0.003537270036758855, RECONS: 0.0032099162781378254, DISTANCE: 0.32735372334718704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4154, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8326, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5887, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [16/25] Loss: 0.003549042623490095, RECONS: 0.0032218872870811645, DISTANCE: 0.3271553025526159
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [17/25] Loss: 0.0035360033572134045, RECONS: 0.003211442756259607, DISTANCE: 0.32456056276957196
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8316, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [18/25] Loss: 0.0035466528130008988, RECONS: 0.0032219563390275367, DISTANCE: 0.32469644044574936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [19/25] Loss: 0.0035366349038667977, RECONS: 0.0032115384470671414, DISTANCE: 0.3250964283943176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [20/25] Loss: 0.0035174201974379165, RECONS: 0.0031933859766771397, DISTANCE: 0.32403419131324407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [21/25] Loss: 0.0035082650349729442, RECONS: 0.0031825665448030286, DISTANCE: 0.3256984623995694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5952, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4255, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8874, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [22/25] Loss: 0.003530529277075244, RECONS: 0.0032053993630182485, DISTANCE: 0.32512989251509955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4247, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8730, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [23/25] Loss: 0.0035300567105878145, RECONS: 0.003206567528347174, DISTANCE: 0.32348915934562683
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4058, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[190/300] [24/25] Loss: 0.003534931829199195, RECONS: 0.003196212528273463, DISTANCE: 0.33871928215026853
Test[190/300] [0/2] Loss: 0.004194476641714573, RECONS: 0.003230720292776823, DISTANCE: 0.9637560844421387
Test[190/300] [1/2] Loss: 0.0043948988895863295, RECONS: 0.003071243059821427, DISTANCE: 1.323655605316162
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8727, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [0/25] Loss: 0.003084513358771801, RECONS: 0.00275797164067626, DISTANCE: 0.3265417814254761
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4116, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8559, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [1/25] Loss: 0.0033416119404137135, RECONS: 0.0030192777048796415, DISTANCE: 0.32233428955078125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [2/25] Loss: 0.003295470029115677, RECONS: 0.0029662378753225007, DISTANCE: 0.32923221588134766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8636, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [3/25] Loss: 0.003380803973414004, RECONS: 0.003054858883842826, DISTANCE: 0.3259451389312744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8284, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [4/25] Loss: 0.003325874824076891, RECONS: 0.0029987906105816363, DISTANCE: 0.32708425521850587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [5/25] Loss: 0.003345431798758606, RECONS: 0.0030223355473329625, DISTANCE: 0.32309627532958984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [6/25] Loss: 0.0033783401429120985, RECONS: 0.0030514134892395566, DISTANCE: 0.32692665713174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4109, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [7/25] Loss: 0.0034158320631831884, RECONS: 0.003089761361479759, DISTANCE: 0.32607071101665497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5932, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4102, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [8/25] Loss: 0.0034570162857158315, RECONS: 0.0031291303069641194, DISTANCE: 0.3278859853744507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4204, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [9/25] Loss: 0.003405155846849084, RECONS: 0.003079039673320949, DISTANCE: 0.32611616849899294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3964, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [10/25] Loss: 0.003414151512763717, RECONS: 0.003091660307042978, DISTANCE: 0.32249119065024634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4284, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [11/25] Loss: 0.003429796837735921, RECONS: 0.0031079186398225525, DISTANCE: 0.3218781848748525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4221, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [12/25] Loss: 0.0034087401492377887, RECONS: 0.0030883084087131116, DISTANCE: 0.32043173679938686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4021, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8496, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [13/25] Loss: 0.0033812349595661673, RECONS: 0.0030608633699427757, DISTANCE: 0.3203715852328709
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8638, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [14/25] Loss: 0.0033588720485568046, RECONS: 0.0030377690214663743, DISTANCE: 0.32110302448272704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8484, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [15/25] Loss: 0.003338191512739286, RECONS: 0.0030157686851453036, DISTANCE: 0.3224228248000145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3606, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [16/25] Loss: 0.003364488701610004, RECONS: 0.0030434010002542942, DISTANCE: 0.32108770398532643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6238, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3661, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [17/25] Loss: 0.003386052829834322, RECONS: 0.003064460948937469, DISTANCE: 0.3215918805864122
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3490, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8765, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [18/25] Loss: 0.003357962239533663, RECONS: 0.0030379019138452256, DISTANCE: 0.32006032843338816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8895, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [19/25] Loss: 0.0033609017031267286, RECONS: 0.003041770134586841, DISTANCE: 0.31913156509399415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [20/25] Loss: 0.003344072394871286, RECONS: 0.0030258105890381905, DISTANCE: 0.31826179935818627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [21/25] Loss: 0.003334418330764906, RECONS: 0.0030138358706608415, DISTANCE: 0.32058244943618774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [22/25] Loss: 0.003325648494469731, RECONS: 0.0030062502533521342, DISTANCE: 0.31939823212830915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8406, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [23/25] Loss: 0.003332281882952278, RECONS: 0.0030136575223878026, DISTANCE: 0.318624347448349
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8179, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[191/300] [24/25] Loss: 0.0033424329478293656, RECONS: 0.0030054971575737, DISTANCE: 0.336935772895813
Test[191/300] [0/2] Loss: 0.0041591026820242405, RECONS: 0.002999756019562483, DISTANCE: 1.1593466997146606
Test[191/300] [1/2] Loss: 0.004319748608395457, RECONS: 0.0027472449000924826, DISTANCE: 1.5725038051605225
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [0/25] Loss: 0.004048194270581007, RECONS: 0.0036905757151544094, DISTANCE: 0.35761845111846924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3703, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [1/25] Loss: 0.004003833280876279, RECONS: 0.0036706754472106695, DISTANCE: 0.33315783739089966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [2/25] Loss: 0.0038028946922471127, RECONS: 0.003485412492106358, DISTANCE: 0.3174821933110555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8409, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [3/25] Loss: 0.0036138545256108046, RECONS: 0.0032976862275972962, DISTANCE: 0.31616827845573425
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3969, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [4/25] Loss: 0.0035200890153646467, RECONS: 0.003213680908083916, DISTANCE: 0.30640807151794436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8862, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [5/25] Loss: 0.0034741881924370923, RECONS: 0.0031701871970047555, DISTANCE: 0.30400097370147705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3942, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8514, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [6/25] Loss: 0.003419949041147317, RECONS: 0.0031104275424565586, DISTANCE: 0.3095214707510812
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8739, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [7/25] Loss: 0.003367387311300263, RECONS: 0.003059447160921991, DISTANCE: 0.30794014036655426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8710, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [8/25] Loss: 0.0034050978461487424, RECONS: 0.003095454407028026, DISTANCE: 0.3096434407764011
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8639, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [9/25] Loss: 0.0034081532387062905, RECONS: 0.0030986608704552054, DISTANCE: 0.3094923734664917
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [10/25] Loss: 0.003374914384701035, RECONS: 0.0030630865261297336, DISTANCE: 0.3118278546766801
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8231, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [11/25] Loss: 0.00335226256477957, RECONS: 0.003033897082787007, DISTANCE: 0.318365474541982
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8290, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5912, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [12/25] Loss: 0.0033473848866728637, RECONS: 0.003028309904038906, DISTANCE: 0.319074979195228
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [13/25] Loss: 0.0033282970045027988, RECONS: 0.0030119351078090923, DISTANCE: 0.3163618871143886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3665, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8339, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [14/25] Loss: 0.003342880805333455, RECONS: 0.003026044523964326, DISTANCE: 0.31683627764383954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3547, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [15/25] Loss: 0.0033434897486586124, RECONS: 0.003025791287655011, DISTANCE: 0.3176984637975693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3269, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6287, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [16/25] Loss: 0.0033320355612565487, RECONS: 0.0030150302028393045, DISTANCE: 0.31700535381541534
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [17/25] Loss: 0.0033557007554918528, RECONS: 0.003038413680365516, DISTANCE: 0.3172870741950141
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5893, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8645, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [18/25] Loss: 0.0033859813242758576, RECONS: 0.0030696013158089236, DISTANCE: 0.31638000513377945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4476, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8250, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5921, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [19/25] Loss: 0.0034006100380793215, RECONS: 0.003083942667581141, DISTANCE: 0.31666737198829653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4620, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5817, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [20/25] Loss: 0.003425454765203453, RECONS: 0.003107716174175342, DISTANCE: 0.31773860113961355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4610, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5784, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [21/25] Loss: 0.003469983729618517, RECONS: 0.0031533816786990924, DISTANCE: 0.3166020566766912
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4655, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5929, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [22/25] Loss: 0.0034753216794975424, RECONS: 0.0031587133872444215, DISTANCE: 0.3166082941967508
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4280, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [23/25] Loss: 0.003500877976572762, RECONS: 0.0031832222011871636, DISTANCE: 0.3176557719707489
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6287, device='cuda:0', grad_fn=<MeanBackward0>)
Train[192/300] [24/25] Loss: 0.003513026814907789, RECONS: 0.0031779593415558337, DISTANCE: 0.3350674676895142
Test[192/300] [0/2] Loss: 0.005294398404657841, RECONS: 0.004313712939620018, DISTANCE: 0.9806852340698242
Test[192/300] [1/2] Loss: 0.005426498129963875, RECONS: 0.004046888556331396, DISTANCE: 1.3796093463897705
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3362, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8773, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6423, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [0/25] Loss: 0.00416853791102767, RECONS: 0.0038807194214314222, DISTANCE: 0.28781843185424805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2856, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6391, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [1/25] Loss: 0.00442384765483439, RECONS: 0.004123933962546289, DISTANCE: 0.2999136447906494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8833, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6305, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [2/25] Loss: 0.004479555568347375, RECONS: 0.004179890189940731, DISTANCE: 0.2996654113133748
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3427, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [3/25] Loss: 0.004214709741063416, RECONS: 0.003908396407496184, DISTANCE: 0.30631333589553833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5924, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [4/25] Loss: 0.004209313169121742, RECONS: 0.0038903160952031613, DISTANCE: 0.31899707317352294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3989, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8338, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5827, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [5/25] Loss: 0.004235213001569112, RECONS: 0.003912535806496938, DISTANCE: 0.3226771950721741
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8367, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5882, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [6/25] Loss: 0.004288084738488708, RECONS: 0.003966194311422961, DISTANCE: 0.32189040524618967
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [7/25] Loss: 0.004247856268193573, RECONS: 0.003928945166990161, DISTANCE: 0.3189110606908798
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8602, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [8/25] Loss: 0.004154627263132069, RECONS: 0.003835413967155748, DISTANCE: 0.31921327114105225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3749, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6286, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [9/25] Loss: 0.004103054199367762, RECONS: 0.0037833428243175147, DISTANCE: 0.3197113394737244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3286, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8750, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6299, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [10/25] Loss: 0.004005247642370788, RECONS: 0.0036877584220333533, DISTANCE: 0.31748917969790375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [11/25] Loss: 0.004001447465270758, RECONS: 0.003682386828586459, DISTANCE: 0.3190605839093526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3298, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [12/25] Loss: 0.003994514270184131, RECONS: 0.0036726373677643444, DISTANCE: 0.3218768468269935
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5907, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3532, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [13/25] Loss: 0.0040660561395010775, RECONS: 0.0037433795098747525, DISTANCE: 0.3226765734808786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8748, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [14/25] Loss: 0.004012077068910003, RECONS: 0.0036897331476211546, DISTANCE: 0.3223438739776611
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [15/25] Loss: 0.00404338441148866, RECONS: 0.0037225761625450104, DISTANCE: 0.32080820202827454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4106, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [16/25] Loss: 0.004023253424640964, RECONS: 0.0037027943386312794, DISTANCE: 0.3204590362661025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4374, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [17/25] Loss: 0.004000965298877822, RECONS: 0.0036792593180305427, DISTANCE: 0.3217059307628208
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4137, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [18/25] Loss: 0.003991427549504135, RECONS: 0.0036713487689236275, DISTANCE: 0.3200787305831909
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [19/25] Loss: 0.003991824167314917, RECONS: 0.003668775944970548, DISTANCE: 0.32304816842079165
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3822, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [20/25] Loss: 0.003967273148841092, RECONS: 0.003643681583482595, DISTANCE: 0.32359151045481366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3736, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8719, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [21/25] Loss: 0.003930438701486723, RECONS: 0.003608528926799243, DISTANCE: 0.32190972566604614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [22/25] Loss: 0.0038965742164493904, RECONS: 0.0035752289240127025, DISTANCE: 0.321345241173454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [23/25] Loss: 0.003880073840264231, RECONS: 0.0035587049399813018, DISTANCE: 0.3213688482840856
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[193/300] [24/25] Loss: 0.0038462360575795174, RECONS: 0.0035100149177014826, DISTANCE: 0.3362210941314697
Test[193/300] [0/2] Loss: 0.0038818141911178827, RECONS: 0.003072874154895544, DISTANCE: 0.8089399337768555
Test[193/300] [1/2] Loss: 0.004088031710125506, RECONS: 0.002808324759826064, DISTANCE: 1.2797067165374756
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [0/25] Loss: 0.003152300603687763, RECONS: 0.002812153659760952, DISTANCE: 0.3401470184326172
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5879, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3653, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [1/25] Loss: 0.00390237127430737, RECONS: 0.003577537601813674, DISTANCE: 0.3248337507247925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [2/25] Loss: 0.003943373604367177, RECONS: 0.0036108107306063175, DISTANCE: 0.3325628439585368
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6221, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3813, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [3/25] Loss: 0.00405893218703568, RECONS: 0.0037266853032633662, DISTANCE: 0.3322468400001526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4057, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [4/25] Loss: 0.003935398580506444, RECONS: 0.00359793808311224, DISTANCE: 0.33746047019958497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [5/25] Loss: 0.003796248696744442, RECONS: 0.003456404898315668, DISTANCE: 0.3398437698682149
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5944, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8699, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [6/25] Loss: 0.003760816595916237, RECONS: 0.003426779926355396, DISTANCE: 0.33403663975851877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [7/25] Loss: 0.0037023898330517113, RECONS: 0.003374834021087736, DISTANCE: 0.3275557905435562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3929, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8688, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [8/25] Loss: 0.0036554605337894624, RECONS: 0.0033274630291594397, DISTANCE: 0.3279974725511339
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3672, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [9/25] Loss: 0.0035946899792179466, RECONS: 0.003268633130937815, DISTANCE: 0.32605681419372556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [10/25] Loss: 0.003576883644034917, RECONS: 0.003249782264571298, DISTANCE: 0.3271013389934193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3970, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8545, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [11/25] Loss: 0.0035212449341391525, RECONS: 0.0031973075044030943, DISTANCE: 0.32393739620844525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8451, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [12/25] Loss: 0.0034691317794987788, RECONS: 0.0031473446243370953, DISTANCE: 0.32178711891174316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [13/25] Loss: 0.0034374057847474304, RECONS: 0.0031158231597925934, DISTANCE: 0.3215825983456203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3530, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8442, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [14/25] Loss: 0.0034207374478379886, RECONS: 0.0030995110981166364, DISTANCE: 0.3212263186772664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3867, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [15/25] Loss: 0.0034079793113050982, RECONS: 0.0030882931605447084, DISTANCE: 0.319686122238636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3271, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [16/25] Loss: 0.0033867332454332534, RECONS: 0.00306369414936532, DISTANCE: 0.32303906889522777
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6226, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [17/25] Loss: 0.0033652389344448843, RECONS: 0.003042775038112369, DISTANCE: 0.32246387004852295
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3064, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [18/25] Loss: 0.0033650296666708434, RECONS: 0.003043095054300992, DISTANCE: 0.3219345870770906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [19/25] Loss: 0.0033437182079069316, RECONS: 0.003023075789678842, DISTANCE: 0.32064238786697385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3224, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [20/25] Loss: 0.003327144697929422, RECONS: 0.003005570587923839, DISTANCE: 0.3215740748814174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3449, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [21/25] Loss: 0.0033269180831584063, RECONS: 0.0030043453867123885, DISTANCE: 0.32257266478105023
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3836, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [22/25] Loss: 0.0033308847949070773, RECONS: 0.0030081385199952383, DISTANCE: 0.3227462405743806
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4046, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8366, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [23/25] Loss: 0.0033315930728955814, RECONS: 0.00300889799837023, DISTANCE: 0.3226950416962306
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8128, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[194/300] [24/25] Loss: 0.00336746453307569, RECONS: 0.003030807711184025, DISTANCE: 0.3366567850112915
Test[194/300] [0/2] Loss: 0.004083025734871626, RECONS: 0.0031857937574386597, DISTANCE: 0.8972320556640625
Test[194/300] [1/2] Loss: 0.004267929354682565, RECONS: 0.0029054933693259954, DISTANCE: 1.362436056137085
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4337, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8543, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [0/25] Loss: 0.003098950022831559, RECONS: 0.0027475773822516203, DISTANCE: 0.35137271881103516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4043, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8300, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [1/25] Loss: 0.0032340881880372763, RECONS: 0.0028848251095041633, DISTANCE: 0.34926313161849976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [2/25] Loss: 0.00321566523052752, RECONS: 0.0028742721769958735, DISTANCE: 0.34139307339986164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8723, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [3/25] Loss: 0.003145224938634783, RECONS: 0.002810376579873264, DISTANCE: 0.3348483443260193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3487, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8867, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6263, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [4/25] Loss: 0.0032154540996998547, RECONS: 0.0028914034832268954, DISTANCE: 0.3240506172180176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3529, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [5/25] Loss: 0.0034626327687874436, RECONS: 0.0031315472830707827, DISTANCE: 0.3310855229695638
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3499, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8719, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [6/25] Loss: 0.0034405721484550406, RECONS: 0.0031123682191329344, DISTANCE: 0.32820396763937815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8798, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [7/25] Loss: 0.003433963982388377, RECONS: 0.0031046198564581573, DISTANCE: 0.32934416830539703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4141, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8244, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5910, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [8/25] Loss: 0.003402354661375284, RECONS: 0.0030746759536365667, DISTANCE: 0.32767874664730495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6214, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4259, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5865, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [9/25] Loss: 0.003565122000873089, RECONS: 0.0032368320506066086, DISTANCE: 0.32828999757766725
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4131, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [10/25] Loss: 0.003530945269052278, RECONS: 0.0032045231200754642, DISTANCE: 0.3264221819964322
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [11/25] Loss: 0.0034733266996530197, RECONS: 0.003147715178783983, DISTANCE: 0.32561154166857403
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3464, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6241, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [12/25] Loss: 0.0035047751779739675, RECONS: 0.003180261396874602, DISTANCE: 0.3245137929916382
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6278, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [13/25] Loss: 0.0035993874272597687, RECONS: 0.0032739531681207673, DISTANCE: 0.32543428455080303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [14/25] Loss: 0.0036089652062704165, RECONS: 0.0032805126315603654, DISTANCE: 0.32845259507497154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [15/25] Loss: 0.003590268752304837, RECONS: 0.0032624026207486168, DISTANCE: 0.3278661444783211
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5971, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [16/25] Loss: 0.0035544338718275816, RECONS: 0.0032281205468975447, DISTANCE: 0.3263133343528299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5862, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [17/25] Loss: 0.0035864613148280317, RECONS: 0.0032601638360776836, DISTANCE: 0.32629748185475665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4324, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5877, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [18/25] Loss: 0.0035932639638256085, RECONS: 0.0032691986814729476, DISTANCE: 0.32406528999930934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4216, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8283, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [19/25] Loss: 0.0036062966333702206, RECONS: 0.0032827195478603243, DISTANCE: 0.3235770881175995
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4007, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [20/25] Loss: 0.0035929642063343807, RECONS: 0.003269688758466925, DISTANCE: 0.32327544689178467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [21/25] Loss: 0.0035825457572090354, RECONS: 0.0032598012952472677, DISTANCE: 0.32274445620450104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8714, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [22/25] Loss: 0.003573215971498386, RECONS: 0.003250018379691502, DISTANCE: 0.32319758249365765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3617, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [23/25] Loss: 0.0035729047667700797, RECONS: 0.0032497698654575893, DISTANCE: 0.3231348892052968
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[195/300] [24/25] Loss: 0.0035735013894736766, RECONS: 0.003233709633350372, DISTANCE: 0.3397917413711548
Test[195/300] [0/2] Loss: 0.003854022826999426, RECONS: 0.0030120722949504852, DISTANCE: 0.841950535774231
Test[195/300] [1/2] Loss: 0.00409692944958806, RECONS: 0.002917224890552461, DISTANCE: 1.1797046065330505
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8534, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [0/25] Loss: 0.0031652976758778095, RECONS: 0.002850346965715289, DISTANCE: 0.3149508237838745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5910, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8334, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5879, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [1/25] Loss: 0.003567094448953867, RECONS: 0.0032574477372691035, DISTANCE: 0.3096467852592468
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6250, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8307, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5875, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [2/25] Loss: 0.004077872106184562, RECONS: 0.00376994744874537, DISTANCE: 0.30792470773061115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4055, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8290, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [3/25] Loss: 0.004068601643666625, RECONS: 0.00376074475934729, DISTANCE: 0.30785688757896423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5935, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [4/25] Loss: 0.003934519365429878, RECONS: 0.003624574700370431, DISTANCE: 0.30994467735290526
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4055, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6194, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [5/25] Loss: 0.003867560997605324, RECONS: 0.0035591146054988108, DISTANCE: 0.3084463874499003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [6/25] Loss: 0.003816354288054364, RECONS: 0.00350568097616945, DISTANCE: 0.31067328793661936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8641, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6222, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [7/25] Loss: 0.00373239628970623, RECONS: 0.003423514775931835, DISTANCE: 0.3088814914226532
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8766, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [8/25] Loss: 0.0037123992676950162, RECONS: 0.0034037556033581495, DISTANCE: 0.3086436457104153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3298, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [9/25] Loss: 0.003661793051287532, RECONS: 0.003345007193274796, DISTANCE: 0.31678584814071653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8423, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [10/25] Loss: 0.00366645801643079, RECONS: 0.003347302596508102, DISTANCE: 0.3191554004495794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8325, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [11/25] Loss: 0.0036733689873168864, RECONS: 0.0033500572317279875, DISTANCE: 0.3233117361863454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [12/25] Loss: 0.0036346097476780415, RECONS: 0.003313566504332882, DISTANCE: 0.3210432162651649
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [13/25] Loss: 0.0036148878446381006, RECONS: 0.003293768153525889, DISTANCE: 0.32111966609954834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3747, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8868, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [14/25] Loss: 0.003641461937998732, RECONS: 0.003317308813954393, DISTANCE: 0.3241531054178874
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3796, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [15/25] Loss: 0.0036290284333517775, RECONS: 0.003306422775494866, DISTANCE: 0.3226056396961212
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3124, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [16/25] Loss: 0.0035811792648233034, RECONS: 0.003253005047821823, DISTANCE: 0.3281741983750287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3848, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [17/25] Loss: 0.003588190599758592, RECONS: 0.0032616056010334026, DISTANCE: 0.32658498154746163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8563, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [18/25] Loss: 0.003573927905802664, RECONS: 0.0032483683776502546, DISTANCE: 0.3255595094279239
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8569, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [19/25] Loss: 0.0035964606562629343, RECONS: 0.003270227590110153, DISTANCE: 0.3262330532073975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3914, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [20/25] Loss: 0.0035750613259595064, RECONS: 0.003250204592144915, DISTANCE: 0.32485672405787874
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [21/25] Loss: 0.0035528770690275865, RECONS: 0.00322779997209595, DISTANCE: 0.32507708397778595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4024, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [22/25] Loss: 0.003544894411512043, RECONS: 0.003219624819314998, DISTANCE: 0.32526957988739014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4108, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [23/25] Loss: 0.0035226484566616514, RECONS: 0.0031990191394773624, DISTANCE: 0.32362930476665497
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4104, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8309, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[196/300] [24/25] Loss: 0.003540453780442476, RECONS: 0.003198683727532625, DISTANCE: 0.34177002906799314
Test[196/300] [0/2] Loss: 0.004002964124083519, RECONS: 0.003047153353691101, DISTANCE: 0.9558107852935791
Test[196/300] [1/2] Loss: 0.004220741800963879, RECONS: 0.002834404702298343, DISTANCE: 1.3863369226455688
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8301, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [0/25] Loss: 0.0034968878608196974, RECONS: 0.0031733072828501463, DISTANCE: 0.32358062267303467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [1/25] Loss: 0.0033239986514672637, RECONS: 0.003017901792190969, DISTANCE: 0.3060968518257141
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4063, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [2/25] Loss: 0.0032415040768682957, RECONS: 0.002929259790107608, DISTANCE: 0.3122442960739136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4026, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [3/25] Loss: 0.0033500894205644727, RECONS: 0.0030344186816364527, DISTANCE: 0.31567075848579407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3946, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [4/25] Loss: 0.0033354304265230893, RECONS: 0.0030128365382552148, DISTANCE: 0.3225939035415649
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [5/25] Loss: 0.0033818251686170697, RECONS: 0.0030507760044808188, DISTANCE: 0.3310491641362508
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4067, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [6/25] Loss: 0.0033053826274616377, RECONS: 0.0029711770891611066, DISTANCE: 0.33420554229191374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4020, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [7/25] Loss: 0.003316531452583149, RECONS: 0.0029816025926265866, DISTANCE: 0.33492885529994965
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4315, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [8/25] Loss: 0.0033655267260554764, RECONS: 0.0030313723254948854, DISTANCE: 0.3341544071833293
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [9/25] Loss: 0.0033996189245954155, RECONS: 0.003063875692896545, DISTANCE: 0.33574322462081907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [10/25] Loss: 0.0033641453536058016, RECONS: 0.0030327777335928245, DISTANCE: 0.3313676118850708
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4274, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [11/25] Loss: 0.0033592948651251695, RECONS: 0.003028489494075378, DISTANCE: 0.330805371205012
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [12/25] Loss: 0.0033712599677248644, RECONS: 0.0030423321474630097, DISTANCE: 0.3289278287153978
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [13/25] Loss: 0.003363948864197092, RECONS: 0.00303463770874909, DISTANCE: 0.3293111664908273
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3492, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [14/25] Loss: 0.0033311265520751475, RECONS: 0.0030033315531909468, DISTANCE: 0.3277950048446655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8639, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [15/25] Loss: 0.003288742867880501, RECONS: 0.0029637158440891653, DISTANCE: 0.3250270262360573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3688, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [16/25] Loss: 0.0033188758637098703, RECONS: 0.0029957851066308864, DISTANCE: 0.32309075664071474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [17/25] Loss: 0.003299479450409611, RECONS: 0.002975445758137438, DISTANCE: 0.324033690823449
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5974, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [18/25] Loss: 0.003303700849707974, RECONS: 0.002981931351027206, DISTANCE: 0.321769494759409
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [19/25] Loss: 0.0033089500735513865, RECONS: 0.002987340756226331, DISTANCE: 0.3216093122959137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [20/25] Loss: 0.0032921953437229, RECONS: 0.0029702792720248303, DISTANCE: 0.32191606362660724
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [21/25] Loss: 0.003281755288216201, RECONS: 0.0029600134161724286, DISTANCE: 0.3217418681491505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6222, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3330, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [22/25] Loss: 0.0032794523235086513, RECONS: 0.0029550305486697216, DISTANCE: 0.3244217737861302
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3624, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [23/25] Loss: 0.003308602152780319, RECONS: 0.0029836657243625573, DISTANCE: 0.32493642965952557
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3542, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[197/300] [24/25] Loss: 0.0033196971379220487, RECONS: 0.0029788706824183464, DISTANCE: 0.34082645416259766
Test[197/300] [0/2] Loss: 0.004342108033597469, RECONS: 0.0032926523126661777, DISTANCE: 1.0494556427001953
Test[197/300] [1/2] Loss: 0.004260593559592962, RECONS: 0.0029733397532254457, DISTANCE: 1.2872536182403564
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [0/25] Loss: 0.003026840277016163, RECONS: 0.0026795193552970886, DISTANCE: 0.3473210334777832
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [1/25] Loss: 0.0037807533517479897, RECONS: 0.0034133128356188536, DISTANCE: 0.3674405813217163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3714, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [2/25] Loss: 0.00369207087593774, RECONS: 0.0033258470551421246, DISTANCE: 0.36622385183970135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [3/25] Loss: 0.0034834244288504124, RECONS: 0.0031261277035810053, DISTANCE: 0.35729673504829407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [4/25] Loss: 0.0034434849396348, RECONS: 0.0030903568491339683, DISTANCE: 0.3531280755996704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [5/25] Loss: 0.003364339548473557, RECONS: 0.003018591863413652, DISTANCE: 0.3457476496696472
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4184, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [6/25] Loss: 0.0033709065589521614, RECONS: 0.00303237685667617, DISTANCE: 0.3385296719414847
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4296, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [7/25] Loss: 0.003320401825476438, RECONS: 0.0029825419769622386, DISTANCE: 0.3378598242998123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8569, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [8/25] Loss: 0.003348657783741752, RECONS: 0.003001793313564526, DISTANCE: 0.3468644354078505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [9/25] Loss: 0.0033536124043166637, RECONS: 0.0030093071283772586, DISTANCE: 0.3443052411079407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3669, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [10/25] Loss: 0.0033020632002841344, RECONS: 0.0029624013907530093, DISTANCE: 0.33966177160089667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8691, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6275, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [11/25] Loss: 0.0032740041303137937, RECONS: 0.002934918428460757, DISTANCE: 0.3390856683254242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3478, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6255, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [12/25] Loss: 0.003376377388261832, RECONS: 0.003039885419779099, DISTANCE: 0.33649192406580997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8514, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [13/25] Loss: 0.0033888932250972304, RECONS: 0.0030524524128330605, DISTANCE: 0.33644077607563566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3894, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8340, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [14/25] Loss: 0.003402761866648992, RECONS: 0.0030693548110624154, DISTANCE: 0.33340702056884763
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4026, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5837, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [15/25] Loss: 0.0034332116483710706, RECONS: 0.003099900233792141, DISTANCE: 0.33331137895584106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4100, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8285, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5850, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [16/25] Loss: 0.003446363460491685, RECONS: 0.00311294781482395, DISTANCE: 0.33341560644261975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4382, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5943, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [17/25] Loss: 0.003481657528835866, RECONS: 0.0031490302385969293, DISTANCE: 0.33262726333406234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4358, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [18/25] Loss: 0.00348990563744385, RECONS: 0.003159351034187957, DISTANCE: 0.3305545794336419
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3929, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [19/25] Loss: 0.003517147141974419, RECONS: 0.003188290458638221, DISTANCE: 0.3288566589355469
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8750, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6242, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [20/25] Loss: 0.003501653205603361, RECONS: 0.003175003088212439, DISTANCE: 0.32665009725661504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8745, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [21/25] Loss: 0.0034994803136214614, RECONS: 0.003172182837839831, DISTANCE: 0.32729745453054254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3336, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [22/25] Loss: 0.003514295271800264, RECONS: 0.003187569151834949, DISTANCE: 0.32672609453615936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3529, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8580, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [23/25] Loss: 0.003499604829509432, RECONS: 0.0031740144962289682, DISTANCE: 0.3255903124809265
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3569, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[198/300] [24/25] Loss: 0.0034990567807108163, RECONS: 0.0031545202434062956, DISTANCE: 0.34453651428222654
Test[198/300] [0/2] Loss: 0.004062638618052006, RECONS: 0.0032352113630622625, DISTANCE: 0.8274270296096802
Test[198/300] [1/2] Loss: 0.004193861270323396, RECONS: 0.003011015593074262, DISTANCE: 1.1828455924987793
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3323, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [0/25] Loss: 0.0028426756616681814, RECONS: 0.0025364956818521023, DISTANCE: 0.3061800003051758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3632, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8159, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [1/25] Loss: 0.0030738558853045106, RECONS: 0.0027327106799930334, DISTANCE: 0.34114521741867065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3478, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8169, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [2/25] Loss: 0.003463135644172629, RECONS: 0.003123647921408216, DISTANCE: 0.33948779106140137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4058, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8448, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [3/25] Loss: 0.003393322112970054, RECONS: 0.0030499136191792786, DISTANCE: 0.3434085249900818
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5960, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4191, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8355, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [4/25] Loss: 0.0034341820981353523, RECONS: 0.003094186866655946, DISTANCE: 0.3399952411651611
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [5/25] Loss: 0.0034170148816580572, RECONS: 0.00308016047347337, DISTANCE: 0.33685441811879474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4393, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [6/25] Loss: 0.0034213178525013582, RECONS: 0.003087205845596535, DISTANCE: 0.33411201408931185
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8729, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [7/25] Loss: 0.0034872914548031986, RECONS: 0.0031532889988739043, DISTANCE: 0.3340024799108505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4371, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8681, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [8/25] Loss: 0.0034788179521759353, RECONS: 0.0031446197794543374, DISTANCE: 0.33419819672902423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6210, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4062, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8719, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [9/25] Loss: 0.0034780276007950308, RECONS: 0.0031458263052627443, DISTANCE: 0.33220131397247316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8847, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [10/25] Loss: 0.0034561744594777174, RECONS: 0.003127066863023422, DISTANCE: 0.32910760966214264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8714, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [11/25] Loss: 0.0034591126216885946, RECONS: 0.0031335013336502016, DISTANCE: 0.32561129331588745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [12/25] Loss: 0.0034755030646920204, RECONS: 0.003149922238662839, DISTANCE: 0.3255808353424072
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [13/25] Loss: 0.003447595617866942, RECONS: 0.003122743235767952, DISTANCE: 0.32485239846365793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [14/25] Loss: 0.003452185851832231, RECONS: 0.0031245081995924314, DISTANCE: 0.3276776631673177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8298, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [15/25] Loss: 0.0034306823508813977, RECONS: 0.0031043181952554733, DISTANCE: 0.3263641595840454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [16/25] Loss: 0.00340323118657312, RECONS: 0.0030771683737197343, DISTANCE: 0.3260628195369945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [17/25] Loss: 0.003396174986846745, RECONS: 0.0030685748335801894, DISTANCE: 0.3276001612345378
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3579, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [18/25] Loss: 0.003405631764938957, RECONS: 0.0030784489537932372, DISTANCE: 0.3271828199687757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8555, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [19/25] Loss: 0.0033934611943550407, RECONS: 0.0030674842884764074, DISTANCE: 0.32597691416740415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8377, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [20/25] Loss: 0.0033795004488811607, RECONS: 0.0030545063228124662, DISTANCE: 0.324994132632301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [21/25] Loss: 0.003370780804702504, RECONS: 0.0030459832209585743, DISTANCE: 0.3247975923798301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [22/25] Loss: 0.0033605893790397954, RECONS: 0.0030350085935028997, DISTANCE: 0.32558078869529394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [23/25] Loss: 0.003343496054488545, RECONS: 0.003018524294020608, DISTANCE: 0.3249717603127162
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3816, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8355, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[199/300] [24/25] Loss: 0.0033599966485053302, RECONS: 0.0030157686304301025, DISTANCE: 0.3442280149459839
Test[199/300] [0/2] Loss: 0.003932962194085121, RECONS: 0.002969442866742611, DISTANCE: 0.9635190963745117
Test[199/300] [1/2] Loss: 0.003926826175302267, RECONS: 0.0026389233535155654, DISTANCE: 1.287902593612671
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [0/25] Loss: 0.003180995350703597, RECONS: 0.002877533435821533, DISTANCE: 0.3034619092941284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3987, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8734, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [1/25] Loss: 0.0032536369981244206, RECONS: 0.002936589065939188, DISTANCE: 0.31704795360565186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6209, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [2/25] Loss: 0.003152398314947883, RECONS: 0.0028356213588267565, DISTANCE: 0.31677699089050293
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [3/25] Loss: 0.003088212222792208, RECONS: 0.002771467959973961, DISTANCE: 0.31674426794052124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [4/25] Loss: 0.003077155817300081, RECONS: 0.0027535975445061923, DISTANCE: 0.32355828285217286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3802, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8364, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [5/25] Loss: 0.0030608126738419137, RECONS: 0.0027395161256814995, DISTANCE: 0.3212965726852417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [6/25] Loss: 0.0031797781786216156, RECONS: 0.0028594889611537966, DISTANCE: 0.3202892371586391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4215, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8287, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [7/25] Loss: 0.0031770495988894254, RECONS: 0.0028577707416843623, DISTANCE: 0.31927886605262756
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [8/25] Loss: 0.003170086614166697, RECONS: 0.0028503596420503324, DISTANCE: 0.31972697046067977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4326, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [9/25] Loss: 0.003175894753076136, RECONS: 0.002854418591596186, DISTANCE: 0.321476149559021
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [10/25] Loss: 0.003173519709062847, RECONS: 0.002852230840785937, DISTANCE: 0.3212888674302535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4163, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [11/25] Loss: 0.0031639291749646268, RECONS: 0.0028412647661753, DISTANCE: 0.32266439994176227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6229, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3715, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8730, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [12/25] Loss: 0.003156743316839521, RECONS: 0.0028350907377898693, DISTANCE: 0.32165257747356707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3745, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [13/25] Loss: 0.003144934357676123, RECONS: 0.0028239843169493334, DISTANCE: 0.3209500312805176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8731, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6296, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [14/25] Loss: 0.0031889565599461395, RECONS: 0.002866542882596453, DISTANCE: 0.32241366704305013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6266, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [15/25] Loss: 0.0031773342634551227, RECONS: 0.0028553978918353096, DISTANCE: 0.32193636894226074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [16/25] Loss: 0.0031698002370403092, RECONS: 0.0028489772915182743, DISTANCE: 0.32082294015323415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8246, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [17/25] Loss: 0.0031922958247984448, RECONS: 0.0028716736705973744, DISTANCE: 0.32062215275234646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8337, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5895, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [18/25] Loss: 0.003182166966756708, RECONS: 0.002862050099984596, DISTANCE: 0.3201168650075009
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3796, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8327, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5874, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [19/25] Loss: 0.0031960383174009623, RECONS: 0.0028761893743649127, DISTANCE: 0.31984893679618837
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4388, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5915, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [20/25] Loss: 0.0032210484191420533, RECONS: 0.00290200449082823, DISTANCE: 0.3190439258302961
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4469, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8373, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [21/25] Loss: 0.0032602393661033025, RECONS: 0.0029393175130032682, DISTANCE: 0.32092184912074695
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4133, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [22/25] Loss: 0.003275431520508035, RECONS: 0.002953500284448914, DISTANCE: 0.32193123257678485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8809, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6291, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [23/25] Loss: 0.0033143353939522058, RECONS: 0.0029927244565139213, DISTANCE: 0.3216109275817871
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3510, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8754, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6246, device='cuda:0', grad_fn=<MeanBackward0>)
Train[200/300] [24/25] Loss: 0.0033391390088945627, RECONS: 0.003003597306087613, DISTANCE: 0.33554169178009036
Test[200/300] [0/2] Loss: 0.004344647750258446, RECONS: 0.003387611359357834, DISTANCE: 0.9570364952087402
Test[200/300] [1/2] Loss: 0.004297793842852116, RECONS: 0.0030755571788176894, DISTANCE: 1.2222366333007812
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [0/25] Loss: 0.003348620142787695, RECONS: 0.003002119716256857, DISTANCE: 0.3465003967285156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3637, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8680, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [1/25] Loss: 0.003388726618140936, RECONS: 0.0030615037539973855, DISTANCE: 0.3272228240966797
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4029, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [2/25] Loss: 0.0035231844522058964, RECONS: 0.003203248605132103, DISTANCE: 0.31993579864501953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3752, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [3/25] Loss: 0.0033822794212028384, RECONS: 0.0030609318055212498, DISTANCE: 0.32134759426116943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4019, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [4/25] Loss: 0.003506350051611662, RECONS: 0.0031865005847066643, DISTANCE: 0.31984949111938477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [5/25] Loss: 0.0034080809370304146, RECONS: 0.0030906907437990108, DISTANCE: 0.31739020347595215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [6/25] Loss: 0.0034119106962212493, RECONS: 0.003087804020781602, DISTANCE: 0.32410669326782227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3889, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [7/25] Loss: 0.0033539183204993606, RECONS: 0.0030350483721122146, DISTANCE: 0.3188699781894684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8425, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [8/25] Loss: 0.003377872027663721, RECONS: 0.003060493773470322, DISTANCE: 0.31737828254699707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3683, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8336, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [9/25] Loss: 0.003338451962918043, RECONS: 0.003018382959999144, DISTANCE: 0.3200690269470215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [10/25] Loss: 0.0033404883208938622, RECONS: 0.0030201328283345156, DISTANCE: 0.32035551287911157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8689, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [11/25] Loss: 0.0033549403306096792, RECONS: 0.003031812064970533, DISTANCE: 0.32312828302383423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3965, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [12/25] Loss: 0.0033446309658197258, RECONS: 0.0030185758279493223, DISTANCE: 0.32605515076563907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3969, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6268, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [13/25] Loss: 0.003440617018246225, RECONS: 0.003114189553473677, DISTANCE: 0.3264274682317461
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4101, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [14/25] Loss: 0.0035028961176673573, RECONS: 0.0031751158957680067, DISTANCE: 0.3277802228927612
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4415, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [15/25] Loss: 0.0034962988138431683, RECONS: 0.00316961039789021, DISTANCE: 0.32668841630220413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4602, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8406, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5934, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [16/25] Loss: 0.003530640826177071, RECONS: 0.003205208039349493, DISTANCE: 0.32543278441709633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4613, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5875, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [17/25] Loss: 0.003604582756654256, RECONS: 0.00328107541685717, DISTANCE: 0.3235073420736525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4075, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [18/25] Loss: 0.0035924546690167566, RECONS: 0.003269360302702377, DISTANCE: 0.32309437425513016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4009, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [19/25] Loss: 0.003565269650425762, RECONS: 0.0032420496339909733, DISTANCE: 0.323220020532608
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3178, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8720, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [20/25] Loss: 0.0035691742253090653, RECONS: 0.003245351536731635, DISTANCE: 0.3238226913270496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8646, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [21/25] Loss: 0.003546174933117899, RECONS: 0.0032218303954736753, DISTANCE: 0.32434453747489234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2746, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [22/25] Loss: 0.003519531045837895, RECONS: 0.003194780453391697, DISTANCE: 0.32475059447081195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8440, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [23/25] Loss: 0.0034968483863243214, RECONS: 0.0031720681969697275, DISTANCE: 0.3247801860173543
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6231, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3545, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8274, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[201/300] [24/25] Loss: 0.0035193723905831576, RECONS: 0.003178504416719079, DISTANCE: 0.34086797714233397
Test[201/300] [0/2] Loss: 0.003979191649705172, RECONS: 0.0031807671766728163, DISTANCE: 0.798424243927002
Test[201/300] [1/2] Loss: 0.0039522547740489244, RECONS: 0.002832321566529572, DISTANCE: 1.1199331879615784
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3475, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8314, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [0/25] Loss: 0.003317357273772359, RECONS: 0.0030021993443369865, DISTANCE: 0.3151578903198242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5945, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3648, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [1/25] Loss: 0.0035742137115448713, RECONS: 0.0032405180390924215, DISTANCE: 0.333695650100708
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6264, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3282, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [2/25] Loss: 0.003540061026190718, RECONS: 0.0032183507767816386, DISTANCE: 0.3217102289199829
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3964, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [3/25] Loss: 0.003418903623241931, RECONS: 0.0030953805544413626, DISTANCE: 0.32352304458618164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [4/25] Loss: 0.0034342029597610236, RECONS: 0.0031129090581089257, DISTANCE: 0.32129385471343996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4092, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8420, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [5/25] Loss: 0.003347522967184583, RECONS: 0.003024438202070693, DISTANCE: 0.3230847120285034
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4176, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [6/25] Loss: 0.0033618981417800698, RECONS: 0.0030397636416767326, DISTANCE: 0.3221344607216971
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4187, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [7/25] Loss: 0.003373729297891259, RECONS: 0.0030516758852172643, DISTANCE: 0.32205337285995483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3653, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [8/25] Loss: 0.003332998603582382, RECONS: 0.0030127056201712955, DISTANCE: 0.32029294967651367
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [9/25] Loss: 0.0033200167817994952, RECONS: 0.003001942951232195, DISTANCE: 0.31807379722595214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3758, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [10/25] Loss: 0.0033033018381419506, RECONS: 0.0029843984679742293, DISTANCE: 0.3189033486626365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3526, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [11/25] Loss: 0.003319807699881494, RECONS: 0.0029988236104448638, DISTANCE: 0.3209840754667918
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8578, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6271, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [12/25] Loss: 0.003303938079625368, RECONS: 0.0029816117961532795, DISTANCE: 0.32232627501854527
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3414, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6207, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [13/25] Loss: 0.00330420137782182, RECONS: 0.002981393614650837, DISTANCE: 0.3228077547890799
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [14/25] Loss: 0.0032909785863012076, RECONS: 0.002967438908914725, DISTANCE: 0.323539670308431
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [15/25] Loss: 0.003259675795561634, RECONS: 0.002934018397354521, DISTANCE: 0.3256573975086212
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3783, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [16/25] Loss: 0.003256272209589096, RECONS: 0.002928031498894972, DISTANCE: 0.32824070313397574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3688, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [17/25] Loss: 0.003244450690949129, RECONS: 0.0029175755464368397, DISTANCE: 0.3268751303354899
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3783, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [18/25] Loss: 0.0032432115465206536, RECONS: 0.0029176798355030386, DISTANCE: 0.32553169601841975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6214, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3775, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [19/25] Loss: 0.0032509343815036117, RECONS: 0.002924393210560083, DISTANCE: 0.3265411496162415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3833, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8793, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [20/25] Loss: 0.0032658738505450032, RECONS: 0.0029377747060997145, DISTANCE: 0.3280991202309018
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [21/25] Loss: 0.0032784200633283367, RECONS: 0.0029506438559937205, DISTANCE: 0.3277761827815663
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [22/25] Loss: 0.0032618881567664766, RECONS: 0.002934786480972948, DISTANCE: 0.3271016556283702
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4252, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [23/25] Loss: 0.003279335117743661, RECONS: 0.002951875765575096, DISTANCE: 0.3274593303600947
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[202/300] [24/25] Loss: 0.0032946458272635937, RECONS: 0.0029522928223013876, DISTANCE: 0.3423529815673828
Test[202/300] [0/2] Loss: 0.0038018610794097185, RECONS: 0.0028822810854762793, DISTANCE: 0.9195799827575684
Test[202/300] [1/2] Loss: 0.004072844865731895, RECONS: 0.0026915183989331126, DISTANCE: 1.38132643699646
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4221, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [0/25] Loss: 0.002963551552966237, RECONS: 0.0026495871134102345, DISTANCE: 0.3139643669128418
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8522, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [1/25] Loss: 0.003061880706809461, RECONS: 0.002747362945228815, DISTANCE: 0.3145177364349365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [2/25] Loss: 0.003050341891745726, RECONS: 0.002739157217244307, DISTANCE: 0.31118468443552655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4266, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [3/25] Loss: 0.0031664876732975245, RECONS: 0.002841499343048781, DISTANCE: 0.32498830556869507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [4/25] Loss: 0.0032051185145974158, RECONS: 0.0028784674126654864, DISTANCE: 0.3266510725021362
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4322, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [5/25] Loss: 0.0033103106543421745, RECONS: 0.0029838489135727286, DISTANCE: 0.3264617323875427
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4032, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8391, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [6/25] Loss: 0.0032911365519144704, RECONS: 0.0029649780730583836, DISTANCE: 0.3261584724698748
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8460, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [7/25] Loss: 0.0032848302798811346, RECONS: 0.00295751474914141, DISTANCE: 0.3273155093193054
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3465, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [8/25] Loss: 0.003257738555678063, RECONS: 0.0029269620103554595, DISTANCE: 0.33077653249104816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6218, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3207, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6266, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [9/25] Loss: 0.0032374907517805696, RECONS: 0.0029099830891937016, DISTANCE: 0.32750763893127444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3145, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6255, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [10/25] Loss: 0.003276315496557138, RECONS: 0.002944707955149087, DISTANCE: 0.3316075151616877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3281, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8555, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [11/25] Loss: 0.003275776980444789, RECONS: 0.002945609778786699, DISTANCE: 0.33016717433929443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3482, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8745, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [12/25] Loss: 0.0032757440080436375, RECONS: 0.002943050187940781, DISTANCE: 0.33269378772148717
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3516, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [13/25] Loss: 0.0032330216407509787, RECONS: 0.002902311073350055, DISTANCE: 0.33071053879601614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [14/25] Loss: 0.0032161680050194264, RECONS: 0.0028865523636341095, DISTANCE: 0.3296156167984009
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8291, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [15/25] Loss: 0.0032027458801167086, RECONS: 0.002867932809749618, DISTANCE: 0.33481304347515106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4133, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8269, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [16/25] Loss: 0.0031919590444030132, RECONS: 0.002858340315630331, DISTANCE: 0.33361870401045857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [17/25] Loss: 0.0031884932735313973, RECONS: 0.00285450153104547, DISTANCE: 0.333991719616784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3681, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [18/25] Loss: 0.003194749330807673, RECONS: 0.002862267796636412, DISTANCE: 0.3324815097608064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3732, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [19/25] Loss: 0.003192631038837135, RECONS: 0.0028597690630704164, DISTANCE: 0.33286194801330565
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3545, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [20/25] Loss: 0.0032192206653278497, RECONS: 0.0028891865430133684, DISTANCE: 0.3300340970357259
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3680, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [21/25] Loss: 0.003247003430839289, RECONS: 0.0029178144283254037, DISTANCE: 0.32918897542086517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [22/25] Loss: 0.0032463038603410773, RECONS: 0.0029184238924442425, DISTANCE: 0.3278799419817717
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4122, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5974, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [23/25] Loss: 0.0032535986004707715, RECONS: 0.0029272144893184304, DISTANCE: 0.3263840824365616
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3255, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[203/300] [24/25] Loss: 0.0032722619641572235, RECONS: 0.00293204297311604, DISTANCE: 0.3402189588546753
Test[203/300] [0/2] Loss: 0.004185261204838753, RECONS: 0.003294296097010374, DISTANCE: 0.8909648656845093
Test[203/300] [1/2] Loss: 0.004412742331624031, RECONS: 0.0030213501304388046, DISTANCE: 1.391391932964325
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4258, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5954, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [0/25] Loss: 0.0037610370200127363, RECONS: 0.0034343856386840343, DISTANCE: 0.3266514539718628
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [1/25] Loss: 0.003476374433375895, RECONS: 0.003154717502184212, DISTANCE: 0.3216569423675537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [2/25] Loss: 0.003273234392205874, RECONS: 0.002954571352650722, DISTANCE: 0.3186630407969157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [3/25] Loss: 0.0031723075080662966, RECONS: 0.0028597518103197217, DISTANCE: 0.3125557005405426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3220, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [4/25] Loss: 0.003196813026443124, RECONS: 0.0028838234953582286, DISTANCE: 0.3129895210266113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3312, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [5/25] Loss: 0.0033228376026575765, RECONS: 0.003010237511868278, DISTANCE: 0.31260011593500775
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3428, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6194, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [6/25] Loss: 0.003329160456944789, RECONS: 0.0030138949597520487, DISTANCE: 0.31526550224849154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3174, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [7/25] Loss: 0.00333095237147063, RECONS: 0.0030160280293785036, DISTANCE: 0.31492434442043304
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6223, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3692, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [8/25] Loss: 0.003364395583048463, RECONS: 0.0030459552589390012, DISTANCE: 0.318440318107605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3717, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [9/25] Loss: 0.0033236676128581165, RECONS: 0.0030052623711526393, DISTANCE: 0.3184052467346191
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3773, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [10/25] Loss: 0.0033141136465763502, RECONS: 0.0029951119372113185, DISTANCE: 0.3190017180009322
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [11/25] Loss: 0.003292164377247294, RECONS: 0.0029748454107902944, DISTANCE: 0.3173189659913381
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [12/25] Loss: 0.0032701407415935625, RECONS: 0.0029496423756847014, DISTANCE: 0.320498356452355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4009, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5973, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [13/25] Loss: 0.0032963628015880075, RECONS: 0.0029719084767358644, DISTANCE: 0.3244543160711016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4168, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [14/25] Loss: 0.003318259802957376, RECONS: 0.002990404174973567, DISTANCE: 0.32785561084747317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4145, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [15/25] Loss: 0.00335403362987563, RECONS: 0.003029091894859448, DISTANCE: 0.3249417170882225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [16/25] Loss: 0.003346678746097228, RECONS: 0.0030236729722031776, DISTANCE: 0.32300576041726503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [17/25] Loss: 0.003346379923944672, RECONS: 0.003024532925337553, DISTANCE: 0.32184698846605087
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3775, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [18/25] Loss: 0.0033680095925535027, RECONS: 0.003047418584556956, DISTANCE: 0.3205909979970832
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [19/25] Loss: 0.0033456443808972834, RECONS: 0.00302456229692325, DISTANCE: 0.3210820734500885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8456, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [20/25] Loss: 0.0033225343185698704, RECONS: 0.003001223506760739, DISTANCE: 0.32131080400376094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8489, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [21/25] Loss: 0.003301880819807676, RECONS: 0.0029816054739058018, DISTANCE: 0.3202753392132846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3985, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [22/25] Loss: 0.0032936869310620036, RECONS: 0.002973241286109323, DISTANCE: 0.32044564122739044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8376, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [23/25] Loss: 0.0032889371505007148, RECONS: 0.0029699704221760235, DISTANCE: 0.31896672149499256
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6267, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8333, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[204/300] [24/25] Loss: 0.0033422957174479963, RECONS: 0.003007996715605259, DISTANCE: 0.33429898738861086
Test[204/300] [0/2] Loss: 0.004023933783173561, RECONS: 0.003254782408475876, DISTANCE: 0.7691510915756226
Test[204/300] [1/2] Loss: 0.004086433909833431, RECONS: 0.0030316906049847603, DISTANCE: 1.0547429919242859
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3226, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8319, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [0/25] Loss: 0.0027880228590220213, RECONS: 0.0024777427315711975, DISTANCE: 0.3102802038192749
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6250, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [1/25] Loss: 0.0029751440742984414, RECONS: 0.002668993314728141, DISTANCE: 0.3061508536338806
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6267, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [2/25] Loss: 0.003054603391016523, RECONS: 0.002744322487463554, DISTANCE: 0.3102809190750122
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3525, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [3/25] Loss: 0.003238180070184171, RECONS: 0.0029295874410308897, DISTANCE: 0.30859264731407166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [4/25] Loss: 0.003160225320607424, RECONS: 0.0028370935004204513, DISTANCE: 0.3231318473815918
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8747, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [5/25] Loss: 0.003192564550166329, RECONS: 0.0028680297158037624, DISTANCE: 0.3245348532994588
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3937, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [6/25] Loss: 0.0031625535671732257, RECONS: 0.0028460409957915545, DISTANCE: 0.3165125846862793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5864, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4048, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8856, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [7/25] Loss: 0.0032136008667293936, RECONS: 0.0028902434569317847, DISTANCE: 0.32335740327835083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4466, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8364, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5907, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [8/25] Loss: 0.003291653132893973, RECONS: 0.0029666664906673962, DISTANCE: 0.32498661677042645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4174, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [9/25] Loss: 0.003389861830510199, RECONS: 0.0030630686320364474, DISTANCE: 0.32679319381713867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4305, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8366, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [10/25] Loss: 0.003363524500111287, RECONS: 0.0030378970656205306, DISTANCE: 0.32562743533741345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3774, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [11/25] Loss: 0.0033220863939883807, RECONS: 0.0029980630885499218, DISTANCE: 0.3240233063697815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6224, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [12/25] Loss: 0.0033491312776907133, RECONS: 0.0030241178420300665, DISTANCE: 0.3250134358039269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [13/25] Loss: 0.003362563738067235, RECONS: 0.0030391833778204663, DISTANCE: 0.3233803595815386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [14/25] Loss: 0.0034769760134319466, RECONS: 0.003150969728206595, DISTANCE: 0.32600627740224203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3364, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [15/25] Loss: 0.0034486466174712405, RECONS: 0.00312401753035374, DISTANCE: 0.3246290758252144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [16/25] Loss: 0.0034187347354257807, RECONS: 0.003093321232453865, DISTANCE: 0.3254134935491225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3620, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8366, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5933, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [17/25] Loss: 0.003413803849576248, RECONS: 0.0030898249242454767, DISTANCE: 0.32397892077763873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3727, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [18/25] Loss: 0.003395948571300036, RECONS: 0.003070284293866471, DISTANCE: 0.32566427557091965
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3929, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [19/25] Loss: 0.0033962768851779402, RECONS: 0.0030708807171322405, DISTANCE: 0.3253961682319641
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [20/25] Loss: 0.0034045714530206864, RECONS: 0.0030809424130157346, DISTANCE: 0.3236290443511236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4109, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [21/25] Loss: 0.0034180011981251564, RECONS: 0.0030923644609918647, DISTANCE: 0.3256367390806025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [22/25] Loss: 0.003418546048519404, RECONS: 0.003092170247565145, DISTANCE: 0.3263758006303207
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4232, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8619, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [23/25] Loss: 0.0034151306026615202, RECONS: 0.003089283282558123, DISTANCE: 0.3258473177750905
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4079, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8338, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[205/300] [24/25] Loss: 0.0034854277409613133, RECONS: 0.003141827527433634, DISTANCE: 0.34360021114349365
Test[205/300] [0/2] Loss: 0.004553004167973995, RECONS: 0.0034401179291307926, DISTANCE: 1.1128864288330078
Test[205/300] [1/2] Loss: 0.004795077256858349, RECONS: 0.0033474222291260958, DISTANCE: 1.4476551413536072
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4382, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5855, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [0/25] Loss: 0.0038904540706425905, RECONS: 0.0035969000309705734, DISTANCE: 0.29355406761169434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4398, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [1/25] Loss: 0.003763881395570934, RECONS: 0.0034531913697719574, DISTANCE: 0.3106900453567505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4311, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [2/25] Loss: 0.0035975856396059194, RECONS: 0.0032692335856457553, DISTANCE: 0.32835205396016437
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [3/25] Loss: 0.0034533002180978656, RECONS: 0.0031236750655807555, DISTANCE: 0.3296251595020294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [4/25] Loss: 0.0033634701743721963, RECONS: 0.0030367817264050244, DISTANCE: 0.32668845653533934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [5/25] Loss: 0.003325830912217498, RECONS: 0.003006806713528931, DISTANCE: 0.3190242250760396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [6/25] Loss: 0.003224817038114582, RECONS: 0.002906613617337176, DISTANCE: 0.3182034492492676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3154, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [7/25] Loss: 0.003240439691580832, RECONS: 0.002917141275247559, DISTANCE: 0.32329845428466797
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3080, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [8/25] Loss: 0.0032431970143483747, RECONS: 0.0029167046304792166, DISTANCE: 0.32649241553412545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3250, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8489, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [9/25] Loss: 0.003343553515151143, RECONS: 0.003019010717980564, DISTANCE: 0.32454280853271483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3131, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [10/25] Loss: 0.003287624737078493, RECONS: 0.002961698771369728, DISTANCE: 0.3259259787472812
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8420, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [11/25] Loss: 0.003271879395470023, RECONS: 0.002945789931497226, DISTANCE: 0.3260894815127055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6227, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8347, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [12/25] Loss: 0.003301571857614013, RECONS: 0.0029742648251927816, DISTANCE: 0.32730704087477464
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [13/25] Loss: 0.0032884973666763733, RECONS: 0.0029625496161835535, DISTANCE: 0.3259477530206953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3928, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [14/25] Loss: 0.0032958527095615863, RECONS: 0.0029712377426524958, DISTANCE: 0.32461496194203693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6242, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [15/25] Loss: 0.0033082265581469983, RECONS: 0.0029837298789061606, DISTANCE: 0.32449667155742645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4023, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8809, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [16/25] Loss: 0.0032999386243960436, RECONS: 0.002975003341870273, DISTANCE: 0.324935281977934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [17/25] Loss: 0.003286039146284262, RECONS: 0.002958320883206195, DISTANCE: 0.32771826452679104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4108, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8645, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [18/25] Loss: 0.0032915821617567225, RECONS: 0.0029617759252065106, DISTANCE: 0.3298062337072272
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4130, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [19/25] Loss: 0.0032865441171452403, RECONS: 0.0029560460126958786, DISTANCE: 0.33049810528755186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4168, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8688, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [20/25] Loss: 0.0032777583692222834, RECONS: 0.0029494574603935084, DISTANCE: 0.3283009131749471
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [21/25] Loss: 0.0032871130494062195, RECONS: 0.0029577559643340382, DISTANCE: 0.3293570876121521
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [22/25] Loss: 0.003292298480949324, RECONS: 0.0029630271373721566, DISTANCE: 0.32927134244338324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3763, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [23/25] Loss: 0.003292141559844216, RECONS: 0.0029632462246809155, DISTANCE: 0.32889533042907715
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3824, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[206/300] [24/25] Loss: 0.0033351477049291135, RECONS: 0.0029895181953907015, DISTANCE: 0.3456295108795166
Test[206/300] [0/2] Loss: 0.004027445800602436, RECONS: 0.003051187377423048, DISTANCE: 0.9762582778930664
Test[206/300] [1/2] Loss: 0.0040324777364730835, RECONS: 0.0027190163964405656, DISTANCE: 1.3134612441062927
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [0/25] Loss: 0.00291350856423378, RECONS: 0.002601420506834984, DISTANCE: 0.31208813190460205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6221, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3891, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [1/25] Loss: 0.0030761953676119447, RECONS: 0.0027677429607138038, DISTANCE: 0.3084524869918823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3780, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [2/25] Loss: 0.0031237179258217416, RECONS: 0.002820472310607632, DISTANCE: 0.30324562390645343
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [3/25] Loss: 0.003139543463476002, RECONS: 0.0028158831410109997, DISTANCE: 0.32366031408309937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [4/25] Loss: 0.0031121741514652966, RECONS: 0.002793461969122291, DISTANCE: 0.31871216297149657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [5/25] Loss: 0.0032002865336835384, RECONS: 0.0028893582445258894, DISTANCE: 0.3109282851219177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [6/25] Loss: 0.0032852185291371177, RECONS: 0.002973023469426802, DISTANCE: 0.3121950626373291
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8377, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [7/25] Loss: 0.0033301958173979074, RECONS: 0.0030154318374115974, DISTANCE: 0.31476399302482605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4280, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [8/25] Loss: 0.0033077391174932322, RECONS: 0.0029920239984575245, DISTANCE: 0.31571512752109104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4317, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8330, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [9/25] Loss: 0.003291993960738182, RECONS: 0.0029730572132393718, DISTANCE: 0.3189367413520813
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4297, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [10/25] Loss: 0.0032515296797183428, RECONS: 0.0029329174748537216, DISTANCE: 0.31861219622872095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5962, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4230, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [11/25] Loss: 0.0032543156606455645, RECONS: 0.002938262051126609, DISTANCE: 0.3160535991191864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [12/25] Loss: 0.0032273838475633124, RECONS: 0.002913247274521452, DISTANCE: 0.3141365693165706
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4032, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [13/25] Loss: 0.0032247201639360617, RECONS: 0.0029087919143161605, DISTANCE: 0.3159282462937491
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [14/25] Loss: 0.0032039744313806296, RECONS: 0.0028831645535926024, DISTANCE: 0.3208098649978638
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [15/25] Loss: 0.0032273437100229785, RECONS: 0.0029058997897664085, DISTANCE: 0.32144390791654587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [16/25] Loss: 0.0032302935142070055, RECONS: 0.0029106170952539236, DISTANCE: 0.3196764062432682
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8387, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [17/25] Loss: 0.003216552768006093, RECONS: 0.0028958781492999857, DISTANCE: 0.3206746114624871
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6213, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [18/25] Loss: 0.0032321428757553037, RECONS: 0.0029105642369311106, DISTANCE: 0.3215786344126651
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8543, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [19/25] Loss: 0.0032162181567400696, RECONS: 0.0028959436109289526, DISTANCE: 0.32027453780174253
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3633, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [20/25] Loss: 0.0032503166502075537, RECONS: 0.0029297854773522843, DISTANCE: 0.3205311582202003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3232, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8395, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [21/25] Loss: 0.00325756129512394, RECONS: 0.002936915155838836, DISTANCE: 0.3206461288712241
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8387, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [22/25] Loss: 0.003233383278079007, RECONS: 0.002913334670112185, DISTANCE: 0.3200485965479975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3742, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8345, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [23/25] Loss: 0.0032235260296147317, RECONS: 0.002901682998829832, DISTANCE: 0.321843018134435
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.5921, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3453, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8338, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[207/300] [24/25] Loss: 0.003219520067796111, RECONS: 0.0028857678920030595, DISTANCE: 0.33375216484069825
Test[207/300] [0/2] Loss: 0.003494016593322158, RECONS: 0.002726089907810092, DISTANCE: 0.7679265737533569
Test[207/300] [1/2] Loss: 0.0037433806573972106, RECONS: 0.0025660721585154533, DISTANCE: 1.1773082613945007
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5941, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [0/25] Loss: 0.003260420635342598, RECONS: 0.0028984434902668, DISTANCE: 0.36197710037231445
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8292, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5897, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [1/25] Loss: 0.0032808181131258607, RECONS: 0.0029450629372149706, DISTANCE: 0.3357551097869873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3902, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8226, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [2/25] Loss: 0.0033001089468598366, RECONS: 0.0029590642855813107, DISTANCE: 0.3410445849100749
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4107, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8329, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [3/25] Loss: 0.0032596506644040346, RECONS: 0.002925615117419511, DISTANCE: 0.3340355157852173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [4/25] Loss: 0.003295617690309882, RECONS: 0.0029665112495422365, DISTANCE: 0.32910642623901365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [5/25] Loss: 0.0032559629374494157, RECONS: 0.002931333767871062, DISTANCE: 0.32462916771570843
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6214, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4174, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [6/25] Loss: 0.0032909321931323837, RECONS: 0.002965934241988829, DISTANCE: 0.32499795300619944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [7/25] Loss: 0.0033264561789110303, RECONS: 0.0030003470019437373, DISTANCE: 0.3261091858148575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8624, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [8/25] Loss: 0.003331204436512457, RECONS: 0.0030011714746554694, DISTANCE: 0.33003297117021346
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [9/25] Loss: 0.003364015487022698, RECONS: 0.003033612738363445, DISTANCE: 0.3304027676582336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4205, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [10/25] Loss: 0.003352987812831998, RECONS: 0.003023053223097866, DISTANCE: 0.329934607852589
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4366, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [11/25] Loss: 0.003351117833517492, RECONS: 0.0030249874495590725, DISTANCE: 0.3261304001013438
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4378, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [12/25] Loss: 0.003328926359804777, RECONS: 0.0030036351571862516, DISTANCE: 0.3252912209584163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8534, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [13/25] Loss: 0.003329911851324141, RECONS: 0.003005562849076731, DISTANCE: 0.32434902020863127
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [14/25] Loss: 0.0033000659042348463, RECONS: 0.0029783357710887986, DISTANCE: 0.3217301448186239
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3441, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [15/25] Loss: 0.003283309022663161, RECONS: 0.0029626919858856127, DISTANCE: 0.32061704993247986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3179, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8706, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [16/25] Loss: 0.003309710540206117, RECONS: 0.0029888948261299554, DISTANCE: 0.32081572448506074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3197, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [17/25] Loss: 0.0032999105104762646, RECONS: 0.002981355271509124, DISTANCE: 0.31855524248547024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3178, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [18/25] Loss: 0.00331773360161797, RECONS: 0.0029993013503324044, DISTANCE: 0.31843225579512746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6248, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [19/25] Loss: 0.0033125359448604287, RECONS: 0.0029935326310805976, DISTANCE: 0.3190033197402954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8356, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [20/25] Loss: 0.0033318334081698033, RECONS: 0.003012865593302108, DISTANCE: 0.3189678192138672
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3937, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8339, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [21/25] Loss: 0.0033241450278596444, RECONS: 0.0030044336824423886, DISTANCE: 0.31971134922721167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4032, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [22/25] Loss: 0.003327922662720084, RECONS: 0.00300828042521101, DISTANCE: 0.31964224317799445
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [23/25] Loss: 0.0033224934013560414, RECONS: 0.003002496106394877, DISTANCE: 0.31999730070432025
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3894, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[208/300] [24/25] Loss: 0.0033652945421636105, RECONS: 0.0030282103177160023, DISTANCE: 0.33708422660827636
Test[208/300] [0/2] Loss: 0.004204824101179838, RECONS: 0.0032681345473974943, DISTANCE: 0.9366893768310547
Test[208/300] [1/2] Loss: 0.0043657319620251656, RECONS: 0.002939449390396476, DISTANCE: 1.4262824058532715
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [0/25] Loss: 0.003124062204733491, RECONS: 0.0028170649893581867, DISTANCE: 0.30699729919433594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3584, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [1/25] Loss: 0.003525424632243812, RECONS: 0.003220750601030886, DISTANCE: 0.3046741485595703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3228, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [2/25] Loss: 0.0036821089840183654, RECONS: 0.003348340823625525, DISTANCE: 0.33376824855804443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3612, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [3/25] Loss: 0.003496244957204908, RECONS: 0.0031670965836383402, DISTANCE: 0.32914844155311584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3793, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8464, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [4/25] Loss: 0.00354154403321445, RECONS: 0.003214898519217968, DISTANCE: 0.32664554119110106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [5/25] Loss: 0.003478754272994896, RECONS: 0.0031524228397756815, DISTANCE: 0.3263314565022786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5952, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4029, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [6/25] Loss: 0.00351144077389368, RECONS: 0.003173991705157927, DISTANCE: 0.3374490737915039
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4215, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [7/25] Loss: 0.00348620890872553, RECONS: 0.0031487817759625614, DISTANCE: 0.33742713928222656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4231, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8463, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [8/25] Loss: 0.003460744964993662, RECONS: 0.0031279769415656724, DISTANCE: 0.3327680163913303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4187, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [9/25] Loss: 0.0034883125685155393, RECONS: 0.003150875773280859, DISTANCE: 0.3374367952346802
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [10/25] Loss: 0.0034890618513930926, RECONS: 0.00314910781823776, DISTANCE: 0.33995404026725073
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8504, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [11/25] Loss: 0.003463893624333044, RECONS: 0.003124418455020835, DISTANCE: 0.33947516481081647
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3728, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [12/25] Loss: 0.0034507015684189703, RECONS: 0.0031121459144812366, DISTANCE: 0.33855564777667707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3512, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8887, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [13/25] Loss: 0.0034599092157025424, RECONS: 0.0031241000230823246, DISTANCE: 0.3358091882296971
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [14/25] Loss: 0.003440557590996226, RECONS: 0.0031063941617806754, DISTANCE: 0.3341634194056193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3345, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [15/25] Loss: 0.0034881132742157206, RECONS: 0.0031539348274236545, DISTANCE: 0.33417844772338867
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8295, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [16/25] Loss: 0.003458103562212166, RECONS: 0.0031255305717315745, DISTANCE: 0.3325729860978968
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8049, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [17/25] Loss: 0.003458024325987531, RECONS: 0.003125984596812891, DISTANCE: 0.3320397204822964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4137, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8200, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5875, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [18/25] Loss: 0.003491228752720513, RECONS: 0.003159691469351712, DISTANCE: 0.33153726552662094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4128, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8353, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [19/25] Loss: 0.0034927991568110884, RECONS: 0.0031619891291484238, DISTANCE: 0.330810010433197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [20/25] Loss: 0.0034689173834132297, RECONS: 0.0031374713428141106, DISTANCE: 0.3314460175377982
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [21/25] Loss: 0.0034570032730698586, RECONS: 0.003127093754962764, DISTANCE: 0.32990949804132635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8784, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [22/25] Loss: 0.0034671068474974322, RECONS: 0.0031374342861058917, DISTANCE: 0.3296725438988727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8916, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6300, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [23/25] Loss: 0.0034813350842644772, RECONS: 0.003152010632523646, DISTANCE: 0.3293244292338689
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3526, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8840, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[209/300] [24/25] Loss: 0.0035075994953513144, RECONS: 0.003162953481078148, DISTANCE: 0.3446460008621216
Test[209/300] [0/2] Loss: 0.004068352282047272, RECONS: 0.0031562643125653267, DISTANCE: 0.9120879173278809
Test[209/300] [1/2] Loss: 0.004186686594039202, RECONS: 0.0029077439103275537, DISTANCE: 1.2789427638053894
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3905, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8787, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [0/25] Loss: 0.0030995355919003487, RECONS: 0.0027702725492417812, DISTANCE: 0.3292630910873413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8651, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [1/25] Loss: 0.0029077481012791395, RECONS: 0.0025968763511627913, DISTANCE: 0.31087177991867065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4170, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5974, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [2/25] Loss: 0.002953716398527225, RECONS: 0.0026416173204779625, DISTANCE: 0.3120990991592407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8214, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [3/25] Loss: 0.0030745716649107635, RECONS: 0.0027665013913065195, DISTANCE: 0.3080703020095825
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4128, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [4/25] Loss: 0.0030920530203729867, RECONS: 0.002770897280424833, DISTANCE: 0.3211557388305664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3983, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [5/25] Loss: 0.003152780622864763, RECONS: 0.0028323326647902527, DISTANCE: 0.3204479416211446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3844, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8268, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [6/25] Loss: 0.0030975754904959884, RECONS: 0.00278088593456362, DISTANCE: 0.3166895253317697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3590, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [7/25] Loss: 0.003107647760771215, RECONS: 0.002791290491586551, DISTANCE: 0.31635722517967224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3572, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [8/25] Loss: 0.0031750560996847022, RECONS: 0.0028567250248872572, DISTANCE: 0.3183310429255168
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [9/25] Loss: 0.0031565075507387517, RECONS: 0.0028365630423650146, DISTANCE: 0.3199444770812988
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [10/25] Loss: 0.0031526605386964297, RECONS: 0.002834552073512565, DISTANCE: 0.3181084286082875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3796, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [11/25] Loss: 0.0031474552815780044, RECONS: 0.002823751089939227, DISTANCE: 0.32370416323343915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [12/25] Loss: 0.003136107698082924, RECONS: 0.002809554893666735, DISTANCE: 0.32655276702000546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4189, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8352, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [13/25] Loss: 0.003146485625100987, RECONS: 0.0028215578391349743, DISTANCE: 0.32492774724960327
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4112, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8347, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [14/25] Loss: 0.003138067464654644, RECONS: 0.0028119384000698726, DISTANCE: 0.32612903118133546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4249, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8293, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [15/25] Loss: 0.003125885996269062, RECONS: 0.0028003017941955477, DISTANCE: 0.32558416575193405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4160, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [16/25] Loss: 0.0031271298169432316, RECONS: 0.0028018531362142634, DISTANCE: 0.3252766482970294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [17/25] Loss: 0.003123487539899846, RECONS: 0.002800756819649703, DISTANCE: 0.32273069355222916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3638, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8707, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [18/25] Loss: 0.0031244248323338596, RECONS: 0.002802066112819471, DISTANCE: 0.3223586960842735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [19/25] Loss: 0.003105799399781972, RECONS: 0.002784272434655577, DISTANCE: 0.32152693867683413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [20/25] Loss: 0.003097448930410402, RECONS: 0.0027771915553048963, DISTANCE: 0.3202573515120007
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8770, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [21/25] Loss: 0.0031678942561318927, RECONS: 0.0028464117150923066, DISTANCE: 0.32148251750252466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3894, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8409, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [22/25] Loss: 0.003167516906219332, RECONS: 0.00284458319251628, DISTANCE: 0.32293368940768036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [23/25] Loss: 0.0031746704189572483, RECONS: 0.002851699352807676, DISTANCE: 0.32297104100386304
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3735, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8305, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[210/300] [24/25] Loss: 0.003217740720137954, RECONS: 0.0028779870830476285, DISTANCE: 0.33975361824035644
Test[210/300] [0/2] Loss: 0.003935209009796381, RECONS: 0.003223281353712082, DISTANCE: 0.7119275331497192
Test[210/300] [1/2] Loss: 0.004159968346357346, RECONS: 0.0030086843762546778, DISTANCE: 1.1512839198112488
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3855, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [0/25] Loss: 0.002723153680562973, RECONS: 0.0023732553236186504, DISTANCE: 0.3498983383178711
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4109, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [1/25] Loss: 0.0029234562534838915, RECONS: 0.002598296385258436, DISTANCE: 0.32515978813171387
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4079, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [2/25] Loss: 0.0030416582400600114, RECONS: 0.002720755680153767, DISTANCE: 0.3209025065104167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [3/25] Loss: 0.0031891490798443556, RECONS: 0.0028613581089302897, DISTANCE: 0.32779091596603394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [4/25] Loss: 0.00312785804271698, RECONS: 0.0028046185150742533, DISTANCE: 0.32323946952819826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [5/25] Loss: 0.003164785564877093, RECONS: 0.00284879837029924, DISTANCE: 0.3159871498743693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4010, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [6/25] Loss: 0.003166586659582598, RECONS: 0.0028500817383506467, DISTANCE: 0.31650487014225553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3759, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [7/25] Loss: 0.003106372751062736, RECONS: 0.002788460493320599, DISTANCE: 0.3179122060537338
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [8/25] Loss: 0.0030781557369563314, RECONS: 0.0027583916671574116, DISTANCE: 0.31976401805877686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8649, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [9/25] Loss: 0.0030832154676318168, RECONS: 0.002761627547442913, DISTANCE: 0.321587872505188
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8563, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [10/25] Loss: 0.0030375225892798467, RECONS: 0.0027175467588346114, DISTANCE: 0.31997578794305975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [11/25] Loss: 0.0030620385659858584, RECONS: 0.0027433258558933935, DISTANCE: 0.3187126616636912
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5941, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [12/25] Loss: 0.003055001931408277, RECONS: 0.0027334379533735607, DISTANCE: 0.3215639224419227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [13/25] Loss: 0.003055064706131816, RECONS: 0.0027314344853428857, DISTANCE: 0.3236301711627415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3735, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [14/25] Loss: 0.003044151266415914, RECONS: 0.002721289700518052, DISTANCE: 0.3228615204493205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8343, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [15/25] Loss: 0.003028233419172466, RECONS: 0.00270571956934873, DISTANCE: 0.32251380383968353
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6206, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3577, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8320, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [16/25] Loss: 0.003012812847052427, RECONS: 0.0026912205469082386, DISTANCE: 0.3215922537971945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8430, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6253, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [17/25] Loss: 0.0030303217289555403, RECONS: 0.002710053464397788, DISTANCE: 0.3202682137489319
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3316, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8555, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6257, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [18/25] Loss: 0.003035952226798001, RECONS: 0.002715698406590443, DISTANCE: 0.3202537674652903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [19/25] Loss: 0.0031065080664120616, RECONS: 0.002786196966189891, DISTANCE: 0.3203110575675964
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [20/25] Loss: 0.0031034061796076243, RECONS: 0.0027832588336120048, DISTANCE: 0.32014729863121394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [21/25] Loss: 0.0030949117975648155, RECONS: 0.002775182492438365, DISTANCE: 0.31972925771366467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8423, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5949, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [22/25] Loss: 0.003129080646549878, RECONS: 0.0028095806584410047, DISTANCE: 0.31949994356735895
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4387, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [23/25] Loss: 0.0031509547164508453, RECONS: 0.0028330645873211324, DISTANCE: 0.3178900827964147
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[211/300] [24/25] Loss: 0.003198747029528022, RECONS: 0.002858038041740656, DISTANCE: 0.34070893287658693
Test[211/300] [0/2] Loss: 0.0036939410492777824, RECONS: 0.0029405676759779453, DISTANCE: 0.753373384475708
Test[211/300] [1/2] Loss: 0.003776291385293007, RECONS: 0.002634586300700903, DISTANCE: 1.14170503616333
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6340, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4183, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [0/25] Loss: 0.0046370429918169975, RECONS: 0.004327187314629555, DISTANCE: 0.30985546112060547
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6261, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [1/25] Loss: 0.004203679971396923, RECONS: 0.003893807763233781, DISTANCE: 0.3098721504211426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3494, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8701, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [2/25] Loss: 0.0040658418244371814, RECONS: 0.0037526142162581286, DISTANCE: 0.3132275740305583
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3291, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8749, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6273, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [3/25] Loss: 0.004378318379167467, RECONS: 0.004049813491292298, DISTANCE: 0.32850486040115356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3480, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8563, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6194, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [4/25] Loss: 0.004259224981069565, RECONS: 0.0039311922155320644, DISTANCE: 0.3280327320098877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [5/25] Loss: 0.004085326683707535, RECONS: 0.003760028708105286, DISTANCE: 0.3252979516983032
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4214, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [6/25] Loss: 0.004018762913931694, RECONS: 0.0036912213877907823, DISTANCE: 0.32754150458744596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4233, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5934, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [7/25] Loss: 0.003897318965755403, RECONS: 0.0035693523823283613, DISTANCE: 0.327966570854187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4237, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8373, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [8/25] Loss: 0.0038314370645417106, RECONS: 0.003503151082744201, DISTANCE: 0.32828595903184676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4214, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [9/25] Loss: 0.0038151070242747665, RECONS: 0.003488061809912324, DISTANCE: 0.327045202255249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [10/25] Loss: 0.003749459600922736, RECONS: 0.003420932557095181, DISTANCE: 0.32852702791040594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8791, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [11/25] Loss: 0.0037028764102918408, RECONS: 0.0033737337216734886, DISTANCE: 0.32914267977078754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [12/25] Loss: 0.0036940470051306943, RECONS: 0.0033638345149274054, DISTANCE: 0.33021247386932373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6278, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [13/25] Loss: 0.0036751400246950133, RECONS: 0.003345758521131107, DISTANCE: 0.32938149145671297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8829, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [14/25] Loss: 0.003641796406979362, RECONS: 0.0033094216603785755, DISTANCE: 0.33237473169962567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3416, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8489, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [15/25] Loss: 0.0035922157258028165, RECONS: 0.003262334255850874, DISTANCE: 0.3298814594745636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [16/25] Loss: 0.0035633880316334613, RECONS: 0.0032336469328797914, DISTANCE: 0.32974109228919535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8319, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [17/25] Loss: 0.0036342913129677377, RECONS: 0.003304870346457594, DISTANCE: 0.3294209573003981
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4170, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5939, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [18/25] Loss: 0.0036029623649818333, RECONS: 0.0032745320349931717, DISTANCE: 0.3284303200872321
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4278, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8304, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [19/25] Loss: 0.0035875027417205272, RECONS: 0.0032593994750641287, DISTANCE: 0.32810325026512144
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4152, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8325, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [20/25] Loss: 0.003563560157393416, RECONS: 0.003236953279979172, DISTANCE: 0.32660685834430514
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4227, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [21/25] Loss: 0.0035573745633221483, RECONS: 0.003231313989751718, DISTANCE: 0.32606054977937177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3975, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [22/25] Loss: 0.0035493502332626476, RECONS: 0.003224553388502935, DISTANCE: 0.3247968165770821
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3959, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [23/25] Loss: 0.0035249255306553096, RECONS: 0.0032007646029038974, DISTANCE: 0.32416089872519177
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2963, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8543, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[212/300] [24/25] Loss: 0.0035159930773079394, RECONS: 0.003179802307859063, DISTANCE: 0.3361907434463501
Test[212/300] [0/2] Loss: 0.0041126674041152, RECONS: 0.0034127943217754364, DISTANCE: 0.6998728513717651
Test[212/300] [1/2] Loss: 0.0041582537814974785, RECONS: 0.00309892650693655, DISTANCE: 1.0593270659446716
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6206, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8451, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [0/25] Loss: 0.003668607445433736, RECONS: 0.0033230397384613752, DISTANCE: 0.3455677032470703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3727, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [1/25] Loss: 0.0036078252596780658, RECONS: 0.00328788417391479, DISTANCE: 0.31994104385375977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5908, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3768, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [2/25] Loss: 0.0037578638487805924, RECONS: 0.0034406202224393687, DISTANCE: 0.3172435760498047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6210, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [3/25] Loss: 0.003546268097124994, RECONS: 0.003226919856388122, DISTANCE: 0.31934821605682373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4197, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8350, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [4/25] Loss: 0.003430764889344573, RECONS: 0.0031130571383982896, DISTANCE: 0.3177077293395996
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4252, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [5/25] Loss: 0.0033928429087003074, RECONS: 0.0030767423644041023, DISTANCE: 0.3161005179087321
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3859, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [6/25] Loss: 0.003423173412946718, RECONS: 0.003107659851333925, DISTANCE: 0.31551352569035124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [7/25] Loss: 0.0033304712851531804, RECONS: 0.003015505732037127, DISTANCE: 0.31496553122997284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [8/25] Loss: 0.00337525907283028, RECONS: 0.0030579555055333506, DISTANCE: 0.31730353832244873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [9/25] Loss: 0.003360301745124161, RECONS: 0.0030417483299970626, DISTANCE: 0.3185533881187439
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4073, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [10/25] Loss: 0.0033496100328524003, RECONS: 0.0030295942825349894, DISTANCE: 0.32001572305505926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4026, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [11/25] Loss: 0.0033534071214186647, RECONS: 0.0030354209011420608, DISTANCE: 0.31798620025316876
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [12/25] Loss: 0.0033641814504964994, RECONS: 0.0030457832528134952, DISTANCE: 0.3183981730387761
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3414, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [13/25] Loss: 0.0033461034264681594, RECONS: 0.0030242702258484705, DISTANCE: 0.3218331677573068
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [14/25] Loss: 0.0033252003913124403, RECONS: 0.003004597531010707, DISTANCE: 0.32060283025105796
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4010, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [15/25] Loss: 0.0033165092900162563, RECONS: 0.0029954637575428933, DISTANCE: 0.32104550302028656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [16/25] Loss: 0.003337575917077415, RECONS: 0.003016224911655573, DISTANCE: 0.32135097419514375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8347, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5948, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [17/25] Loss: 0.003315912287992736, RECONS: 0.0029950634990301398, DISTANCE: 0.3208487629890442
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8322, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5913, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [18/25] Loss: 0.0033052599327148577, RECONS: 0.002983283962270147, DISTANCE: 0.3219759464263916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4115, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [19/25] Loss: 0.003296336974017322, RECONS: 0.0029752676957286893, DISTANCE: 0.3210692524909973
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3864, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8440, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [20/25] Loss: 0.0032794091384857893, RECONS: 0.00295898926976536, DISTANCE: 0.32041984512692406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [21/25] Loss: 0.0033038280459798193, RECONS: 0.0029826594347303562, DISTANCE: 0.32116858525709674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3946, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [22/25] Loss: 0.0032872750990740633, RECONS: 0.0029668444767594337, DISTANCE: 0.3204306001248567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [23/25] Loss: 0.0032896487682592124, RECONS: 0.002968348669431483, DISTANCE: 0.32130007445812225
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[213/300] [24/25] Loss: 0.003295526644214988, RECONS: 0.0029579672031104566, DISTANCE: 0.3375594186782837
Test[213/300] [0/2] Loss: 0.004352197051048279, RECONS: 0.0032386556267738342, DISTANCE: 1.1135412454605103
Test[213/300] [1/2] Loss: 0.004428486572578549, RECONS: 0.0029760519973933697, DISTANCE: 1.4524343609809875
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [0/25] Loss: 0.002957629971206188, RECONS: 0.002620450686663389, DISTANCE: 0.3371793031692505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8304, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5887, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [1/25] Loss: 0.0031563224038109183, RECONS: 0.002831708756275475, DISTANCE: 0.32461363077163696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5938, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4457, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5870, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [2/25] Loss: 0.0030965113546699286, RECONS: 0.0027826623215029636, DISTANCE: 0.3138490120569865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4226, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5931, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [3/25] Loss: 0.0032037865021266043, RECONS: 0.00289211847120896, DISTANCE: 0.3116680085659027
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [4/25] Loss: 0.003165389969944954, RECONS: 0.002849266864359379, DISTANCE: 0.3161230802536011
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [5/25] Loss: 0.0031210334661106267, RECONS: 0.0028061430590848127, DISTANCE: 0.31489036480585736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [6/25] Loss: 0.003099778334477118, RECONS: 0.0027740374207496643, DISTANCE: 0.3257408652986799
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [7/25] Loss: 0.0031963021319825202, RECONS: 0.0028751726204063743, DISTANCE: 0.3211294710636139
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3949, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8721, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [8/25] Loss: 0.0031793721848064, RECONS: 0.0028623272923545707, DISTANCE: 0.31704485416412354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4058, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [9/25] Loss: 0.0031672960612922907, RECONS: 0.0028463399270549417, DISTANCE: 0.32095611095428467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8440, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [10/25] Loss: 0.00316296020438048, RECONS: 0.0028396217279474845, DISTANCE: 0.3233384544199163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [11/25] Loss: 0.0031832969786288836, RECONS: 0.0028578475466929376, DISTANCE: 0.32544941703478497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6234, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3541, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8396, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [12/25] Loss: 0.0032188483298971103, RECONS: 0.0028905472180877742, DISTANCE: 0.3283010904605572
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8534, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [13/25] Loss: 0.0031911697338468264, RECONS: 0.0028641022508963943, DISTANCE: 0.3270674688475473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [14/25] Loss: 0.0031929459888488053, RECONS: 0.0028667426202446224, DISTANCE: 0.32620336214701334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [15/25] Loss: 0.003206490000593476, RECONS: 0.0028825035697082058, DISTANCE: 0.3239864259958267
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [16/25] Loss: 0.003207989489002263, RECONS: 0.0028842959196909387, DISTANCE: 0.32369356996872845
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3713, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [17/25] Loss: 0.0032574531441140506, RECONS: 0.002936253401761254, DISTANCE: 0.3211997350056966
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8340, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [18/25] Loss: 0.0032618949312324588, RECONS: 0.0029400578013768323, DISTANCE: 0.3218371240716231
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4042, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8334, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [19/25] Loss: 0.0032723075128160417, RECONS: 0.0029502890771254896, DISTANCE: 0.32201842665672303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4204, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [20/25] Loss: 0.0032677938052940937, RECONS: 0.0029476632231048177, DISTANCE: 0.320130569594247
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [21/25] Loss: 0.0032688879238610916, RECONS: 0.0029484681277112527, DISTANCE: 0.32041978294199164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8321, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [22/25] Loss: 0.003261458968905651, RECONS: 0.002941412638629908, DISTANCE: 0.3200463160224583
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4112, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [23/25] Loss: 0.0032535076704031476, RECONS: 0.002932521611607323, DISTANCE: 0.3209860424200694
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3965, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[214/300] [24/25] Loss: 0.003256879961118102, RECONS: 0.0029208160936832427, DISTANCE: 0.33606385231018066
Test[214/300] [0/2] Loss: 0.004187323153018951, RECONS: 0.003125903196632862, DISTANCE: 1.0614197254180908
Test[214/300] [1/2] Loss: 0.004145454149693251, RECONS: 0.0027742681559175253, DISTANCE: 1.371185839176178
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [0/25] Loss: 0.0031461971811950207, RECONS: 0.00285811978392303, DISTANCE: 0.28807735443115234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [1/25] Loss: 0.0033189255045726895, RECONS: 0.003011885331943631, DISTANCE: 0.30704009532928467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [2/25] Loss: 0.0032407065543035665, RECONS: 0.0029325089417397976, DISTANCE: 0.3081975777943929
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8464, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [3/25] Loss: 0.003174025216139853, RECONS: 0.002864890731871128, DISTANCE: 0.30913448333740234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8282, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [4/25] Loss: 0.0031749134417623282, RECONS: 0.0028635864611715077, DISTANCE: 0.3113269805908203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8341, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [5/25] Loss: 0.0031749604968354106, RECONS: 0.0028621716191992164, DISTANCE: 0.31278886397679645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8448, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [6/25] Loss: 0.0031978258796568427, RECONS: 0.002885738753580621, DISTANCE: 0.3120871101106916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8307, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [7/25] Loss: 0.0031713739736005664, RECONS: 0.002858884952729568, DISTANCE: 0.31248900294303894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5938, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [8/25] Loss: 0.0033343248586687776, RECONS: 0.0030200177441454595, DISTANCE: 0.3143070803748237
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5954, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [9/25] Loss: 0.003309309366159141, RECONS: 0.0029958788538351653, DISTANCE: 0.3134304881095886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4243, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [10/25] Loss: 0.0033834768586199393, RECONS: 0.003069658594375307, DISTANCE: 0.313818248835477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4218, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8324, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [11/25] Loss: 0.0033743151579983532, RECONS: 0.0030594738588357964, DISTANCE: 0.3148412803808848
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4006, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [12/25] Loss: 0.0033500080283444663, RECONS: 0.003032911855440873, DISTANCE: 0.3170961600083571
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6272, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [13/25] Loss: 0.003328137648557978, RECONS: 0.003010311396792531, DISTANCE: 0.31782623699733187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8637, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6292, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [14/25] Loss: 0.0033269131556153296, RECONS: 0.0030101360753178596, DISTANCE: 0.3167770703633626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8649, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6262, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [15/25] Loss: 0.0033195930445799604, RECONS: 0.0030018855904927477, DISTANCE: 0.31770744919776917
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8518, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [16/25] Loss: 0.0033216131714117877, RECONS: 0.003004585036679226, DISTANCE: 0.31702812980203066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4035, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8463, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [17/25] Loss: 0.0033359710101245176, RECONS: 0.003017841799495121, DISTANCE: 0.31812920835283065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5938, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4007, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5906, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [18/25] Loss: 0.003377284303209499, RECONS: 0.003057270850005903, DISTANCE: 0.3200134415375559
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4108, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5887, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [19/25] Loss: 0.0034053839626722038, RECONS: 0.0030831170617602764, DISTANCE: 0.32226688265800474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4321, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8491, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [20/25] Loss: 0.003408730828336307, RECONS: 0.003087342173481981, DISTANCE: 0.32138863631657194
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4361, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [21/25] Loss: 0.0034097028388218446, RECONS: 0.0030872188826006923, DISTANCE: 0.322483935139396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4255, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [22/25] Loss: 0.003404267243636043, RECONS: 0.0030828724392568288, DISTANCE: 0.3213947804077812
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3371, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [23/25] Loss: 0.0033939864952117205, RECONS: 0.0030711160021989294, DISTANCE: 0.32287047306696576
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3417, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6253, device='cuda:0', grad_fn=<MeanBackward0>)
Train[215/300] [24/25] Loss: 0.003426244091242552, RECONS: 0.003091051112860441, DISTANCE: 0.33519295692443846
Test[215/300] [0/2] Loss: 0.0044801863841712475, RECONS: 0.003631393890827894, DISTANCE: 0.848792552947998
Test[215/300] [1/2] Loss: 0.004557927371934056, RECONS: 0.003269860288128257, DISTANCE: 1.2880671620368958
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6201, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [0/25] Loss: 0.003579714335501194, RECONS: 0.003242749720811844, DISTANCE: 0.3369647264480591
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [1/25] Loss: 0.004265677882358432, RECONS: 0.003925911616533995, DISTANCE: 0.33976632356643677
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3654, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [2/25] Loss: 0.0038607874885201454, RECONS: 0.003521741833537817, DISTANCE: 0.3390457232793172
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5931, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3732, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8395, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [3/25] Loss: 0.0038393876748159528, RECONS: 0.0035053727333433926, DISTANCE: 0.33401498198509216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [4/25] Loss: 0.0036648085806518793, RECONS: 0.003328407322987914, DISTANCE: 0.3364012956619263
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4211, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [5/25] Loss: 0.0036392560383925834, RECONS: 0.0033037125831469893, DISTANCE: 0.33554349342981976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4399, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8328, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5863, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [6/25] Loss: 0.003646515043718474, RECONS: 0.0033173205863152233, DISTANCE: 0.3291944946561541
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4428, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8283, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5942, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [7/25] Loss: 0.003625112120062113, RECONS: 0.0032995765504892915, DISTANCE: 0.3255356103181839
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4244, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5967, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [8/25] Loss: 0.003645291370857093, RECONS: 0.003320158433376087, DISTANCE: 0.32513296604156494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [9/25] Loss: 0.0035922129871323706, RECONS: 0.003270179172977805, DISTANCE: 0.32203384637832644
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6206, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3332, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8744, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6272, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [10/25] Loss: 0.0035147052046588874, RECONS: 0.003195137886161154, DISTANCE: 0.31956734440543433
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3298, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8769, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6346, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [11/25] Loss: 0.003522773001653453, RECONS: 0.003201747080311179, DISTANCE: 0.32102593779563904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6295, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [12/25] Loss: 0.0035061440609682063, RECONS: 0.003187405160413339, DISTANCE: 0.31873891903803897
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3279, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8731, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [13/25] Loss: 0.003503749130426773, RECONS: 0.003185438973430012, DISTANCE: 0.31831016710826326
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3692, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8439, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [14/25] Loss: 0.0034788337380935747, RECONS: 0.0031607082889725763, DISTANCE: 0.31812546253204343
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8272, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [15/25] Loss: 0.00344589191081468, RECONS: 0.0031295380467781797, DISTANCE: 0.3163538798689842
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4061, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8257, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5892, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [16/25] Loss: 0.003443053170271656, RECONS: 0.0031265164040686455, DISTANCE: 0.3165367841720581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4386, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8288, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5862, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [17/25] Loss: 0.0034891713488226137, RECONS: 0.003170444720631672, DISTANCE: 0.31872663895289105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4262, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5968, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [18/25] Loss: 0.0034846118773872916, RECONS: 0.0031648193804645224, DISTANCE: 0.31979250280480637
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8504, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [19/25] Loss: 0.0034554659156128763, RECONS: 0.003135896276216954, DISTANCE: 0.31956964135169985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3946, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [20/25] Loss: 0.003440878897284468, RECONS: 0.0031213703387904736, DISTANCE: 0.31950855822790236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8690, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [21/25] Loss: 0.0034245980840007014, RECONS: 0.003105958256955174, DISTANCE: 0.31863982569087634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3448, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [22/25] Loss: 0.0034699174474276924, RECONS: 0.0031500754209802203, DISTANCE: 0.319842032764269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3508, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8672, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [23/25] Loss: 0.003471974312560633, RECONS: 0.0031535449476602175, DISTANCE: 0.318429375688235
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3676, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[216/300] [24/25] Loss: 0.0034777681156992913, RECONS: 0.0031424371339380743, DISTANCE: 0.33533099174499514
Test[216/300] [0/2] Loss: 0.004215585067868233, RECONS: 0.0030652228742837906, DISTANCE: 1.1503623723983765
Test[216/300] [1/2] Loss: 0.004398108925670385, RECONS: 0.0029659265419468284, DISTANCE: 1.432182490825653
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3833, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [0/25] Loss: 0.0034806763287633657, RECONS: 0.0031746539752930403, DISTANCE: 0.30602240562438965
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4158, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8265, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [1/25] Loss: 0.0035120851825922728, RECONS: 0.003159816493280232, DISTANCE: 0.35226869583129883
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4116, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8269, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [2/25] Loss: 0.003555148451899489, RECONS: 0.0032171128938595452, DISTANCE: 0.33803558349609375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8490, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [3/25] Loss: 0.0033623692579567432, RECONS: 0.003029563697054982, DISTANCE: 0.3328055739402771
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3987, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [4/25] Loss: 0.0032620742917060853, RECONS: 0.0029319575987756252, DISTANCE: 0.33011670112609864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3844, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [5/25] Loss: 0.003397029203673204, RECONS: 0.0030658000226443014, DISTANCE: 0.33122919003168744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8534, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [6/25] Loss: 0.00342551402614585, RECONS: 0.0030830699085657087, DISTANCE: 0.3424441133226667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3668, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8737, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [7/25] Loss: 0.0033791759342420846, RECONS: 0.0030370067979674786, DISTANCE: 0.3421691358089447
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3506, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [8/25] Loss: 0.003296374162245128, RECONS: 0.00295602367259562, DISTANCE: 0.34035049544440377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3837, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [9/25] Loss: 0.003266635071486235, RECONS: 0.0029303025221452117, DISTANCE: 0.3363325476646423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3274, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [10/25] Loss: 0.0032137769951739096, RECONS: 0.0028791173403574662, DISTANCE: 0.3346596522764726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [11/25] Loss: 0.0031993709271773696, RECONS: 0.002866124540256957, DISTANCE: 0.3332463800907135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8241, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [12/25] Loss: 0.0032008141458321074, RECONS: 0.0028684873026437485, DISTANCE: 0.3323268431883592
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3973, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8173, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [13/25] Loss: 0.003244648487972362, RECONS: 0.002913600648753345, DISTANCE: 0.33104783296585083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3959, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8293, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [14/25] Loss: 0.0032226765993982553, RECONS: 0.002892610135798653, DISTANCE: 0.33006645043691
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [15/25] Loss: 0.0031882688781479374, RECONS: 0.0028571055736392736, DISTANCE: 0.33116328716278076
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3611, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [16/25] Loss: 0.0031657523256452646, RECONS: 0.002836532548398656, DISTANCE: 0.3292197620167452
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3424, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6191, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [17/25] Loss: 0.003180232481099665, RECONS: 0.0028524916463841996, DISTANCE: 0.32774081495073104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3164, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8650, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [18/25] Loss: 0.003232818868893542, RECONS: 0.002905743355911813, DISTANCE: 0.3270754939631412
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3550, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [19/25] Loss: 0.0032445039600133897, RECONS: 0.0029170008958317338, DISTANCE: 0.32750304937362673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [20/25] Loss: 0.0032729472898479018, RECONS: 0.0029433864235345808, DISTANCE: 0.32956085318610784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [21/25] Loss: 0.0032690092603760686, RECONS: 0.0029415517876094036, DISTANCE: 0.32745745507153595
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4434, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8319, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5899, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [22/25] Loss: 0.0032742380711209516, RECONS: 0.002947633023090337, DISTANCE: 0.32660503491111426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6246, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4577, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5909, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [23/25] Loss: 0.0033588049409445375, RECONS: 0.0030331420227109143, DISTANCE: 0.32566291093826294
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6277, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[217/300] [24/25] Loss: 0.0034254756849259136, RECONS: 0.003084907261654735, DISTANCE: 0.340568413734436
Test[217/300] [0/2] Loss: 0.004072161391377449, RECONS: 0.003048475831747055, DISTANCE: 1.023685336112976
Test[217/300] [1/2] Loss: 0.00411969143897295, RECONS: 0.002688493113964796, DISTANCE: 1.4311980605125427
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [0/25] Loss: 0.003327372018247843, RECONS: 0.0029532683547586203, DISTANCE: 0.3741035461425781
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8813, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6344, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [1/25] Loss: 0.003430841723456979, RECONS: 0.0031042859191074967, DISTANCE: 0.3265557885169983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3586, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8775, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6365, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [2/25] Loss: 0.003987865212062995, RECONS: 0.00365991711926957, DISTANCE: 0.32794801394144696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3218, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8746, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6258, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [3/25] Loss: 0.00382709177210927, RECONS: 0.003503875806927681, DISTANCE: 0.32321590185165405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3473, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8693, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [4/25] Loss: 0.0038671773858368398, RECONS: 0.0035488969646394254, DISTANCE: 0.31828033924102783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [5/25] Loss: 0.0037758116765568652, RECONS: 0.0034549799747765064, DISTANCE: 0.32083163658777875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3670, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5886, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [6/25] Loss: 0.00365801844080644, RECONS: 0.003343139974666493, DISTANCE: 0.31487841265542166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3747, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8301, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5942, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [7/25] Loss: 0.0036644281062763184, RECONS: 0.003346004756167531, DISTANCE: 0.3184232860803604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4268, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [8/25] Loss: 0.003642553644668725, RECONS: 0.003323890320542786, DISTANCE: 0.31866325272454155
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [9/25] Loss: 0.00359064731746912, RECONS: 0.0032665439415723086, DISTANCE: 0.32410330772399903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4044, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8387, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [10/25] Loss: 0.0035564761016179214, RECONS: 0.003231133461337198, DISTANCE: 0.3253425793214278
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3711, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [11/25] Loss: 0.003494398125136892, RECONS: 0.003166898231332501, DISTANCE: 0.3274998366832733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3598, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8740, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [12/25] Loss: 0.003455241103298389, RECONS: 0.003128006230466641, DISTANCE: 0.32723482755514294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3734, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8596, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [13/25] Loss: 0.0034596240813178675, RECONS: 0.0031315104570239782, DISTANCE: 0.3281135729381016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [14/25] Loss: 0.0034683448107292254, RECONS: 0.003142347186803818, DISTANCE: 0.3259975751241048
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [15/25] Loss: 0.0034328920155530795, RECONS: 0.003109625933575444, DISTANCE: 0.32326602935791016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [16/25] Loss: 0.003407073796124143, RECONS: 0.0030843543902258665, DISTANCE: 0.32271935659296375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4120, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [17/25] Loss: 0.0034074936605369053, RECONS: 0.003084260349472364, DISTANCE: 0.3232332666714986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4194, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [18/25] Loss: 0.0033785373854794, RECONS: 0.0030554461317430985, DISTANCE: 0.3230912120718705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4129, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8292, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [19/25] Loss: 0.003355377947445959, RECONS: 0.003034348122309893, DISTANCE: 0.3210297882556915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8277, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [20/25] Loss: 0.0033784302705455395, RECONS: 0.003055994908901907, DISTANCE: 0.32243532226199195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4158, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [21/25] Loss: 0.0033699206436391582, RECONS: 0.0030489676547321405, DISTANCE: 0.3209529464895075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8695, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [22/25] Loss: 0.0033679608275870914, RECONS: 0.0030474644761694513, DISTANCE: 0.32049631554147473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8809, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6267, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [23/25] Loss: 0.0033727804839145392, RECONS: 0.0030514700920321047, DISTANCE: 0.3213103612263997
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6286, device='cuda:0', grad_fn=<MeanBackward0>)
Train[218/300] [24/25] Loss: 0.0033799753431230785, RECONS: 0.003044008258730173, DISTANCE: 0.3359670543670654
Test[218/300] [0/2] Loss: 0.0041998764500021935, RECONS: 0.0032250643707811832, DISTANCE: 0.9748120307922363
Test[218/300] [1/2] Loss: 0.004373741568997502, RECONS: 0.003046511788852513, DISTANCE: 1.3272297382354736
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3466, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6274, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [0/25] Loss: 0.0029961038380861282, RECONS: 0.002687281696125865, DISTANCE: 0.3088221549987793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3837, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6191, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [1/25] Loss: 0.003500504419207573, RECONS: 0.0031819480936974287, DISTANCE: 0.3185562491416931
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4006, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [2/25] Loss: 0.0034485671979685626, RECONS: 0.0031365680818756423, DISTANCE: 0.31199904282887775
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6187, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8188, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5869, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [3/25] Loss: 0.0035459473729133606, RECONS: 0.0032366204541176558, DISTANCE: 0.3093268573284149
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8252, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5954, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [4/25] Loss: 0.0036491203121840955, RECONS: 0.003332464350387454, DISTANCE: 0.31665589809417727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4330, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [5/25] Loss: 0.003502406606761118, RECONS: 0.003186835014882187, DISTANCE: 0.3155715266863505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [6/25] Loss: 0.0034377127553203274, RECONS: 0.0031188796939594404, DISTANCE: 0.31883299350738525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [7/25] Loss: 0.0033832984045147896, RECONS: 0.0030672905850224197, DISTANCE: 0.3160077631473541
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3763, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [8/25] Loss: 0.0033442816283139917, RECONS: 0.0030238005694829756, DISTANCE: 0.3204809957080417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3759, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [9/25] Loss: 0.003392692841589451, RECONS: 0.0030698240967467426, DISTANCE: 0.32286869287490844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8514, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [10/25] Loss: 0.003338611578907479, RECONS: 0.0030171005901965227, DISTANCE: 0.32151094349947845
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8379, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [11/25] Loss: 0.003303557246302565, RECONS: 0.002981258323416114, DISTANCE: 0.32229888439178467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [12/25] Loss: 0.0032905370999987307, RECONS: 0.002966513713965049, DISTANCE: 0.3240233568044809
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3924, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8464, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [13/25] Loss: 0.0032958099119631307, RECONS: 0.0029717329889535904, DISTANCE: 0.32407689094543457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [14/25] Loss: 0.0032704441032061974, RECONS: 0.002944691975911458, DISTANCE: 0.32575209935506183
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [15/25] Loss: 0.0032703620672691613, RECONS: 0.0029457952332450077, DISTANCE: 0.3245668113231659
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3722, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8622, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [16/25] Loss: 0.0032616281224524275, RECONS: 0.002937577267670456, DISTANCE: 0.32405082618488984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3554, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8768, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [17/25] Loss: 0.0033268549013882875, RECONS: 0.0029996463175242147, DISTANCE: 0.32720855209562516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6240, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [18/25] Loss: 0.0033398686025879884, RECONS: 0.0030143962633845055, DISTANCE: 0.32547230469553096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [19/25] Loss: 0.0033374395221471786, RECONS: 0.0030125576187856494, DISTANCE: 0.3248818635940552
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3812, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [20/25] Loss: 0.0033190016789982715, RECONS: 0.0029950125941208433, DISTANCE: 0.32398905072893414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4079, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [21/25] Loss: 0.0033159791597757826, RECONS: 0.0029910870573737407, DISTANCE: 0.3248920657417991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [22/25] Loss: 0.0033009637187680473, RECONS: 0.0029752499666874824, DISTANCE: 0.3257137174191682
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3954, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8338, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [23/25] Loss: 0.003288625826826319, RECONS: 0.0029639935528393835, DISTANCE: 0.32463223735491437
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8490, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[219/300] [24/25] Loss: 0.003334058942273259, RECONS: 0.002996687414124608, DISTANCE: 0.3373714923858643
Test[219/300] [0/2] Loss: 0.003459223313257098, RECONS: 0.002762260613963008, DISTANCE: 0.6969627141952515
Test[219/300] [1/2] Loss: 0.0036473273066803813, RECONS: 0.0025867143413051963, DISTANCE: 1.0606129169464111
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8273, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [0/25] Loss: 0.0028359070420265198, RECONS: 0.002513525541871786, DISTANCE: 0.32238149642944336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4319, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8484, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [1/25] Loss: 0.0030551184900105, RECONS: 0.0027410294860601425, DISTANCE: 0.3140890598297119
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3859, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [2/25] Loss: 0.0029437200476725898, RECONS: 0.0026351025638480983, DISTANCE: 0.3086175521214803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3606, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [3/25] Loss: 0.002893618540838361, RECONS: 0.0025761325377970934, DISTANCE: 0.3174860179424286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5920, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3654, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [4/25] Loss: 0.0030998914502561093, RECONS: 0.002775807259604335, DISTANCE: 0.3240842342376709
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3516, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [5/25] Loss: 0.003111541038379073, RECONS: 0.0027844365298127136, DISTANCE: 0.32710452874501544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3477, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [6/25] Loss: 0.003117472565333758, RECONS: 0.0027899459070925203, DISTANCE: 0.32752667154584614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8404, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [7/25] Loss: 0.003246532316552475, RECONS: 0.002919313876191154, DISTANCE: 0.3272184431552887
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3601, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8550, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [8/25] Loss: 0.0032159701869305638, RECONS: 0.0028922490568624604, DISTANCE: 0.32372111744350857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [9/25] Loss: 0.003275781380943954, RECONS: 0.0029518189374357464, DISTANCE: 0.3239624261856079
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4300, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [10/25] Loss: 0.0032727797515690327, RECONS: 0.0029504780064929614, DISTANCE: 0.32230173457752576
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [11/25] Loss: 0.0032935594208538532, RECONS: 0.0029709980784294507, DISTANCE: 0.3225613236427307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [12/25] Loss: 0.0032912735612346576, RECONS: 0.0029698351147369696, DISTANCE: 0.32143842256986177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4341, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [13/25] Loss: 0.003284028498455882, RECONS: 0.0029621832072734833, DISTANCE: 0.32184527601514545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4257, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8545, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [14/25] Loss: 0.0032687336361656586, RECONS: 0.002946662188818057, DISTANCE: 0.3220714330673218
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4180, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [15/25] Loss: 0.0032445389952044934, RECONS: 0.0029239098948892206, DISTANCE: 0.3206290900707245
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3399, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [16/25] Loss: 0.0032387502792784397, RECONS: 0.002916199812556014, DISTANCE: 0.3225504580666037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8722, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [17/25] Loss: 0.003219383561776744, RECONS: 0.0028970145439315173, DISTANCE: 0.3223690125677321
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3265, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [18/25] Loss: 0.0032444353411464314, RECONS: 0.0029212950091612967, DISTANCE: 0.32314032629916545
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3330, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [19/25] Loss: 0.0032592456554993987, RECONS: 0.00293573085218668, DISTANCE: 0.3235148012638092
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8143, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5975, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [20/25] Loss: 0.003268660112683262, RECONS: 0.002945856922971351, DISTANCE: 0.32280318509964717
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4049, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8146, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5943, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [21/25] Loss: 0.003282753602516922, RECONS: 0.0029607533307915383, DISTANCE: 0.322000270540064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [22/25] Loss: 0.0032994656459144926, RECONS: 0.0029768205409788566, DISTANCE: 0.3226450992667157
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [23/25] Loss: 0.0032983404817059636, RECONS: 0.0029738685116171837, DISTANCE: 0.32447196046511334
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4166, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8456, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[220/300] [24/25] Loss: 0.0033978636376559733, RECONS: 0.0030540522746741773, DISTANCE: 0.343811354637146
Test[220/300] [0/2] Loss: 0.0044812667183578014, RECONS: 0.0036822701804339886, DISTANCE: 0.7989964485168457
Test[220/300] [1/2] Loss: 0.004507192876189947, RECONS: 0.00340661290101707, DISTANCE: 1.100579857826233
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4239, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8777, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [0/25] Loss: 0.003260120050981641, RECONS: 0.0029215728864073753, DISTANCE: 0.3385472297668457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4267, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [1/25] Loss: 0.003441024338826537, RECONS: 0.003116236301138997, DISTANCE: 0.32478809356689453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4344, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8726, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [2/25] Loss: 0.00337268008540074, RECONS: 0.0030528724504013858, DISTANCE: 0.31980764865875244
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4518, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8735, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [3/25] Loss: 0.0034024163614958525, RECONS: 0.0030828543240204453, DISTANCE: 0.31956204771995544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4533, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [4/25] Loss: 0.0034692617598921062, RECONS: 0.0031468129251152276, DISTANCE: 0.32244884967803955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4620, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [5/25] Loss: 0.003446706337854266, RECONS: 0.0031192710933585963, DISTANCE: 0.3274352550506592
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4333, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8366, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [6/25] Loss: 0.003360999814633812, RECONS: 0.003032377654952662, DISTANCE: 0.3286221538271223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4168, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [7/25] Loss: 0.0033835899375844747, RECONS: 0.0030506516923196614, DISTANCE: 0.3329382389783859
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4043, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8364, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [8/25] Loss: 0.003386089655881127, RECONS: 0.00305471809891363, DISTANCE: 0.3313715590371026
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3815, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [9/25] Loss: 0.0034168312093243005, RECONS: 0.0030897773802280428, DISTANCE: 0.3270538330078125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3618, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [10/25] Loss: 0.003398573026061058, RECONS: 0.0030676572456617246, DISTANCE: 0.3309157870032571
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3682, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [11/25] Loss: 0.0033502966398373246, RECONS: 0.0030206592055037618, DISTANCE: 0.32963743805885315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [12/25] Loss: 0.0033395771975987232, RECONS: 0.0030104151317993035, DISTANCE: 0.3291620657994197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [13/25] Loss: 0.0033518410720197217, RECONS: 0.0030236091032358153, DISTANCE: 0.32823197330747333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3428, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [14/25] Loss: 0.003319542094444235, RECONS: 0.0029922946045796077, DISTANCE: 0.3272474924723307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8364, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [15/25] Loss: 0.003305771213490516, RECONS: 0.0029804574296576902, DISTANCE: 0.3253137916326523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [16/25] Loss: 0.003318358801633996, RECONS: 0.00299273561412359, DISTANCE: 0.3256231897017535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5905, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4148, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [17/25] Loss: 0.0033282977011468676, RECONS: 0.003004325333879226, DISTANCE: 0.32397237088945174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8314, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [18/25] Loss: 0.0033342464287814343, RECONS: 0.0030118630659815514, DISTANCE: 0.32238336613303736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4378, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [19/25] Loss: 0.0033304731245152653, RECONS: 0.003009676211513579, DISTANCE: 0.32079691290855405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4282, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [20/25] Loss: 0.00332259125120583, RECONS: 0.0030023798546088593, DISTANCE: 0.32021139349256245
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [21/25] Loss: 0.003338228519582613, RECONS: 0.0030178602954203434, DISTANCE: 0.32036821950565686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [22/25] Loss: 0.0033245200959398694, RECONS: 0.0030043644972307525, DISTANCE: 0.32015559465988824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3764, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [23/25] Loss: 0.0033223948460848383, RECONS: 0.0030024290414682278, DISTANCE: 0.31996579964955646
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3500, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8349, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[221/300] [24/25] Loss: 0.003321537571027875, RECONS: 0.0029870690498501064, DISTANCE: 0.3344685173034668
Test[221/300] [0/2] Loss: 0.003968680277466774, RECONS: 0.003093208186328411, DISTANCE: 0.8754721879959106
Test[221/300] [1/2] Loss: 0.003949230769649148, RECONS: 0.002858698833733797, DISTANCE: 1.0905318856239319
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [0/25] Loss: 0.003736997488886118, RECONS: 0.003332600463181734, DISTANCE: 0.40439701080322266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8242, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [1/25] Loss: 0.003428543801419437, RECONS: 0.0030764120165258646, DISTANCE: 0.35213178396224976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6240, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3930, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8328, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [2/25] Loss: 0.0033641135475287833, RECONS: 0.0030285753309726715, DISTANCE: 0.33553818861643475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3905, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8391, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [3/25] Loss: 0.0033044989686459303, RECONS: 0.002975003037136048, DISTANCE: 0.329495906829834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3590, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [4/25] Loss: 0.0032852282747626305, RECONS: 0.0029535353649407627, DISTANCE: 0.3316928863525391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [5/25] Loss: 0.0033025327138602734, RECONS: 0.002941652317531407, DISTANCE: 0.3608803947766622
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [6/25] Loss: 0.0032734814366059645, RECONS: 0.0029163191294563667, DISTANCE: 0.3571623052869524
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4173, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8407, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [7/25] Loss: 0.003247545857448131, RECONS: 0.002895544923376292, DISTANCE: 0.3520009219646454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4206, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8491, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [8/25] Loss: 0.0032638871990558174, RECONS: 0.0029117496580713326, DISTANCE: 0.3521375258763631
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [9/25] Loss: 0.0032512106467038394, RECONS: 0.002907762350514531, DISTANCE: 0.343448281288147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4477, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [10/25] Loss: 0.0032035068354823375, RECONS: 0.0028632869943976402, DISTANCE: 0.34021982279690827
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4377, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [11/25] Loss: 0.003173951932694763, RECONS: 0.002835572697222233, DISTANCE: 0.3383792241414388
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4201, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [12/25] Loss: 0.003180380964365143, RECONS: 0.0028390296591589083, DISTANCE: 0.3413512890155499
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4418, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [13/25] Loss: 0.003181187103369406, RECONS: 0.002842369855248502, DISTANCE: 0.3388172388076782
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [14/25] Loss: 0.0032124100252985954, RECONS: 0.0028735319152474403, DISTANCE: 0.33887810707092286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [15/25] Loss: 0.0032119140814756975, RECONS: 0.0028735472878906876, DISTANCE: 0.3383667916059494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3992, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [16/25] Loss: 0.003196549108799766, RECONS: 0.0028598270488574226, DISTANCE: 0.33672205139608946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4103, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8256, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [17/25] Loss: 0.0031927304031948247, RECONS: 0.0028567462771510086, DISTANCE: 0.33598411083221436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8490, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [18/25] Loss: 0.003181294317504293, RECONS: 0.002846580452138656, DISTANCE: 0.3347138480136269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [19/25] Loss: 0.003161708905827254, RECONS: 0.002828360581770539, DISTANCE: 0.3333483099937439
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3864, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8325, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [20/25] Loss: 0.0031489600604843525, RECONS: 0.0028159436769783497, DISTANCE: 0.33301637286231633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [21/25] Loss: 0.0031472769862210207, RECONS: 0.002814831847155636, DISTANCE: 0.33244512297890405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6240, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3125, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [22/25] Loss: 0.003135334568746064, RECONS: 0.002799723702280418, DISTANCE: 0.3356108458145805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [23/25] Loss: 0.0031331334806357822, RECONS: 0.002795240667182952, DISTANCE: 0.3378927906354268
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2660, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8332, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[222/300] [24/25] Loss: 0.0031512850150465965, RECONS: 0.0027995151840150357, DISTANCE: 0.3517698097229004
Test[222/300] [0/2] Loss: 0.003947961609810591, RECONS: 0.003048861399292946, DISTANCE: 0.8991003036499023
Test[222/300] [1/2] Loss: 0.004130516434088349, RECONS: 0.0028882392216473818, DISTANCE: 1.2422771453857422
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3328, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [0/25] Loss: 0.003304209327325225, RECONS: 0.002922354033216834, DISTANCE: 0.3818553686141968
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3566, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [1/25] Loss: 0.0030610542744398117, RECONS: 0.002712847082875669, DISTANCE: 0.34820717573165894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6231, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8238, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [2/25] Loss: 0.0030007234308868647, RECONS: 0.002674505114555359, DISTANCE: 0.32621832688649494
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5947, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3946, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [3/25] Loss: 0.003324620134662837, RECONS: 0.0029977818485349417, DISTANCE: 0.32683828473091125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4105, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [4/25] Loss: 0.0032920991536229847, RECONS: 0.0029588311444967985, DISTANCE: 0.33326799869537355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4297, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [5/25] Loss: 0.0032982839814697704, RECONS: 0.0029633395606651902, DISTANCE: 0.3349444270133972
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8314, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [6/25] Loss: 0.003316817672124931, RECONS: 0.002982036509950246, DISTANCE: 0.3347811698913574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4219, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8440, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [7/25] Loss: 0.003269412263762206, RECONS: 0.0029311075631994754, DISTANCE: 0.33830469846725464
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4079, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [8/25] Loss: 0.003240438411012292, RECONS: 0.002902985472852985, DISTANCE: 0.3374529282251994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4031, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [9/25] Loss: 0.0032425395445898177, RECONS: 0.0029094828059896827, DISTANCE: 0.33305672407150266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4044, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [10/25] Loss: 0.0031941726761446757, RECONS: 0.002865052633834156, DISTANCE: 0.3291200182654641
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4016, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [11/25] Loss: 0.003247214617052426, RECONS: 0.0029146700787047544, DISTANCE: 0.33254451553026837
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4036, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8347, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [12/25] Loss: 0.0032033510327052614, RECONS: 0.002871671673626854, DISTANCE: 0.33167933500730074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [13/25] Loss: 0.0031899049977904986, RECONS: 0.0028590045902611954, DISTANCE: 0.330900388104575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3784, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [14/25] Loss: 0.003185430122539401, RECONS: 0.0028581384569406508, DISTANCE: 0.32729163964589436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3777, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [15/25] Loss: 0.0032264743058476597, RECONS: 0.0028993472806178033, DISTANCE: 0.32712700217962265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [16/25] Loss: 0.0032051493934191324, RECONS: 0.002879212240633719, DISTANCE: 0.32593713087194104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [17/25] Loss: 0.0031939877016055915, RECONS: 0.0028692312254053024, DISTANCE: 0.3247564567459954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8656, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [18/25] Loss: 0.003158528443523928, RECONS: 0.0028346085945438397, DISTANCE: 0.323919835843538
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4178, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [19/25] Loss: 0.003171563823707402, RECONS: 0.0028471545199863614, DISTANCE: 0.32440929412841796
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4215, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [20/25] Loss: 0.0031620172473291555, RECONS: 0.0028374916984744017, DISTANCE: 0.32452553794497535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4101, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [21/25] Loss: 0.003152608723295006, RECONS: 0.0028301440496844325, DISTANCE: 0.3224646611647172
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4259, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [22/25] Loss: 0.003146237703850088, RECONS: 0.0028246957302579413, DISTANCE: 0.3215419624162757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4156, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [23/25] Loss: 0.0031652602192480117, RECONS: 0.002843212850469475, DISTANCE: 0.32204736272494
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3603, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8244, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[223/300] [24/25] Loss: 0.0031895131058990956, RECONS: 0.0028486832696944476, DISTANCE: 0.34082982540130613
Test[223/300] [0/2] Loss: 0.003844363149255514, RECONS: 0.0029107127338647842, DISTANCE: 0.9336504936218262
Test[223/300] [1/2] Loss: 0.003937273286283016, RECONS: 0.0026223979657515883, DISTANCE: 1.314875304698944
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [0/25] Loss: 0.0029906434938311577, RECONS: 0.0026722305919975042, DISTANCE: 0.31841278076171875
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4135, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [1/25] Loss: 0.0031646681018173695, RECONS: 0.002862747642211616, DISTANCE: 0.30192041397094727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [2/25] Loss: 0.0030295789086570344, RECONS: 0.002725014230236411, DISTANCE: 0.304564634958903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8683, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [3/25] Loss: 0.0032773659913800657, RECONS: 0.0029700305312871933, DISTANCE: 0.30733537673950195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4045, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [4/25] Loss: 0.0032808421179652213, RECONS: 0.0029720934107899666, DISTANCE: 0.3087486505508423
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [5/25] Loss: 0.003215886497249206, RECONS: 0.0029054269349823394, DISTANCE: 0.3104594945907593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4261, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [6/25] Loss: 0.0032224885321089198, RECONS: 0.0029091472138783763, DISTANCE: 0.31334124292646137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4349, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8356, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [7/25] Loss: 0.0032343921484425664, RECONS: 0.0029121456027496606, DISTANCE: 0.3222464621067047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8282, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [8/25] Loss: 0.0032215662714507845, RECONS: 0.002897880557510588, DISTANCE: 0.3236856328116523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4207, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [9/25] Loss: 0.003231607936322689, RECONS: 0.0029052505036816, DISTANCE: 0.32635735273361205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4209, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [10/25] Loss: 0.003232818329706788, RECONS: 0.0029075888451188803, DISTANCE: 0.3252294063568115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5900, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4035, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8489, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [11/25] Loss: 0.0032829286453003683, RECONS: 0.00295388091277952, DISTANCE: 0.32904766003290814
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [12/25] Loss: 0.0032477451739116358, RECONS: 0.0029180455379761183, DISTANCE: 0.3296995713160588
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5948, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3929, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [13/25] Loss: 0.00332663332976933, RECONS: 0.0029959590839488165, DISTANCE: 0.3306741714477539
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3547, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [14/25] Loss: 0.003283994427571694, RECONS: 0.0029530290514230726, DISTANCE: 0.3309653123219808
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3659, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [15/25] Loss: 0.0032588880421826616, RECONS: 0.0029305396747076884, DISTANCE: 0.3283483013510704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4202, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [16/25] Loss: 0.0032425144933821526, RECONS: 0.0029137792914886683, DISTANCE: 0.3287351411931655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6225, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4107, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [17/25] Loss: 0.003250213094159133, RECONS: 0.002920346709692644, DISTANCE: 0.32986632320615983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [18/25] Loss: 0.0032320326120641673, RECONS: 0.002903011786800466, DISTANCE: 0.32902076997255025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6202, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3511, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [19/25] Loss: 0.0032103171455673874, RECONS: 0.0028816078207455575, DISTANCE: 0.32870927453041077
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3214, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6235, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [20/25] Loss: 0.0031883643851393743, RECONS: 0.0028576991698216823, DISTANCE: 0.3306651626314436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [21/25] Loss: 0.0032134267755530095, RECONS: 0.0028824888974089513, DISTANCE: 0.3309378298846158
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3649, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [22/25] Loss: 0.0032200716314432416, RECONS: 0.0028891260128306308, DISTANCE: 0.3309455747189729
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3767, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8420, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [23/25] Loss: 0.0032473890654121837, RECONS: 0.002917115450448667, DISTANCE: 0.3302735686302185
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5977, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[224/300] [24/25] Loss: 0.00325469053350389, RECONS: 0.0029058298747986554, DISTANCE: 0.34886061191558837
Test[224/300] [0/2] Loss: 0.003986503928899765, RECONS: 0.003101935377344489, DISTANCE: 0.8845686912536621
Test[224/300] [1/2] Loss: 0.004156392067670822, RECONS: 0.002900305320508778, DISTANCE: 1.256086826324463
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8337, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [0/25] Loss: 0.003976962063461542, RECONS: 0.003661559661850333, DISTANCE: 0.3154025077819824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4098, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8352, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [1/25] Loss: 0.0034829196520149708, RECONS: 0.00315301853697747, DISTANCE: 0.32990121841430664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [2/25] Loss: 0.0033739571614811816, RECONS: 0.003052872217570742, DISTANCE: 0.32108497619628906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3983, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [3/25] Loss: 0.003257685399148613, RECONS: 0.002935673692263663, DISTANCE: 0.3220117390155792
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8572, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [4/25] Loss: 0.0031861164141446354, RECONS: 0.0028610749170184134, DISTANCE: 0.32504150867462156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3515, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [5/25] Loss: 0.003399653399052719, RECONS: 0.0030758460828413567, DISTANCE: 0.32380733887354535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6213, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3777, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8598, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [6/25] Loss: 0.003347069657008563, RECONS: 0.0030183580570987295, DISTANCE: 0.3287116118839809
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3970, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6252, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [7/25] Loss: 0.0033927279291674495, RECONS: 0.0030649107065983117, DISTANCE: 0.32781723141670227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8772, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [8/25] Loss: 0.0035028361922336947, RECONS: 0.0031731782688034903, DISTANCE: 0.3296579122543335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5900, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [9/25] Loss: 0.003539990517310798, RECONS: 0.003211018885485828, DISTANCE: 0.3289716124534607
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4516, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8387, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5934, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [10/25] Loss: 0.0035086751873181624, RECONS: 0.003177061719311909, DISTANCE: 0.33161345395174896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4438, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8242, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5815, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [11/25] Loss: 0.0036160697733672955, RECONS: 0.0032879485515877604, DISTANCE: 0.3281212051709493
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5854, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [12/25] Loss: 0.0036324846844833633, RECONS: 0.0033064594922157433, DISTANCE: 0.3260251742142897
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4491, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8328, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [13/25] Loss: 0.0035903676346476588, RECONS: 0.0032630504075703876, DISTANCE: 0.32731720379420687
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6192, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [14/25] Loss: 0.003538181430970629, RECONS: 0.0032127520069479944, DISTANCE: 0.32542940775553386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8739, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6294, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [15/25] Loss: 0.003536592164891772, RECONS: 0.003209352638805285, DISTANCE: 0.3272395133972168
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6303, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [16/25] Loss: 0.0035899942056001988, RECONS: 0.003258034011677784, DISTANCE: 0.33196018022649426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8685, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [17/25] Loss: 0.003584844280137784, RECONS: 0.0032535980377967158, DISTANCE: 0.3312462303373549
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [18/25] Loss: 0.0035378858324532445, RECONS: 0.0032077808986957137, DISTANCE: 0.33010492826762955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3680, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8377, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [19/25] Loss: 0.0034945335355587304, RECONS: 0.0031640622648410497, DISTANCE: 0.33047125935554506
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [20/25] Loss: 0.003457968555656927, RECONS: 0.003128875723286044, DISTANCE: 0.3290928204854329
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3859, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [21/25] Loss: 0.003484240468506786, RECONS: 0.0031543375860730357, DISTANCE: 0.3299028765071522
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5962, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4193, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [22/25] Loss: 0.003461136897701932, RECONS: 0.0031321028794121485, DISTANCE: 0.32903400711391284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4111, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [23/25] Loss: 0.0034354690093702325, RECONS: 0.0031075628745990493, DISTANCE: 0.32790612677733105
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4259, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[225/300] [24/25] Loss: 0.0034684016276150943, RECONS: 0.00312047079205513, DISTANCE: 0.3479308271408081
Test[225/300] [0/2] Loss: 0.004223577678203583, RECONS: 0.0031875865533947945, DISTANCE: 1.0359909534454346
Test[225/300] [1/2] Loss: 0.0042378888465464115, RECONS: 0.00285699765663594, DISTANCE: 1.380890965461731
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4131, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [0/25] Loss: 0.003081127069890499, RECONS: 0.0027678641490638256, DISTANCE: 0.313262939453125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8685, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [1/25] Loss: 0.003009709413163364, RECONS: 0.0026816693134605885, DISTANCE: 0.32804012298583984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3301, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [2/25] Loss: 0.003199774849539002, RECONS: 0.002839465237533053, DISTANCE: 0.360309640566508
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2961, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8522, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [3/25] Loss: 0.0031397707061842084, RECONS: 0.0027743884711526334, DISTANCE: 0.36538225412368774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6234, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3332, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [4/25] Loss: 0.003092488693073392, RECONS: 0.0027324547525495292, DISTANCE: 0.3600339412689209
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3341, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6247, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [5/25] Loss: 0.003294989583082497, RECONS: 0.0029464466885353127, DISTANCE: 0.34854288895924884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8352, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [6/25] Loss: 0.0033374585078230928, RECONS: 0.0029900490106748684, DISTANCE: 0.3474094867706299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [7/25] Loss: 0.003275748313171789, RECONS: 0.0029305154166650027, DISTANCE: 0.34523287415504456
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4410, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8239, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5878, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [8/25] Loss: 0.0032977714306778377, RECONS: 0.0029522792901843786, DISTANCE: 0.3454921113120185
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8161, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5863, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [9/25] Loss: 0.003381548123434186, RECONS: 0.0030403702752664686, DISTANCE: 0.3411778092384338
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4450, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [10/25] Loss: 0.0034261846660890364, RECONS: 0.003085457402366129, DISTANCE: 0.3407272317192771
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4280, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [11/25] Loss: 0.0034209265334842107, RECONS: 0.00308007508283481, DISTANCE: 0.34085142612457275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [12/25] Loss: 0.003414556061705718, RECONS: 0.0030746704791314327, DISTANCE: 0.33988556495079625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8802, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [13/25] Loss: 0.003425302981798138, RECONS: 0.003083792232376124, DISTANCE: 0.3415107386452811
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [14/25] Loss: 0.0033964854044218856, RECONS: 0.003057271894067526, DISTANCE: 0.339213498433431
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [15/25] Loss: 0.003364478630828671, RECONS: 0.0030267277325037867, DISTANCE: 0.3377508819103241
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [16/25] Loss: 0.0033762254889177926, RECONS: 0.0030397086486439497, DISTANCE: 0.3365168290979722
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4012, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [17/25] Loss: 0.003386344320865141, RECONS: 0.0030509388307109475, DISTANCE: 0.33540548218621147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3997, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8286, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [18/25] Loss: 0.003361859873525406, RECONS: 0.0030246495979985126, DISTANCE: 0.337210266213668
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4285, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8276, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5905, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [19/25] Loss: 0.0033886371878907085, RECONS: 0.0030494120670482515, DISTANCE: 0.3392251133918762
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4224, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [20/25] Loss: 0.003375764869685684, RECONS: 0.003038309747353196, DISTANCE: 0.33745511940547396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4104, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8279, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [21/25] Loss: 0.003377227916974913, RECONS: 0.0030380313771522856, DISTANCE: 0.3391965356740085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [22/25] Loss: 0.0033750577485593763, RECONS: 0.003035436131303077, DISTANCE: 0.339621611263441
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8490, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [23/25] Loss: 0.0033495713820836195, RECONS: 0.0030095692782197148, DISTANCE: 0.34000209470589954
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3364, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8749, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[226/300] [24/25] Loss: 0.003384435223415494, RECONS: 0.0030250702425837516, DISTANCE: 0.35936497688293456
Test[226/300] [0/2] Loss: 0.00403929827734828, RECONS: 0.003098301123827696, DISTANCE: 0.9409971237182617
Test[226/300] [1/2] Loss: 0.004048711387440562, RECONS: 0.0028438636800274253, DISTANCE: 1.2048477530479431
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [0/25] Loss: 0.0029246702324599028, RECONS: 0.0026463016401976347, DISTANCE: 0.27836859226226807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3967, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8797, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [1/25] Loss: 0.0031523790676146746, RECONS: 0.0028579061618074775, DISTANCE: 0.294472873210907
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4069, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [2/25] Loss: 0.003196382817501823, RECONS: 0.0028766528703272343, DISTANCE: 0.31972992420196533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4011, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [3/25] Loss: 0.0032422218937426805, RECONS: 0.002920825791079551, DISTANCE: 0.3213960826396942
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [4/25] Loss: 0.0033289584331214427, RECONS: 0.00300919390283525, DISTANCE: 0.319764518737793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [5/25] Loss: 0.003305176777454714, RECONS: 0.0029884412651881576, DISTANCE: 0.31673550605773926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3685, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [6/25] Loss: 0.0032875920379800455, RECONS: 0.0029681004650358644, DISTANCE: 0.3194915567125593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3476, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6222, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [7/25] Loss: 0.003303562116343528, RECONS: 0.002989167143823579, DISTANCE: 0.3143949657678604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3622, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [8/25] Loss: 0.0033081070933904913, RECONS: 0.002996428766184383, DISTANCE: 0.3116783168580797
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [9/25] Loss: 0.0032555331476032735, RECONS: 0.0029447422130033374, DISTANCE: 0.3107909321784973
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3693, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [10/25] Loss: 0.003243437439033931, RECONS: 0.002923814474012364, DISTANCE: 0.31962296095761383
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8545, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [11/25] Loss: 0.0032470626174472272, RECONS: 0.002924119025313606, DISTANCE: 0.3229435781637828
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4136, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8326, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5975, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [12/25] Loss: 0.0032098181187533415, RECONS: 0.002883869742688078, DISTANCE: 0.3259483575820923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8409, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [13/25] Loss: 0.0031780043916244593, RECONS: 0.002854345183420394, DISTANCE: 0.3236591901097979
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4321, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8192, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [14/25] Loss: 0.0032240209945787984, RECONS: 0.0029011094166586796, DISTANCE: 0.32291155656178794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [15/25] Loss: 0.0032158405374502763, RECONS: 0.002894526071031578, DISTANCE: 0.3213144391775131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4066, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [16/25] Loss: 0.003224755253861932, RECONS: 0.002902208320686922, DISTANCE: 0.32254690282485066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [17/25] Loss: 0.003200756166026824, RECONS: 0.0028793759152500164, DISTANCE: 0.3213802178700765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3673, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8496, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [18/25] Loss: 0.0032231503803479044, RECONS: 0.0028985530432117613, DISTANCE: 0.3245973085102282
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [19/25] Loss: 0.0032005820423364638, RECONS: 0.002876473276410252, DISTANCE: 0.32410874366760256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5943, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3385, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [20/25] Loss: 0.003222230699889007, RECONS: 0.0028975537113313165, DISTANCE: 0.32467696212586905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3784, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [21/25] Loss: 0.0032047935846177015, RECONS: 0.0028794943566688084, DISTANCE: 0.3252992033958435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4106, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8442, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5913, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [22/25] Loss: 0.003207311327771648, RECONS: 0.002881479368585607, DISTANCE: 0.32583193675331446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8162, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5921, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [23/25] Loss: 0.003218455754298096, RECONS: 0.0028928074558886387, DISTANCE: 0.32564827303091687
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5737, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[227/300] [24/25] Loss: 0.0033436014223843812, RECONS: 0.0030054427683353425, DISTANCE: 0.3381586313247681
Test[227/300] [0/2] Loss: 0.0044740429148077965, RECONS: 0.0034627343993633986, DISTANCE: 1.0113086700439453
Test[227/300] [1/2] Loss: 0.004450496751815081, RECONS: 0.0032520281383767724, DISTANCE: 1.1984686255455017
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4334, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8343, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [0/25] Loss: 0.003400515066459775, RECONS: 0.0030771016608923674, DISTANCE: 0.3234133720397949
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4415, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [1/25] Loss: 0.003450920688919723, RECONS: 0.003123553586192429, DISTANCE: 0.32736706733703613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4471, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [2/25] Loss: 0.0032923918527861438, RECONS: 0.0029569979136188826, DISTANCE: 0.33539390563964844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4496, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [3/25] Loss: 0.0032537966035306454, RECONS: 0.002924672793596983, DISTANCE: 0.32912376523017883
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4284, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8776, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [4/25] Loss: 0.0032470261212438345, RECONS: 0.0029265298973768948, DISTANCE: 0.32049620151519775
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4088, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [5/25] Loss: 0.0032713095424696803, RECONS: 0.002949477406218648, DISTANCE: 0.3218321204185486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3507, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8882, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [6/25] Loss: 0.0032521512558949845, RECONS: 0.0029295635343130145, DISTANCE: 0.3225876944405692
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3522, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8602, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [7/25] Loss: 0.0032379747135564685, RECONS: 0.0029120603285264224, DISTANCE: 0.3259143680334091
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3223, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6210, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [8/25] Loss: 0.0032352833853413663, RECONS: 0.0029055059939208957, DISTANCE: 0.32977737320794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6145, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3716, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8408, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [9/25] Loss: 0.0032014659838750957, RECONS: 0.0028727350290864706, DISTANCE: 0.32873092889785765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8408, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [10/25] Loss: 0.00318624911067838, RECONS: 0.0028585899536582556, DISTANCE: 0.32765913009643555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8291, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [11/25] Loss: 0.0032245206336180368, RECONS: 0.002900928375311196, DISTANCE: 0.3235922356446584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [12/25] Loss: 0.0032189618975210646, RECONS: 0.002896520237510021, DISTANCE: 0.32244163293104905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3596, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [13/25] Loss: 0.003204974578693509, RECONS: 0.002882882620074919, DISTANCE: 0.3220919370651245
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3995, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [14/25] Loss: 0.0032115658434728783, RECONS: 0.002888365493466457, DISTANCE: 0.3232003370920817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4135, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [15/25] Loss: 0.0032379776966990903, RECONS: 0.0029129110189387575, DISTANCE: 0.3250666707754135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4301, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [16/25] Loss: 0.0032386195654159084, RECONS: 0.002914284753120121, DISTANCE: 0.3243348037495333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [17/25] Loss: 0.0032539119969846476, RECONS: 0.0029307632939890027, DISTANCE: 0.3231486876805623
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4142, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [18/25] Loss: 0.0032466678316459842, RECONS: 0.0029235242400318384, DISTANCE: 0.3231435700466758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4303, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [19/25] Loss: 0.003215241013094783, RECONS: 0.0028928317711688577, DISTANCE: 0.3224092245101929
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4012, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [20/25] Loss: 0.0031967760241102604, RECONS: 0.002871935898881583, DISTANCE: 0.32484010855356854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3721, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6296, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [21/25] Loss: 0.0031998229678720236, RECONS: 0.0028755671175366097, DISTANCE: 0.32425582950765436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [22/25] Loss: 0.003230090911054741, RECONS: 0.0029053368767642455, DISTANCE: 0.3247540152591208
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3069, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [23/25] Loss: 0.003224618179956451, RECONS: 0.002900640800362453, DISTANCE: 0.3239773561557134
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3064, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8246, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[228/300] [24/25] Loss: 0.003229236463084817, RECONS: 0.002888298509642482, DISTANCE: 0.3409379243850708
Test[228/300] [0/2] Loss: 0.004321626853197813, RECONS: 0.003473137505352497, DISTANCE: 0.8484891653060913
Test[228/300] [1/2] Loss: 0.004341416293755174, RECONS: 0.0030732391169294715, DISTANCE: 1.2681769132614136
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3584, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8241, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5888, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [0/25] Loss: 0.003344218246638775, RECONS: 0.002962203696370125, DISTANCE: 0.38201451301574707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8261, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5866, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [1/25] Loss: 0.0033183989580720663, RECONS: 0.0029607743490487337, DISTANCE: 0.35762453079223633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3717, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8236, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [2/25] Loss: 0.0032266993851711354, RECONS: 0.0028810952013979354, DISTANCE: 0.34560410181681317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3586, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [3/25] Loss: 0.003151806886307895, RECONS: 0.002791047329083085, DISTANCE: 0.3607594966888428
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3641, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [4/25] Loss: 0.003122564451768994, RECONS: 0.002773765241727233, DISTANCE: 0.34879915714263915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6259, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [5/25] Loss: 0.003060724431027969, RECONS: 0.002720037397618095, DISTANCE: 0.34068697690963745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6262, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [6/25] Loss: 0.003214747312345675, RECONS: 0.0028761613981000017, DISTANCE: 0.33858587060655865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3200, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8706, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [7/25] Loss: 0.0034060333855450153, RECONS: 0.0030680602649226785, DISTANCE: 0.33797307312488556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [8/25] Loss: 0.003372893151309755, RECONS: 0.003038402491559585, DISTANCE: 0.33449063036176896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [9/25] Loss: 0.003343857289291918, RECONS: 0.0030101233161985872, DISTANCE: 0.33373395204544065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4281, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8306, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [10/25] Loss: 0.003376652952283621, RECONS: 0.0030459513125771828, DISTANCE: 0.33070161125876685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4180, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8391, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [11/25] Loss: 0.00339310773415491, RECONS: 0.00306502888755252, DISTANCE: 0.328078826268514
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4033, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [12/25] Loss: 0.0033854088172889673, RECONS: 0.0030608696934695426, DISTANCE: 0.3245391112107497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4417, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [13/25] Loss: 0.0033796066750905345, RECONS: 0.003054222524432199, DISTANCE: 0.32538414001464844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6217, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4268, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [14/25] Loss: 0.0034474642636875314, RECONS: 0.003124386661996444, DISTANCE: 0.3230775833129883
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4047, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8740, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [15/25] Loss: 0.003447103619691916, RECONS: 0.003119954271824099, DISTANCE: 0.32714933156967163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8748, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [16/25] Loss: 0.0034332951695165213, RECONS: 0.0031061194261864703, DISTANCE: 0.32717572240268483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [17/25] Loss: 0.0034904005782057843, RECONS: 0.003163116557213167, DISTANCE: 0.32728400495317245
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3836, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8789, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [18/25] Loss: 0.0035059498990640827, RECONS: 0.0031788031399053963, DISTANCE: 0.32714674347325373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8784, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [19/25] Loss: 0.0034749021055176855, RECONS: 0.0031480783713050188, DISTANCE: 0.32682372331619264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4087, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8364, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [20/25] Loss: 0.0034556739985765446, RECONS: 0.0031291962091234467, DISTANCE: 0.3264777830668858
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4120, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8448, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [21/25] Loss: 0.00344446034763347, RECONS: 0.003119866839948703, DISTANCE: 0.3245935006575151
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3811, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8368, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [22/25] Loss: 0.003435902874511869, RECONS: 0.0031113491251902737, DISTANCE: 0.3245537384696629
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [23/25] Loss: 0.0034418690387004367, RECONS: 0.003117390083692347, DISTANCE: 0.3244789391756058
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3280, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[229/300] [24/25] Loss: 0.003449272317811847, RECONS: 0.003110064659267664, DISTANCE: 0.33920763969421386
Test[229/300] [0/2] Loss: 0.003726675407961011, RECONS: 0.0030348123982548714, DISTANCE: 0.6918630599975586
Test[229/300] [1/2] Loss: 0.0038870436837896705, RECONS: 0.0027402997948229313, DISTANCE: 1.1467439532279968
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3751, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [0/25] Loss: 0.00296116154640913, RECONS: 0.0026448331773281097, DISTANCE: 0.3163282871246338
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [1/25] Loss: 0.003137337975203991, RECONS: 0.0027818609960377216, DISTANCE: 0.355476975440979
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3586, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [2/25] Loss: 0.003201309281090895, RECONS: 0.0028530250613888106, DISTANCE: 0.3482842445373535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [3/25] Loss: 0.0032532557961530983, RECONS: 0.0028974517481401563, DISTANCE: 0.35580408573150635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [4/25] Loss: 0.003242913633584976, RECONS: 0.002900676103308797, DISTANCE: 0.3422375679016113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [5/25] Loss: 0.0031975801878919206, RECONS: 0.002857573446817696, DISTANCE: 0.3400067488352458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4185, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8355, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [6/25] Loss: 0.0031959805970213245, RECONS: 0.0028561973345599006, DISTANCE: 0.3397832768304007
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4046, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [7/25] Loss: 0.003241007885662839, RECONS: 0.0028986457909923047, DISTANCE: 0.3423621207475662
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4165, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8311, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [8/25] Loss: 0.003204146141393317, RECONS: 0.0028541645345588527, DISTANCE: 0.3499816391203139
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [9/25] Loss: 0.003221692075021565, RECONS: 0.0028699330519884824, DISTANCE: 0.3517590522766113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [10/25] Loss: 0.0032076355366205626, RECONS: 0.002856468633663925, DISTANCE: 0.35116692022843793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4036, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [11/25] Loss: 0.003189228707924485, RECONS: 0.002843767268738399, DISTANCE: 0.3454614480336507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4067, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [12/25] Loss: 0.0031875005135169397, RECONS: 0.0028408891700494746, DISTANCE: 0.3466113530672513
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3641, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [13/25] Loss: 0.003162328719294497, RECONS: 0.0028161673440731, DISTANCE: 0.3461613825389317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5962, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [14/25] Loss: 0.0031481452751904726, RECONS: 0.0028053827583789824, DISTANCE: 0.34276251792907714
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [15/25] Loss: 0.003272882880992256, RECONS: 0.0029312553233467042, DISTANCE: 0.3416275456547737
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6232, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3653, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [16/25] Loss: 0.0033603744060896777, RECONS: 0.0030182486345224522, DISTANCE: 0.3421257594052483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3532, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [17/25] Loss: 0.0034381834298579227, RECONS: 0.0030941068350027003, DISTANCE: 0.34407658709420097
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8550, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [18/25] Loss: 0.0034965752305364923, RECONS: 0.003152664873356882, DISTANCE: 0.3439103427686189
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3418, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8314, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [19/25] Loss: 0.0035286651109345257, RECONS: 0.003184770105872303, DISTANCE: 0.34389498829841614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3654, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [20/25] Loss: 0.0035773448402150756, RECONS: 0.003234372396642963, DISTANCE: 0.3429724375406901
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3562, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [21/25] Loss: 0.0036545382198792968, RECONS: 0.003310824289325286, DISTANCE: 0.34371392835270276
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8491, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [22/25] Loss: 0.003662226083890899, RECONS: 0.0033198420019091473, DISTANCE: 0.34238408441128937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [23/25] Loss: 0.0036687635195751986, RECONS: 0.003325994718276585, DISTANCE: 0.3427688032388687
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5928, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8341, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[230/300] [24/25] Loss: 0.0036741809640079737, RECONS: 0.0033147378358989953, DISTANCE: 0.3594431257247925
Test[230/300] [0/2] Loss: 0.007334605325013399, RECONS: 0.0060457754880189896, DISTANCE: 1.2888296842575073
Test[230/300] [1/2] Loss: 0.007604865590110421, RECONS: 0.005893052089959383, DISTANCE: 1.7118133902549744
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8301, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [0/25] Loss: 0.004009593743830919, RECONS: 0.003679190529510379, DISTANCE: 0.33040332794189453
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8289, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [1/25] Loss: 0.0037484344793483615, RECONS: 0.0034339478006586432, DISTANCE: 0.31448668241500854
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3623, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [2/25] Loss: 0.0036577917635440826, RECONS: 0.0033478086503843465, DISTANCE: 0.30998313426971436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3780, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [3/25] Loss: 0.003799892612732947, RECONS: 0.0034847985953092575, DISTANCE: 0.3150940537452698
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3604, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [4/25] Loss: 0.003784369071945548, RECONS: 0.003467873018234968, DISTANCE: 0.3164960861206055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3544, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [5/25] Loss: 0.003806601782950262, RECONS: 0.003484363240810732, DISTANCE: 0.322238564491272
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8692, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [6/25] Loss: 0.0038445551680134876, RECONS: 0.003524994743721826, DISTANCE: 0.31956044265202116
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3598, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [7/25] Loss: 0.003926365723600611, RECONS: 0.0035975417122244835, DISTANCE: 0.3288240432739258
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3681, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [8/25] Loss: 0.00393087103859418, RECONS: 0.0036010941645751395, DISTANCE: 0.3297768963707818
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3412, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [9/25] Loss: 0.003932097437791526, RECONS: 0.0036027597030624746, DISTANCE: 0.3293377637863159
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8243, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [10/25] Loss: 0.003907712832601233, RECONS: 0.0035792563152922826, DISTANCE: 0.328456542708657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8287, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [11/25] Loss: 0.003926137210025142, RECONS: 0.0035960315532671907, DISTANCE: 0.3301056722799937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5909, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3740, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [12/25] Loss: 0.0039596888057600995, RECONS: 0.003630270160591373, DISTANCE: 0.32941866838015044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8300, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [13/25] Loss: 0.004021870288332658, RECONS: 0.0036947524141786353, DISTANCE: 0.32711789437702726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4187, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8311, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [14/25] Loss: 0.0040386290444682045, RECONS: 0.003711652553950747, DISTANCE: 0.32697652180989584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3606, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [15/25] Loss: 0.00402668937749695, RECONS: 0.0036999570293119177, DISTANCE: 0.326732374727726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6202, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6107, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [16/25] Loss: 0.004007437745766605, RECONS: 0.003680216956554967, DISTANCE: 0.3272208115633796
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [17/25] Loss: 0.003995067724544141, RECONS: 0.003667458051091267, DISTANCE: 0.32760969135496354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6209, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3078, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6277, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [18/25] Loss: 0.00396797125913987, RECONS: 0.003638984623218053, DISTANCE: 0.3289866572932193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3629, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8705, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [19/25] Loss: 0.004065847944002598, RECONS: 0.003736576659139246, DISTANCE: 0.32927130460739135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [20/25] Loss: 0.004042676805208127, RECONS: 0.0037134763163824878, DISTANCE: 0.32920050621032715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3358, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [21/25] Loss: 0.004016565582291646, RECONS: 0.003688029362820089, DISTANCE: 0.32853623953732575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4129, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8407, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5886, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [22/25] Loss: 0.0040187041437172374, RECONS: 0.0036898801285449576, DISTANCE: 0.3288240380909132
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3775, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8253, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5893, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [23/25] Loss: 0.0039969091303646564, RECONS: 0.0036684443863729634, DISTANCE: 0.3284647613763809
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8107, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[231/300] [24/25] Loss: 0.004042793828994036, RECONS: 0.0036990519426763056, DISTANCE: 0.34374189853668213
Test[231/300] [0/2] Loss: 0.005645940080285072, RECONS: 0.004366756416857243, DISTANCE: 1.2791837453842163
Test[231/300] [1/2] Loss: 0.005596945295110345, RECONS: 0.004068951006047428, DISTANCE: 1.5279943346977234
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8550, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [0/25] Loss: 0.0035838005132973194, RECONS: 0.003226627130061388, DISTANCE: 0.3571733236312866
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5926, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8595, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [1/25] Loss: 0.0039908927865326405, RECONS: 0.0036086172331124544, DISTANCE: 0.3822755217552185
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [2/25] Loss: 0.003924757242202759, RECONS: 0.0035619729508956275, DISTANCE: 0.36278430620829266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3411, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [3/25] Loss: 0.004036833997815847, RECONS: 0.0036855580983683467, DISTANCE: 0.35127589106559753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [4/25] Loss: 0.003958837548270822, RECONS: 0.0036088092718273403, DISTANCE: 0.3500282526016235
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3649, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [5/25] Loss: 0.004009324552801748, RECONS: 0.0036660576006397605, DISTANCE: 0.34326696395874023
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6257, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3271, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [6/25] Loss: 0.003998831746035388, RECONS: 0.0036629992204585244, DISTANCE: 0.3358325447354998
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3583, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [7/25] Loss: 0.003981251473305747, RECONS: 0.003644866606919095, DISTANCE: 0.3363848924636841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3424, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [8/25] Loss: 0.00392716897961994, RECONS: 0.0035920940443045562, DISTANCE: 0.3350749678081936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3596, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8420, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [9/25] Loss: 0.0038647399516776202, RECONS: 0.0035296184942126274, DISTANCE: 0.33512148857116697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3506, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [10/25] Loss: 0.0038408904802054167, RECONS: 0.003509651827202602, DISTANCE: 0.33123867078260943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3260, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8318, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [11/25] Loss: 0.0038800265756435692, RECONS: 0.0035462985979393125, DISTANCE: 0.33372799555460614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2995, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [12/25] Loss: 0.0038962568550442275, RECONS: 0.003564490471035242, DISTANCE: 0.3317663852985089
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3487, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [13/25] Loss: 0.003925399272702634, RECONS: 0.00359543931803533, DISTANCE: 0.3299599715641567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3540, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [14/25] Loss: 0.003965393407270312, RECONS: 0.0036338366257647674, DISTANCE: 0.3315567970275879
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8303, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [15/25] Loss: 0.003944164127460681, RECONS: 0.0036131370725343004, DISTANCE: 0.3310270607471466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [16/25] Loss: 0.00395274832022979, RECONS: 0.0036228151361951057, DISTANCE: 0.32993319455315084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8253, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [17/25] Loss: 0.003932997131616705, RECONS: 0.0036059325017655888, DISTANCE: 0.3270646399921841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4121, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8267, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [18/25] Loss: 0.003948579799677981, RECONS: 0.0036217217137546917, DISTANCE: 0.32685809386403936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [19/25] Loss: 0.003927103662863374, RECONS: 0.0036020728875882924, DISTANCE: 0.325030779838562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4077, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [20/25] Loss: 0.003956298011222056, RECONS: 0.003629918864351653, DISTANCE: 0.3263791572479975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6229, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [21/25] Loss: 0.003954582551324909, RECONS: 0.0036277401747859335, DISTANCE: 0.32684238932349463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3498, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8730, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6260, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [22/25] Loss: 0.004000143552927867, RECONS: 0.0036729061874844456, DISTANCE: 0.32723737281301746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [23/25] Loss: 0.0040350486524403095, RECONS: 0.003706666553625837, DISTANCE: 0.32838210463523865
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3460, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[232/300] [24/25] Loss: 0.004061807971447706, RECONS: 0.0037191493902355433, DISTANCE: 0.3426585912704468
Test[232/300] [0/2] Loss: 0.004377811681479216, RECONS: 0.003422881243750453, DISTANCE: 0.954930305480957
Test[232/300] [1/2] Loss: 0.0043111988343298435, RECONS: 0.0030893118819221854, DISTANCE: 1.2218868732452393
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [0/25] Loss: 0.003346553072333336, RECONS: 0.0030245226807892323, DISTANCE: 0.3220304250717163
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5923, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3973, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8273, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5898, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [1/25] Loss: 0.004013099707663059, RECONS: 0.003680190769955516, DISTANCE: 0.3329090476036072
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4339, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8186, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5815, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [2/25] Loss: 0.004469216025123994, RECONS: 0.0041399177474280196, DISTANCE: 0.32929829756418866
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8152, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5863, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [3/25] Loss: 0.004582049325108528, RECONS: 0.004259182256646454, DISTANCE: 0.32286712527275085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3987, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8423, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [4/25] Loss: 0.004555889032781124, RECONS: 0.004231048095971346, DISTANCE: 0.32484095096588134
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8591, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [5/25] Loss: 0.004522976387913029, RECONS: 0.0041970153494427604, DISTANCE: 0.32596105337142944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8870, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [6/25] Loss: 0.004486532083579472, RECONS: 0.0041629221689488205, DISTANCE: 0.3236099140984671
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3490, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8921, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6239, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [7/25] Loss: 0.004514991887845099, RECONS: 0.004184372315648943, DISTANCE: 0.33061958849430084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [8/25] Loss: 0.00446097149203221, RECONS: 0.004134056184233891, DISTANCE: 0.32691533035702175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3712, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [9/25] Loss: 0.004388849856331945, RECONS: 0.004063315992243588, DISTANCE: 0.3255338788032532
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [10/25] Loss: 0.0043103656604547395, RECONS: 0.003985835239291191, DISTANCE: 0.3245304389433427
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8296, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [11/25] Loss: 0.004242369536465655, RECONS: 0.003914436791092157, DISTANCE: 0.3279327650864919
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [12/25] Loss: 0.004189363000198052, RECONS: 0.00386443820137244, DISTANCE: 0.32492480828211856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8328, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [13/25] Loss: 0.0041398885659873486, RECONS: 0.003816483193077147, DISTANCE: 0.3234053765024458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6243, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3220, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8309, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [14/25] Loss: 0.0041028729329506556, RECONS: 0.0037801287757853667, DISTANCE: 0.32274415493011477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3354, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6276, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [15/25] Loss: 0.004141113342484459, RECONS: 0.0038170226325746626, DISTANCE: 0.32409071177244186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6239, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [16/25] Loss: 0.004164939171031994, RECONS: 0.0038424121928127375, DISTANCE: 0.3225269808488734
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3583, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [17/25] Loss: 0.004115172972281774, RECONS: 0.003792384872213006, DISTANCE: 0.32278810607062447
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3780, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8737, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [18/25] Loss: 0.004113474027498772, RECONS: 0.003789098014270789, DISTANCE: 0.3243760309721294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8735, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [19/25] Loss: 0.004079883615486324, RECONS: 0.0037550376378931104, DISTANCE: 0.32484599351882937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5924, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [20/25] Loss: 0.004049011129176333, RECONS: 0.003723304241984373, DISTANCE: 0.3257069020044236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4208, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [21/25] Loss: 0.004071914019401778, RECONS: 0.003746972048909149, DISTANCE: 0.3249419927597046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8352, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [22/25] Loss: 0.00405621340336359, RECONS: 0.003731803077718486, DISTANCE: 0.32441034524337103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3685, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6206, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [23/25] Loss: 0.004048062905591602, RECONS: 0.0037220994903085134, DISTANCE: 0.32596343755722046
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3681, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[233/300] [24/25] Loss: 0.0041001384239643815, RECONS: 0.003757592458277941, DISTANCE: 0.3425459909439087
Test[233/300] [0/2] Loss: 0.0043594627641141415, RECONS: 0.0036510583013296127, DISTANCE: 0.7084044218063354
Test[233/300] [1/2] Loss: 0.004555047722533345, RECONS: 0.0032714081462472677, DISTANCE: 1.283639371395111
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3390, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8707, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6208, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [0/25] Loss: 0.004403962753713131, RECONS: 0.004111705347895622, DISTANCE: 0.29225730895996094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3714, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [1/25] Loss: 0.0041193049401044846, RECONS: 0.0038021488580852747, DISTANCE: 0.3171560764312744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3414, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8678, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [2/25] Loss: 0.0038717170245945454, RECONS: 0.0035490919835865498, DISTANCE: 0.3226250410079956
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8420, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5907, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [3/25] Loss: 0.004119910881854594, RECONS: 0.003796093282289803, DISTANCE: 0.323817640542984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5931, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [4/25] Loss: 0.004047373821958899, RECONS: 0.0037246784660965203, DISTANCE: 0.32269537448883057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4036, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [5/25] Loss: 0.004010688552322487, RECONS: 0.0036891912653421364, DISTANCE: 0.3214973012606303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4279, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [6/25] Loss: 0.0040261204287941965, RECONS: 0.0036988876360867706, DISTANCE: 0.32723283767700195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4269, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [7/25] Loss: 0.00400736418669112, RECONS: 0.003679378191009164, DISTANCE: 0.32798604667186737
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4185, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8409, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [8/25] Loss: 0.003991534131475621, RECONS: 0.003661857710944282, DISTANCE: 0.32967646916707355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4114, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [9/25] Loss: 0.003940810123458505, RECONS: 0.003611622448079288, DISTANCE: 0.3291877269744873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [10/25] Loss: 0.003889374350282279, RECONS: 0.0035590844609859314, DISTANCE: 0.3302899273959073
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3796, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8638, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [11/25] Loss: 0.0038660847155066826, RECONS: 0.003534720182263603, DISTANCE: 0.3313645621140798
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3617, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8705, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [12/25] Loss: 0.0038717046845704317, RECONS: 0.0035426354107375327, DISTANCE: 0.3290692934623131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3679, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [13/25] Loss: 0.0038660197418981363, RECONS: 0.0035386458704514162, DISTANCE: 0.32737389632633757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3303, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [14/25] Loss: 0.003800026591246327, RECONS: 0.003474746054659287, DISTANCE: 0.3252805550893148
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3683, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [15/25] Loss: 0.0038014314050087705, RECONS: 0.003478381026070565, DISTANCE: 0.323050394654274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3764, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [16/25] Loss: 0.00380255764021593, RECONS: 0.0034772883552838772, DISTANCE: 0.32526929939494414
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8331, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [17/25] Loss: 0.003801008440657622, RECONS: 0.0034771099583142335, DISTANCE: 0.32389850086636013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3553, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [18/25] Loss: 0.003785601363664395, RECONS: 0.0034625590288717496, DISTANCE: 0.32304234881150096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [19/25] Loss: 0.003824230853933841, RECONS: 0.0035002385964617135, DISTANCE: 0.32399227619171145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6217, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8330, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [20/25] Loss: 0.003824093345818775, RECONS: 0.0034994852640444322, DISTANCE: 0.3246080988929385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3323, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8423, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [21/25] Loss: 0.003818365702913566, RECONS: 0.0034919886172495103, DISTANCE: 0.3263771046291698
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [22/25] Loss: 0.003814747071136599, RECONS: 0.0034878681940229044, DISTANCE: 0.3268789001133131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3261, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [23/25] Loss: 0.003788523618519927, RECONS: 0.003462650851967434, DISTANCE: 0.3258727838595708
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8818, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[234/300] [24/25] Loss: 0.003875465476885438, RECONS: 0.0035337138921022414, DISTANCE: 0.3417516040802002
Test[234/300] [0/2] Loss: 0.004536032676696777, RECONS: 0.003606728743761778, DISTANCE: 0.9293036460876465
Test[234/300] [1/2] Loss: 0.00454601482488215, RECONS: 0.003306288504973054, DISTANCE: 1.2397260665893555
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [0/25] Loss: 0.003439260646700859, RECONS: 0.003095644060522318, DISTANCE: 0.3436164855957031
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [1/25] Loss: 0.003983870381489396, RECONS: 0.0036685403902083635, DISTANCE: 0.31532996892929077
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3742, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [2/25] Loss: 0.00394958055888613, RECONS: 0.0036307480186223984, DISTANCE: 0.31883251667022705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5902, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [3/25] Loss: 0.004246232099831104, RECONS: 0.003928051562979817, DISTANCE: 0.31818047165870667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8308, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [4/25] Loss: 0.004148503765463829, RECONS: 0.00383527185767889, DISTANCE: 0.31323187351226806
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3542, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [5/25] Loss: 0.004012383016136785, RECONS: 0.003703476822314163, DISTANCE: 0.3089061776796977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6253, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [6/25] Loss: 0.003929567556562168, RECONS: 0.0036217369072671446, DISTANCE: 0.3078306402478899
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8712, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [7/25] Loss: 0.0039380429952871054, RECONS: 0.0036325416003819555, DISTANCE: 0.30550137162208557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [8/25] Loss: 0.0039034042403929764, RECONS: 0.003596360226058298, DISTANCE: 0.30704400274488663
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [9/25] Loss: 0.003949432633817196, RECONS: 0.003644399205222726, DISTANCE: 0.3050334095954895
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3529, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [10/25] Loss: 0.0038832108574834738, RECONS: 0.003570976857603951, DISTANCE: 0.31223397905176337
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8353, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [11/25] Loss: 0.003928853974988063, RECONS: 0.0036130733982038996, DISTANCE: 0.31578055024147034
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8308, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [12/25] Loss: 0.0038953430126779354, RECONS: 0.003578093404380175, DISTANCE: 0.31724958236400896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3824, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [13/25] Loss: 0.003913704089687339, RECONS: 0.003596379089036158, DISTANCE: 0.31732497044972013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6192, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [14/25] Loss: 0.003908700247605642, RECONS: 0.0035919144128759703, DISTANCE: 0.3167858044306437
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8432, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [15/25] Loss: 0.0038858098414493725, RECONS: 0.00356961612123996, DISTANCE: 0.31619369238615036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [16/25] Loss: 0.0038771630566128913, RECONS: 0.00356017513310208, DISTANCE: 0.31698790017296286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3067, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [17/25] Loss: 0.0038508131919014785, RECONS: 0.0035333798215207127, DISTANCE: 0.3174333439932929
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5935, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [18/25] Loss: 0.0038637181278318167, RECONS: 0.0035464204970355098, DISTANCE: 0.31729761550301
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5920, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [19/25] Loss: 0.0038547638687305152, RECONS: 0.0035387878422625365, DISTANCE: 0.3159760177135468
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4174, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5892, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [20/25] Loss: 0.0038509048698913482, RECONS: 0.003533069443489824, DISTANCE: 0.31783542178926016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8369, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5915, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [21/25] Loss: 0.0038849266711622477, RECONS: 0.0035676696253093805, DISTANCE: 0.3172570358623158
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8198, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [22/25] Loss: 0.0038813475377695718, RECONS: 0.0035611971321961155, DISTANCE: 0.3201503909152487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [23/25] Loss: 0.0038562892683936902, RECONS: 0.0035360769737356654, DISTANCE: 0.3202122797568639
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8504, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[235/300] [24/25] Loss: 0.0038693527039140464, RECONS: 0.0035364420898258684, DISTANCE: 0.33291059970855713
Test[235/300] [0/2] Loss: 0.004054320510476828, RECONS: 0.0034139337949454784, DISTANCE: 0.6403865814208984
Test[235/300] [1/2] Loss: 0.004160857759416103, RECONS: 0.0031692874617874622, DISTANCE: 0.9915701746940613
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [0/25] Loss: 0.00377991353161633, RECONS: 0.0034259583335369825, DISTANCE: 0.3539552688598633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [1/25] Loss: 0.0037693538470193744, RECONS: 0.0034212326863780618, DISTANCE: 0.34812116622924805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8702, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [2/25] Loss: 0.0036776382476091385, RECONS: 0.00334887175510327, DISTANCE: 0.3287665049235026
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3499, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8635, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [3/25] Loss: 0.003697060572449118, RECONS: 0.0033507944317534566, DISTANCE: 0.34626615047454834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [4/25] Loss: 0.0036957550793886183, RECONS: 0.0033488227520138024, DISTANCE: 0.34693231582641604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3353, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [5/25] Loss: 0.003690701521312197, RECONS: 0.0033478038385510445, DISTANCE: 0.3428976535797119
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3337, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [6/25] Loss: 0.00371676407355283, RECONS: 0.0033745568112603258, DISTANCE: 0.3422072274344308
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8228, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [7/25] Loss: 0.0037265146092977375, RECONS: 0.0033905652235262096, DISTANCE: 0.3359493464231491
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [8/25] Loss: 0.0037498910549200242, RECONS: 0.003413661615923047, DISTANCE: 0.33622941705915665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8251, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5916, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [9/25] Loss: 0.0038026553811505437, RECONS: 0.0034692373825237154, DISTANCE: 0.33341796398162843
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3974, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5974, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [10/25] Loss: 0.003823065050792965, RECONS: 0.0034886594777080145, DISTANCE: 0.3344055305827748
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3891, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [11/25] Loss: 0.003837631801919391, RECONS: 0.0035051737601558366, DISTANCE: 0.3324580093224843
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8641, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [12/25] Loss: 0.003860447251309569, RECONS: 0.003525901585817337, DISTANCE: 0.3345456306750958
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3964, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [13/25] Loss: 0.003891203702161355, RECONS: 0.0035529789913977894, DISTANCE: 0.3382246664592198
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4259, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8780, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [14/25] Loss: 0.0038699408372243247, RECONS: 0.0035302870286007724, DISTANCE: 0.3396537621815999
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4221, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [15/25] Loss: 0.00385576268308796, RECONS: 0.00351483013946563, DISTANCE: 0.3409325033426285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4106, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [16/25] Loss: 0.0038321376778185368, RECONS: 0.0034937879810219303, DISTANCE: 0.3383496649125043
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [17/25] Loss: 0.00381741882301867, RECONS: 0.0034811025123215383, DISTANCE: 0.3363162808948093
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [18/25] Loss: 0.0038381905147903844, RECONS: 0.003504025406743351, DISTANCE: 0.3341650774604396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3910, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8308, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [19/25] Loss: 0.0038157690432853997, RECONS: 0.003481739270500839, DISTANCE: 0.3340297400951385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3509, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8442, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [20/25] Loss: 0.003809764038860088, RECONS: 0.0034757666733293306, DISTANCE: 0.333997334752764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3565, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [21/25] Loss: 0.0037865209583701057, RECONS: 0.003453753317113627, DISTANCE: 0.33276761120015924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3580, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [22/25] Loss: 0.0037741078489014635, RECONS: 0.003442119645035785, DISTANCE: 0.33198817916538403
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3717, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8630, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [23/25] Loss: 0.0037531802954617888, RECONS: 0.003421636763960123, DISTANCE: 0.331543505191803
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[236/300] [24/25] Loss: 0.003767023300752044, RECONS: 0.0034217822924256323, DISTANCE: 0.34524097442626955
Test[236/300] [0/2] Loss: 0.004154646769165993, RECONS: 0.003350071143358946, DISTANCE: 0.8045754432678223
Test[236/300] [1/2] Loss: 0.004504391457885504, RECONS: 0.0031967825489118695, DISTANCE: 1.3076088428497314
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3864, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [0/25] Loss: 0.004008475691080093, RECONS: 0.0036727148108184338, DISTANCE: 0.3357609510421753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8704, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [1/25] Loss: 0.00378632009960711, RECONS: 0.003460037987679243, DISTANCE: 0.3262821435928345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [2/25] Loss: 0.003769936893756191, RECONS: 0.003456678163881103, DISTANCE: 0.31325872739156085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4040, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [3/25] Loss: 0.003681689267978072, RECONS: 0.0033693459699861705, DISTANCE: 0.3123432993888855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4139, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8402, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [4/25] Loss: 0.0037088931072503327, RECONS: 0.0033986926544457676, DISTANCE: 0.31020045280456543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [5/25] Loss: 0.003658220754005015, RECONS: 0.003349502105265856, DISTANCE: 0.30871864159901935
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3776, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [6/25] Loss: 0.003743848663621715, RECONS: 0.0034342935707952294, DISTANCE: 0.30955508777073454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3588, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [7/25] Loss: 0.003717214713105932, RECONS: 0.003408510150620714, DISTANCE: 0.30870455503463745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3747, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [8/25] Loss: 0.003731910061712066, RECONS: 0.0034236622353394828, DISTANCE: 0.30824781788720024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3432, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [9/25] Loss: 0.003717011772096157, RECONS: 0.00340827158652246, DISTANCE: 0.3087401747703552
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3498, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [10/25] Loss: 0.0036968913521956315, RECONS: 0.003388194219124588, DISTANCE: 0.3086971261284568
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [11/25] Loss: 0.003772837963576118, RECONS: 0.003463809824703882, DISTANCE: 0.30902812878290814
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4188, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [12/25] Loss: 0.0038264591533404132, RECONS: 0.0035173613757181624, DISTANCE: 0.30909777604616606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4149, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [13/25] Loss: 0.0038239741697907448, RECONS: 0.0035122526377173407, DISTANCE: 0.31172153779438566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4088, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8387, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [14/25] Loss: 0.003857277861485879, RECONS: 0.0035470026700447003, DISTANCE: 0.31027520497639977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4011, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [15/25] Loss: 0.0038348935486283153, RECONS: 0.0035240301804151386, DISTANCE: 0.3108633756637573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4013, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [16/25] Loss: 0.003812208470395383, RECONS: 0.0035025976625654627, DISTANCE: 0.30961081560920267
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4081, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [17/25] Loss: 0.0037951706779292887, RECONS: 0.0034840290770969456, DISTANCE: 0.31114160352283055
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3818, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [18/25] Loss: 0.0037695921982001316, RECONS: 0.0034588242415338755, DISTANCE: 0.31076795803873164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [19/25] Loss: 0.0037957024876959624, RECONS: 0.003485830465797335, DISTANCE: 0.3098720133304596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3620, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [20/25] Loss: 0.00376749291483845, RECONS: 0.0034552292255241247, DISTANCE: 0.31226368177504765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3483, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [21/25] Loss: 0.0037307873347096824, RECONS: 0.003418518600731411, DISTANCE: 0.31226872314106335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3218, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [22/25] Loss: 0.0037065899991632805, RECONS: 0.003393598417144107, DISTANCE: 0.3129915672799815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [23/25] Loss: 0.003686517923294256, RECONS: 0.003374189051100984, DISTANCE: 0.31232885519663495
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[237/300] [24/25] Loss: 0.0036908312048763037, RECONS: 0.003362283129245043, DISTANCE: 0.3285480546951294
Test[237/300] [0/2] Loss: 0.004827651660889387, RECONS: 0.003917068243026733, DISTANCE: 0.91058349609375
Test[237/300] [1/2] Loss: 0.004698128206655383, RECONS: 0.003482615575194359, DISTANCE: 1.2155125141143799
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [0/25] Loss: 0.005041228141635656, RECONS: 0.004681819584220648, DISTANCE: 0.3594083786010742
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [1/25] Loss: 0.004239199683070183, RECONS: 0.0038813469000160694, DISTANCE: 0.3578526973724365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6187, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8336, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [2/25] Loss: 0.003989997707928221, RECONS: 0.0036575261813898883, DISTANCE: 0.33247148990631104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8335, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [3/25] Loss: 0.003925173252355307, RECONS: 0.0035972424084320664, DISTANCE: 0.32793083786964417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [4/25] Loss: 0.0038103241473436355, RECONS: 0.0034872606862336396, DISTANCE: 0.32306344509124757
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3165, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8514, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6233, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [5/25] Loss: 0.003805869957432151, RECONS: 0.0034819194115698338, DISTANCE: 0.32395050923029584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8555, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [6/25] Loss: 0.003747930484158652, RECONS: 0.0034293593240103553, DISTANCE: 0.3185711417879377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3471, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [7/25] Loss: 0.003682496811961755, RECONS: 0.003363817377248779, DISTANCE: 0.31867942214012146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3490, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [8/25] Loss: 0.0036799323020709884, RECONS: 0.0033547133207321167, DISTANCE: 0.32521896892123753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8293, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [9/25] Loss: 0.0037403608206659556, RECONS: 0.003417961113154888, DISTANCE: 0.32239967584609985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [10/25] Loss: 0.0037027347240258346, RECONS: 0.003375930775126273, DISTANCE: 0.32680392265319824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [11/25] Loss: 0.0037116616343458495, RECONS: 0.0033828747497561076, DISTANCE: 0.32878686984380084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4058, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [12/25] Loss: 0.003742137923836708, RECONS: 0.0034091698292356273, DISTANCE: 0.33296806995685285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4100, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [13/25] Loss: 0.003781548867534314, RECONS: 0.003447500124041523, DISTANCE: 0.33404873098645893
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [14/25] Loss: 0.003768828371539712, RECONS: 0.003437154305477937, DISTANCE: 0.33167405128479005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8776, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [15/25] Loss: 0.00375311792595312, RECONS: 0.003419615895836614, DISTANCE: 0.33350200951099396
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3678, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [16/25] Loss: 0.0037385315689093925, RECONS: 0.00340742408297956, DISTANCE: 0.3311074621537152
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8918, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [17/25] Loss: 0.0037253983836207124, RECONS: 0.0033966170287587577, DISTANCE: 0.32878132661183673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3692, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8646, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [18/25] Loss: 0.003728737883073719, RECONS: 0.0033996867530636096, DISTANCE: 0.32905110559965434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8407, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [19/25] Loss: 0.003726723219733685, RECONS: 0.0033975433208979664, DISTANCE: 0.3291798710823059
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [20/25] Loss: 0.0037325345024111726, RECONS: 0.003402549895413575, DISTANCE: 0.3299845797674997
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8313, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [21/25] Loss: 0.003738751465624029, RECONS: 0.003408992133865302, DISTANCE: 0.32975929975509644
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3313, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8305, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [22/25] Loss: 0.003737409224571741, RECONS: 0.003407444278507129, DISTANCE: 0.3299649124560149
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [23/25] Loss: 0.003764246250890816, RECONS: 0.003436304493031154, DISTANCE: 0.3279417206843694
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.5943, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8136, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5909, device='cuda:0', grad_fn=<MeanBackward0>)
Train[238/300] [24/25] Loss: 0.003767586452886462, RECONS: 0.003423182284459472, DISTANCE: 0.3444041347503662
Test[238/300] [0/2] Loss: 0.004649284295737743, RECONS: 0.00393728306517005, DISTANCE: 0.7120012044906616
Test[238/300] [1/2] Loss: 0.005052307387813926, RECONS: 0.003924021264538169, DISTANCE: 1.128286063671112
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4089, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8373, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5830, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [0/25] Loss: 0.003781367326155305, RECONS: 0.0034634254407137632, DISTANCE: 0.31794190406799316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4053, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5869, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [1/25] Loss: 0.004249024321325123, RECONS: 0.003917833208106458, DISTANCE: 0.33119118213653564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3905, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [2/25] Loss: 0.004120539330566923, RECONS: 0.0038025203005721173, DISTANCE: 0.3180191119511922
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8733, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [3/25] Loss: 0.004131746070925146, RECONS: 0.0038058229838497937, DISTANCE: 0.3259231448173523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3493, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8625, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [4/25] Loss: 0.004061541287228465, RECONS: 0.003736572479829192, DISTANCE: 0.3249688625335693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6254, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [5/25] Loss: 0.003967594355344772, RECONS: 0.0036447024128089347, DISTANCE: 0.3228919903437297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [6/25] Loss: 0.003847782433565174, RECONS: 0.003524568896474583, DISTANCE: 0.3232135772705078
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3554, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [7/25] Loss: 0.0038493800384458154, RECONS: 0.0035287195059936494, DISTANCE: 0.3206605762243271
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [8/25] Loss: 0.003753107429171602, RECONS: 0.0034331243174771466, DISTANCE: 0.3199831379784478
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [9/25] Loss: 0.0037199449026957153, RECONS: 0.0033957881852984427, DISTANCE: 0.32415673732757566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [10/25] Loss: 0.0036973193372515116, RECONS: 0.0033698102289980107, DISTANCE: 0.3275091214613481
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3833, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8643, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [11/25] Loss: 0.003670728260961672, RECONS: 0.003344592017432054, DISTANCE: 0.3261362512906392
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [12/25] Loss: 0.003668323141307785, RECONS: 0.0033418420129097425, DISTANCE: 0.3264811405768761
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3467, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [13/25] Loss: 0.0036455054068937898, RECONS: 0.0033195230810503873, DISTANCE: 0.3259823407445635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3289, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [14/25] Loss: 0.003620400636767348, RECONS: 0.0032938992138952018, DISTANCE: 0.3265014410018921
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [15/25] Loss: 0.0036191794206388295, RECONS: 0.003290504901087843, DISTANCE: 0.3286745399236679
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3734, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8667, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [16/25] Loss: 0.0036091039998128135, RECONS: 0.0032808534417520553, DISTANCE: 0.32825057646807504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3581, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [17/25] Loss: 0.0035905512308494914, RECONS: 0.003262813228906857, DISTANCE: 0.3277380135324266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3480, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [18/25] Loss: 0.0035928096989855953, RECONS: 0.0032671082421745126, DISTANCE: 0.32570146259508637
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [19/25] Loss: 0.0036008783034048976, RECONS: 0.003275087592191994, DISTANCE: 0.32579071521759034
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3536, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8244, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [20/25] Loss: 0.0036132082764414094, RECONS: 0.0032871515002279054, DISTANCE: 0.32605678126925514
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [21/25] Loss: 0.0036463478939946403, RECONS: 0.0033209955065765166, DISTANCE: 0.3253523978320035
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [22/25] Loss: 0.00364381057696174, RECONS: 0.0033192193419065165, DISTANCE: 0.32459124274875806
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [23/25] Loss: 0.003632855058337251, RECONS: 0.0033090447541326284, DISTANCE: 0.32381031413873035
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[239/300] [24/25] Loss: 0.0036750541254878043, RECONS: 0.0033365851640701294, DISTANCE: 0.3384689664840698
Test[239/300] [0/2] Loss: 0.004432613030076027, RECONS: 0.003409131895750761, DISTANCE: 1.0234813690185547
Test[239/300] [1/2] Loss: 0.004714316688477993, RECONS: 0.0033209945540875196, DISTANCE: 1.393322229385376
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4184, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8425, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [0/25] Loss: 0.0036114356480538845, RECONS: 0.0033056866377592087, DISTANCE: 0.30574893951416016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [1/25] Loss: 0.00353334320243448, RECONS: 0.0032081042882055044, DISTANCE: 0.3252388834953308
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8580, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [2/25] Loss: 0.003459434878701965, RECONS: 0.0031263528702159724, DISTANCE: 0.33308200041453045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3514, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [3/25] Loss: 0.0033476768294349313, RECONS: 0.0030132693937048316, DISTANCE: 0.33440741896629333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3486, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [4/25] Loss: 0.003360467543825507, RECONS: 0.003029277827590704, DISTANCE: 0.3311897039413452
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6229, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3265, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [5/25] Loss: 0.00336277155050387, RECONS: 0.0030263375180462995, DISTANCE: 0.3364340265591939
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2739, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8489, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6269, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [6/25] Loss: 0.003409887198358774, RECONS: 0.0030771144000547273, DISTANCE: 0.3327727828707014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6269, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3243, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8430, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [7/25] Loss: 0.0034334920055698603, RECONS: 0.0031025294156279415, DISTANCE: 0.3309625834226608
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3344, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8615, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6240, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [8/25] Loss: 0.0035330378709154, RECONS: 0.003196213109832671, DISTANCE: 0.33682474825117326
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3318, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8432, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [9/25] Loss: 0.0034998489543795587, RECONS: 0.003164916788227856, DISTANCE: 0.3349321484565735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5931, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [10/25] Loss: 0.0036511083810844207, RECONS: 0.0033169106199321422, DISTANCE: 0.33419774879108777
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3963, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8287, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5887, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [11/25] Loss: 0.003705697560993334, RECONS: 0.003373526754633834, DISTANCE: 0.3321708142757416
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4435, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8301, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5789, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [12/25] Loss: 0.0038233815262523983, RECONS: 0.003489119770865028, DISTANCE: 0.3342617475069486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8251, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5868, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [13/25] Loss: 0.0039037748439503567, RECONS: 0.0035682092254449215, DISTANCE: 0.3355656010763986
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6178, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4443, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8641, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [14/25] Loss: 0.003970773766438166, RECONS: 0.0036377489411582547, DISTANCE: 0.3330248196919759
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8756, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6320, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [15/25] Loss: 0.0040038254810497165, RECONS: 0.0036728252161992714, DISTANCE: 0.3310002535581589
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8808, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6342, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [16/25] Loss: 0.00406047805924626, RECONS: 0.003724261885508895, DISTANCE: 0.33621616223279166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8714, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6263, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [17/25] Loss: 0.004023484665796989, RECONS: 0.003688915205808977, DISTANCE: 0.33456944757037693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.2939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [18/25] Loss: 0.003999330556804412, RECONS: 0.0036641010573427927, DISTANCE: 0.33522949093266535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3682, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [19/25] Loss: 0.00399556263582781, RECONS: 0.0036616977537050842, DISTANCE: 0.3338648736476898
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3636, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5915, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [20/25] Loss: 0.004003356820681975, RECONS: 0.003670514439276996, DISTANCE: 0.332842367036002
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3777, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8232, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [21/25] Loss: 0.00398394739551639, RECONS: 0.003651411537165669, DISTANCE: 0.33253584666685626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6165, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8325, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [22/25] Loss: 0.003991771600735577, RECONS: 0.003660142006676482, DISTANCE: 0.33162958725639013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3536, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8289, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [23/25] Loss: 0.003999685761906828, RECONS: 0.0036691854669091604, DISTANCE: 0.3305002947648366
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3088, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[240/300] [24/25] Loss: 0.004008765956386924, RECONS: 0.003664251985028386, DISTANCE: 0.3445139741897583
Test[240/300] [0/2] Loss: 0.0045068333856761456, RECONS: 0.0036282760556787252, DISTANCE: 0.8785573244094849
Test[240/300] [1/2] Loss: 0.00445089116692543, RECONS: 0.0033574362751096487, DISTANCE: 1.093454897403717
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3493, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [0/25] Loss: 0.003374694148078561, RECONS: 0.0030781838577240705, DISTANCE: 0.2965102195739746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3285, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [1/25] Loss: 0.003894846304319799, RECONS: 0.0035821724450215697, DISTANCE: 0.3126738667488098
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5931, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3392, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [2/25] Loss: 0.003994103133057554, RECONS: 0.0036603999324142933, DISTANCE: 0.3337032397588094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3553, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [3/25] Loss: 0.00406324298819527, RECONS: 0.003724284120835364, DISTANCE: 0.33895888924598694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5971, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [4/25] Loss: 0.003999816440045834, RECONS: 0.003669738490134478, DISTANCE: 0.33007795810699464
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [5/25] Loss: 0.0038782558403909206, RECONS: 0.0035526256542652845, DISTANCE: 0.32563020785649616
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [6/25] Loss: 0.0038337946337248597, RECONS: 0.0035085774558995452, DISTANCE: 0.3252171959195818
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3970, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6242, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [7/25] Loss: 0.0039042761782184243, RECONS: 0.0035785658401437104, DISTANCE: 0.32571037113666534
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3963, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [8/25] Loss: 0.003987595283736785, RECONS: 0.0036554941390123633, DISTANCE: 0.33210115962558323
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8430, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [9/25] Loss: 0.003952566953375936, RECONS: 0.0036211494356393815, DISTANCE: 0.33141752481460574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3837, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [10/25] Loss: 0.003926145674830133, RECONS: 0.0035919628783383155, DISTANCE: 0.3341827934438532
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [11/25] Loss: 0.003884928456197182, RECONS: 0.003550053806975484, DISTANCE: 0.3348746399084727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3589, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [12/25] Loss: 0.0038899404641527394, RECONS: 0.00355766389447336, DISTANCE: 0.33227655520805943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3511, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [13/25] Loss: 0.0038507710809686352, RECONS: 0.003519054951279291, DISTANCE: 0.3317161202430725
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [14/25] Loss: 0.0038360984064638613, RECONS: 0.0035056439228355885, DISTANCE: 0.3304544687271118
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4111, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5973, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [15/25] Loss: 0.0038066002598498017, RECONS: 0.003477584818028845, DISTANCE: 0.32901542633771896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [16/25] Loss: 0.003797014819129425, RECONS: 0.0034701263066381216, DISTANCE: 0.32688849813797893
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [17/25] Loss: 0.0037908367812633514, RECONS: 0.0034654683355862894, DISTANCE: 0.32536842425664264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [18/25] Loss: 0.003771451056787842, RECONS: 0.0034444273792599376, DISTANCE: 0.32702366301887914
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5883, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3811, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [19/25] Loss: 0.003797554993070662, RECONS: 0.0034703077049925922, DISTANCE: 0.32724726796150205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3430, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [20/25] Loss: 0.0037664101858224186, RECONS: 0.003439497978736957, DISTANCE: 0.32691218171800884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3876, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [21/25] Loss: 0.0037885812238197436, RECONS: 0.0034605309113182807, DISTANCE: 0.3280502937056802
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [22/25] Loss: 0.0037499514671609454, RECONS: 0.0034214454176633253, DISTANCE: 0.32850602917049243
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3299, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8636, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [23/25] Loss: 0.0037214761250652373, RECONS: 0.0033924991245536753, DISTANCE: 0.3289769838253657
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[241/300] [24/25] Loss: 0.003721816809847951, RECONS: 0.0033798515889793632, DISTANCE: 0.3419652032852173
Test[241/300] [0/2] Loss: 0.00414380244910717, RECONS: 0.0033032388892024755, DISTANCE: 0.8405637741088867
Test[241/300] [1/2] Loss: 0.004277670290321112, RECONS: 0.003024538396857679, DISTANCE: 1.2531318664550781
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3786, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [0/25] Loss: 0.0032640465069562197, RECONS: 0.0029504504054784775, DISTANCE: 0.31359612941741943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3768, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8447, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [1/25] Loss: 0.0032701013842597604, RECONS: 0.002971180249005556, DISTANCE: 0.2989211678504944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3231, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [2/25] Loss: 0.0032467948428044715, RECONS: 0.0029309847547362247, DISTANCE: 0.31581008434295654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3686, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8292, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [3/25] Loss: 0.0034613711177371442, RECONS: 0.00314089102903381, DISTANCE: 0.3204800486564636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [4/25] Loss: 0.0034348408225923777, RECONS: 0.003119519492611289, DISTANCE: 0.3153213024139404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3640, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [5/25] Loss: 0.003442336766359707, RECONS: 0.003121516628501316, DISTANCE: 0.3208201328913371
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3987, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [6/25] Loss: 0.003415354194917849, RECONS: 0.0030913070575999363, DISTANCE: 0.3240471226828439
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3635, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [7/25] Loss: 0.0034051930415444076, RECONS: 0.0030795271159149706, DISTANCE: 0.3256659209728241
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [8/25] Loss: 0.0034314332167721456, RECONS: 0.003104675587059723, DISTANCE: 0.32675761646694607
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4265, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [9/25] Loss: 0.003508568718098104, RECONS: 0.0031839281087741255, DISTANCE: 0.32464059591293337
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4238, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8709, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [10/25] Loss: 0.003505278124727986, RECONS: 0.003183396914127198, DISTANCE: 0.321881196715615
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [11/25] Loss: 0.003470603881093363, RECONS: 0.0031483014463447034, DISTANCE: 0.3223024109999339
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3836, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [12/25] Loss: 0.003453436862820616, RECONS: 0.003129766179391971, DISTANCE: 0.3236706531964816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [13/25] Loss: 0.0034329482753361973, RECONS: 0.0031112745138151304, DISTANCE: 0.3216737338474819
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [14/25] Loss: 0.003416235465556383, RECONS: 0.0030936310378213722, DISTANCE: 0.3226044019063314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3921, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [15/25] Loss: 0.003403794748010114, RECONS: 0.0030811094911769032, DISTANCE: 0.32268522679805756
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [16/25] Loss: 0.0034073879531420328, RECONS: 0.0030821515521144167, DISTANCE: 0.32523636958178354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3375, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8341, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [17/25] Loss: 0.0033898469733281266, RECONS: 0.0030658467181233894, DISTANCE: 0.3240002195040385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [18/25] Loss: 0.0034305156012506863, RECONS: 0.003106508955457493, DISTANCE: 0.32400660765798467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [19/25] Loss: 0.0034654766554012895, RECONS: 0.003141134569887072, DISTANCE: 0.32434204816818235
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6232, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8288, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [20/25] Loss: 0.003495802991979179, RECONS: 0.0031708444003015757, DISTANCE: 0.32495856285095215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [21/25] Loss: 0.003488089127296751, RECONS: 0.0031620266699147496, DISTANCE: 0.32606243003498425
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4101, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [22/25] Loss: 0.0034983386488064475, RECONS: 0.003172319756982767, DISTANCE: 0.3260188621023427
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [23/25] Loss: 0.0034974387381225824, RECONS: 0.003172842077522849, DISTANCE: 0.3245966335137685
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3623, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8484, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[242/300] [24/25] Loss: 0.0035095499083399773, RECONS: 0.0031680244114249945, DISTANCE: 0.3415254640579224
Test[242/300] [0/2] Loss: 0.004427286796271801, RECONS: 0.0034651290625333786, DISTANCE: 0.9621578454971313
Test[242/300] [1/2] Loss: 0.0043328008614480495, RECONS: 0.002981855417601764, DISTANCE: 1.35094553232193
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3669, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [0/25] Loss: 0.0030919245909899473, RECONS: 0.0027454406954348087, DISTANCE: 0.34648382663726807
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3814, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8749, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [1/25] Loss: 0.003148951567709446, RECONS: 0.0028203625697642565, DISTANCE: 0.32858896255493164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [2/25] Loss: 0.0031394228183974824, RECONS: 0.002813267599170407, DISTANCE: 0.3261551856994629
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3526, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8406, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [3/25] Loss: 0.0031063610804267228, RECONS: 0.0027817912050522864, DISTANCE: 0.32456982135772705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [4/25] Loss: 0.003045424399897456, RECONS: 0.002721087587997317, DISTANCE: 0.3243367671966553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [5/25] Loss: 0.003071349075374504, RECONS: 0.0027483400966351232, DISTANCE: 0.3230089545249939
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8301, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [6/25] Loss: 0.0031191088990973575, RECONS: 0.00279947995607342, DISTANCE: 0.3196289198739188
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3767, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8421, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [7/25] Loss: 0.0031362140725832433, RECONS: 0.0028179423534311354, DISTANCE: 0.3182716965675354
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3524, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8335, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [8/25] Loss: 0.003153804689645767, RECONS: 0.0028380133315092987, DISTANCE: 0.31579134199354386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5955, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [9/25] Loss: 0.003234207211062312, RECONS: 0.002920334250666201, DISTANCE: 0.3138729572296143
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4152, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [10/25] Loss: 0.0032467731613327155, RECONS: 0.0029357311908494344, DISTANCE: 0.3110419620167125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5945, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4065, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [11/25] Loss: 0.003311520714002351, RECONS: 0.0030014195945113897, DISTANCE: 0.31010109186172485
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [12/25] Loss: 0.003357302863150835, RECONS: 0.0030444384588358495, DISTANCE: 0.31286438611837536
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3774, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [13/25] Loss: 0.0033462479145133068, RECONS: 0.0030333378318963306, DISTANCE: 0.3129100629261562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4324, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [14/25] Loss: 0.003366525766129295, RECONS: 0.0030540729096780223, DISTANCE: 0.3124528408050537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4235, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8355, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [15/25] Loss: 0.0033790810412028804, RECONS: 0.0030642943893326446, DISTANCE: 0.3147866353392601
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [16/25] Loss: 0.003388996934518218, RECONS: 0.003073408309479847, DISTANCE: 0.31558861451990466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3923, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6184, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [17/25] Loss: 0.0034215692560084993, RECONS: 0.0031051511177793145, DISTANCE: 0.3164181179470486
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [18/25] Loss: 0.0034428369008788935, RECONS: 0.0031270322414409172, DISTANCE: 0.315804638360676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4036, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8857, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [19/25] Loss: 0.0034539125161245467, RECONS: 0.003139023308176547, DISTANCE: 0.3148891866207123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8339, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [20/25] Loss: 0.0034543676745323907, RECONS: 0.0031374038773633187, DISTANCE: 0.31696378049396334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8305, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5974, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [21/25] Loss: 0.003474123765375804, RECONS: 0.0031545235648412595, DISTANCE: 0.31960018656470557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3602, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [22/25] Loss: 0.003480295336845776, RECONS: 0.003161326556911935, DISTANCE: 0.318968767705171
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3655, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [23/25] Loss: 0.0035012593240632364, RECONS: 0.0031819585419725627, DISTANCE: 0.3193007657925288
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8439, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[243/300] [24/25] Loss: 0.00351599776186049, RECONS: 0.0031813783571124077, DISTANCE: 0.33461939334869384
Test[243/300] [0/2] Loss: 0.004544003400951624, RECONS: 0.003775518387556076, DISTANCE: 0.7684850692749023
Test[243/300] [1/2] Loss: 0.0044128627050668, RECONS: 0.003427232033573091, DISTANCE: 0.9856307506561279
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8569, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [0/25] Loss: 0.00394538464024663, RECONS: 0.003645264310762286, DISTANCE: 0.30012011528015137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8670, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [1/25] Loss: 0.003575766575522721, RECONS: 0.0032684815814718604, DISTANCE: 0.3072848916053772
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [2/25] Loss: 0.0035733431577682495, RECONS: 0.003263322481264671, DISTANCE: 0.31002060572306317
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3653, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [3/25] Loss: 0.003829814726486802, RECONS: 0.0035206188913434744, DISTANCE: 0.30919575691223145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4040, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8324, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [4/25] Loss: 0.0037956173531711102, RECONS: 0.003492112969979644, DISTANCE: 0.3035043001174927
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4216, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8236, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [5/25] Loss: 0.0037950521800667048, RECONS: 0.003488405879276494, DISTANCE: 0.306646207968394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4631, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [6/25] Loss: 0.00393888507304447, RECONS: 0.0036311072097825153, DISTANCE: 0.3077777624130249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4468, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8406, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [7/25] Loss: 0.003900140553014353, RECONS: 0.0035864459059666842, DISTANCE: 0.3136945515871048
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8721, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [8/25] Loss: 0.0038776388650553096, RECONS: 0.0035647216718643904, DISTANCE: 0.3129171133041382
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4238, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [9/25] Loss: 0.003853064007125795, RECONS: 0.003541683848015964, DISTANCE: 0.3113800883293152
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3969, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [10/25] Loss: 0.0037695517848161135, RECONS: 0.00346154052848843, DISTANCE: 0.3080111958763816
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3988, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8616, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [11/25] Loss: 0.0037513600545935333, RECONS: 0.003444929044538488, DISTANCE: 0.30643094579378766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4040, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [12/25] Loss: 0.0037317127168465117, RECONS: 0.003425166207867173, DISTANCE: 0.3065464404913095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4147, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [13/25] Loss: 0.003684840115186359, RECONS: 0.0033764231650690946, DISTANCE: 0.3084168859890529
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3867, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8464, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [14/25] Loss: 0.0037009552276382842, RECONS: 0.003389116407682498, DISTANCE: 0.31183876991271975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6152, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3900, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8266, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [15/25] Loss: 0.003707722935359925, RECONS: 0.0033940848807105795, DISTANCE: 0.31363800913095474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3425, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8369, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [16/25] Loss: 0.003684308215537492, RECONS: 0.003369238624787506, DISTANCE: 0.3150695422116448
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8367, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [17/25] Loss: 0.003652956233256393, RECONS: 0.0033346109299196135, DISTANCE: 0.31834526194466484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8289, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [18/25] Loss: 0.0036246104558047497, RECONS: 0.0033058953520498776, DISTANCE: 0.318715070423327
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3824, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [19/25] Loss: 0.0036223008530214427, RECONS: 0.003302118310239166, DISTANCE: 0.32018251419067384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3317, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8636, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [20/25] Loss: 0.003641981232379164, RECONS: 0.0033222238887988384, DISTANCE: 0.3197573253086635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [21/25] Loss: 0.0036239633971655912, RECONS: 0.003304443639618429, DISTANCE: 0.31951973655007104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [22/25] Loss: 0.0036173840863225255, RECONS: 0.0032962613091196704, DISTANCE: 0.32112275517505146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5981, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [23/25] Loss: 0.003627525041035066, RECONS: 0.0033067657107797763, DISTANCE: 0.3207593113183975
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6365, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[244/300] [24/25] Loss: 0.0037452917732298373, RECONS: 0.00340479351580143, DISTANCE: 0.3404982471466064
Test[244/300] [0/2] Loss: 0.004676701035350561, RECONS: 0.0035923232790082693, DISTANCE: 1.0843777656555176
Test[244/300] [1/2] Loss: 0.0047484266106039286, RECONS: 0.00325175269972533, DISTANCE: 1.496673822402954
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8570, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [0/25] Loss: 0.0034252454061061144, RECONS: 0.0031377612613141537, DISTANCE: 0.2874840497970581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [1/25] Loss: 0.004260765970684588, RECONS: 0.003944106167182326, DISTANCE: 0.3166598677635193
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6250, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [2/25] Loss: 0.003937866926814119, RECONS: 0.003607360956569513, DISTANCE: 0.3305060068766276
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3806, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [3/25] Loss: 0.003717899729963392, RECONS: 0.003394391038455069, DISTANCE: 0.32350873947143555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [4/25] Loss: 0.0036377680487930776, RECONS: 0.003308876045048237, DISTANCE: 0.32889204025268554
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8257, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [5/25] Loss: 0.0035870662347103157, RECONS: 0.003257936332374811, DISTANCE: 0.3291299343109131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [6/25] Loss: 0.0036050597139235053, RECONS: 0.0032801194049950156, DISTANCE: 0.32494034085954937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [7/25] Loss: 0.003542819671565667, RECONS: 0.0032204521994572133, DISTANCE: 0.32236748933792114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3963, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [8/25] Loss: 0.0035931875463575125, RECONS: 0.003271232410851452, DISTANCE: 0.3219551510281033
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5955, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [9/25] Loss: 0.003653005347587168, RECONS: 0.003329522185958922, DISTANCE: 0.32348318099975587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [10/25] Loss: 0.003591221524402499, RECONS: 0.0032675599213689566, DISTANCE: 0.3236616308038885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3959, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8345, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [11/25] Loss: 0.0036161310272291303, RECONS: 0.00329262592519323, DISTANCE: 0.32350512345631915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5928, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [12/25] Loss: 0.003587682068777772, RECONS: 0.003266536111298662, DISTANCE: 0.3211459746727577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3685, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [13/25] Loss: 0.0035674975120595525, RECONS: 0.0032353808138785617, DISTANCE: 0.3321167060307094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5900, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [14/25] Loss: 0.0036129950545728206, RECONS: 0.0032814632635563613, DISTANCE: 0.33153181076049804
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6202, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [15/25] Loss: 0.0036349626898299903, RECONS: 0.0033045767777366564, DISTANCE: 0.3303859308362007
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [16/25] Loss: 0.0036356101524742212, RECONS: 0.003306552644490319, DISTANCE: 0.32905753219828887
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3419, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [17/25] Loss: 0.0036011660186987785, RECONS: 0.0032709966180846095, DISTANCE: 0.330169419447581
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3640, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8520, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [18/25] Loss: 0.0036137783899903297, RECONS: 0.0032836087783308407, DISTANCE: 0.33016963381516307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3385, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6194, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [19/25] Loss: 0.0035963587230071425, RECONS: 0.003265102207660675, DISTANCE: 0.3312565326690674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [20/25] Loss: 0.003599287487477774, RECONS: 0.0032695483061529343, DISTANCE: 0.32973920163654147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3697, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8285, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [21/25] Loss: 0.00358268646100028, RECONS: 0.0032525640616024084, DISTANCE: 0.33012242208827625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6226, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4131, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8247, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [22/25] Loss: 0.003627308178693056, RECONS: 0.003299541467719752, DISTANCE: 0.327766724254774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4005, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [23/25] Loss: 0.0036013847372184196, RECONS: 0.0032753360477120927, DISTANCE: 0.32604870696862537
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6203, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3468, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[245/300] [24/25] Loss: 0.003611638890579343, RECONS: 0.0032716401293873786, DISTANCE: 0.3399987745285034
Test[245/300] [0/2] Loss: 0.00442719180136919, RECONS: 0.003749871626496315, DISTANCE: 0.6773200035095215
Test[245/300] [1/2] Loss: 0.004652317613363266, RECONS: 0.003519739839248359, DISTANCE: 1.1325777173042297
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3505, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8648, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [0/25] Loss: 0.00415607588365674, RECONS: 0.003834495786577463, DISTANCE: 0.3215799331665039
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3755, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6242, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [1/25] Loss: 0.0036300329957157373, RECONS: 0.0033162690233439207, DISTANCE: 0.3137638568878174
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3784, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [2/25] Loss: 0.003830772048483292, RECONS: 0.0035126591877390942, DISTANCE: 0.31811273097991943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3482, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [3/25] Loss: 0.0035617880057543516, RECONS: 0.003250513516832143, DISTANCE: 0.3112744092941284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3584, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [4/25] Loss: 0.0034635260235518217, RECONS: 0.003151590609923005, DISTANCE: 0.3119353294372559
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4112, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8326, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5898, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [5/25] Loss: 0.0034491021263723574, RECONS: 0.0031353775023793182, DISTANCE: 0.3137245575586955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8258, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [6/25] Loss: 0.0034391802868672778, RECONS: 0.0031238828586148365, DISTANCE: 0.31529736518859863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4282, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8298, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [7/25] Loss: 0.00339635883574374, RECONS: 0.003079830261413008, DISTANCE: 0.3165285289287567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [8/25] Loss: 0.0034272328743504155, RECONS: 0.003108761583765348, DISTANCE: 0.3184712595409817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4005, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [9/25] Loss: 0.0034441231982782483, RECONS: 0.0031248854240402578, DISTANCE: 0.319237744808197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [10/25] Loss: 0.003417886941778389, RECONS: 0.0030963251324878497, DISTANCE: 0.32156178084286774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4197, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [11/25] Loss: 0.003416246618144214, RECONS: 0.0030960198879862824, DISTANCE: 0.3202266991138458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [12/25] Loss: 0.0034091994166374207, RECONS: 0.0030895206862344192, DISTANCE: 0.3196787008872399
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4042, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [13/25] Loss: 0.0033942305516185506, RECONS: 0.0030730580911040306, DISTANCE: 0.32117243324007305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6179, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8395, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [14/25] Loss: 0.0034136152050147452, RECONS: 0.003092093082765738, DISTANCE: 0.32152210076649984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8447, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [15/25] Loss: 0.003418247404624708, RECONS: 0.003095233390922658, DISTANCE: 0.3230139911174774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8624, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [16/25] Loss: 0.0034153342849629767, RECONS: 0.0030942425296148833, DISTANCE: 0.32109172905192657
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8463, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6251, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [17/25] Loss: 0.0034296814895545444, RECONS: 0.003106789158967634, DISTANCE: 0.32289230823516846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3487, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [18/25] Loss: 0.0034034670649194403, RECONS: 0.0030814835826229107, DISTANCE: 0.3219834566116333
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8423, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [19/25] Loss: 0.003393736947327852, RECONS: 0.0030717572662979364, DISTANCE: 0.32197965383529664
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3812, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [20/25] Loss: 0.003408030340714114, RECONS: 0.003084501362450066, DISTANCE: 0.32352895396096365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3812, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8369, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [21/25] Loss: 0.003448268673806028, RECONS: 0.0031239076898517933, DISTANCE: 0.3243609504266219
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4053, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [22/25] Loss: 0.003455331113756351, RECONS: 0.003130393143257369, DISTANCE: 0.3249379344608473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [23/25] Loss: 0.0034575873093369105, RECONS: 0.00313291244674474, DISTANCE: 0.3246748298406601
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8631, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[246/300] [24/25] Loss: 0.0035092851892113684, RECONS: 0.0031686648912727833, DISTANCE: 0.34062026023864744
Test[246/300] [0/2] Loss: 0.004473424516618252, RECONS: 0.003656578017398715, DISTANCE: 0.816846489906311
Test[246/300] [1/2] Loss: 0.004759398056194186, RECONS: 0.0035189244663342834, DISTANCE: 1.2404735684394836
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4023, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8636, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [0/25] Loss: 0.00350686302408576, RECONS: 0.0031598410569131374, DISTANCE: 0.34702205657958984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6158, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6178, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [1/25] Loss: 0.0035648526391014457, RECONS: 0.0032124563585966825, DISTANCE: 0.35239630937576294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [2/25] Loss: 0.0036535317388673625, RECONS: 0.003312329761683941, DISTANCE: 0.34120198090871173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5947, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [3/25] Loss: 0.0037853384856134653, RECONS: 0.003452797594945878, DISTANCE: 0.332540899515152
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [4/25] Loss: 0.0037807988934218883, RECONS: 0.003448754968121648, DISTANCE: 0.3320439338684082
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6227, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4287, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8296, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5919, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [5/25] Loss: 0.00391503656283021, RECONS: 0.003585857222788036, DISTANCE: 0.3291793465614319
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4021, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8391, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [6/25] Loss: 0.003964275720396212, RECONS: 0.0036323764694056342, DISTANCE: 0.3318992853164673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3734, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8358, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [7/25] Loss: 0.003900946903740987, RECONS: 0.003565257153240964, DISTANCE: 0.3356897830963135
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3271, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [8/25] Loss: 0.0038209677311695283, RECONS: 0.0034885426414095694, DISTANCE: 0.3324251307381524
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3513, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [9/25] Loss: 0.0037720054388046265, RECONS: 0.0034388142405077813, DISTANCE: 0.33319122791290284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5888, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3522, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8701, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6251, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [10/25] Loss: 0.0038875101811506533, RECONS: 0.0035559871784326706, DISTANCE: 0.3315230499614369
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3393, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8641, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [11/25] Loss: 0.0038251166697591543, RECONS: 0.0034919140161946416, DISTANCE: 0.3332026998202006
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3725, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [12/25] Loss: 0.0037914079685623828, RECONS: 0.0034588566049933434, DISTANCE: 0.3325514059800368
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [13/25] Loss: 0.003764048817434481, RECONS: 0.0034330081793346573, DISTANCE: 0.3310406804084778
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8277, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [14/25] Loss: 0.0037335170277704795, RECONS: 0.0034024244795242947, DISTANCE: 0.33109258810679115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [15/25] Loss: 0.0037448208749992773, RECONS: 0.0034125479869544506, DISTANCE: 0.3322729393839836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4180, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [16/25] Loss: 0.003759550245697884, RECONS: 0.003426126204431057, DISTANCE: 0.33342408432680015
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4113, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8655, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [17/25] Loss: 0.003744711620836622, RECONS: 0.0034100493519670433, DISTANCE: 0.3346623049841987
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3688, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8881, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6241, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [18/25] Loss: 0.003716076344349667, RECONS: 0.003382556557067131, DISTANCE: 0.33351982267279373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8788, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [19/25] Loss: 0.003724754659924656, RECONS: 0.0033925744937732816, DISTANCE: 0.3321802020072937
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3710, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8606, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [20/25] Loss: 0.003725957092163818, RECONS: 0.0033953284866930474, DISTANCE: 0.3306286334991455
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [21/25] Loss: 0.0037037957332689653, RECONS: 0.0033745897870341487, DISTANCE: 0.3292059735818343
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3830, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [22/25] Loss: 0.003726965788265933, RECONS: 0.003395320695784429, DISTANCE: 0.3316451207451198
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3894, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8166, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5888, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [23/25] Loss: 0.003719872736837715, RECONS: 0.003390495985513553, DISTANCE: 0.32937678198019665
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2712, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8062, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[247/300] [24/25] Loss: 0.0037148964777588846, RECONS: 0.0033682329766452314, DISTANCE: 0.3466635322570801
Test[247/300] [0/2] Loss: 0.004389433655887842, RECONS: 0.003495733020827174, DISTANCE: 0.8937005996704102
Test[247/300] [1/2] Loss: 0.004392900737002492, RECONS: 0.0031590493163093925, DISTANCE: 1.233851432800293
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8190, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [0/25] Loss: 0.0034169056452810764, RECONS: 0.0030727554112672806, DISTANCE: 0.344150185585022
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3788, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8305, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [1/25] Loss: 0.0034792341757565737, RECONS: 0.0031347728800028563, DISTANCE: 0.34446126222610474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3634, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6266, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [2/25] Loss: 0.003758321205774943, RECONS: 0.0034230691380798817, DISTANCE: 0.3352520863215129
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3692, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6262, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [3/25] Loss: 0.0037053656415082514, RECONS: 0.0033738373895175755, DISTANCE: 0.33152827620506287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3725, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [4/25] Loss: 0.0036640698090195656, RECONS: 0.0033360742498189213, DISTANCE: 0.3279955625534058
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4105, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8700, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [5/25] Loss: 0.0036704091277594366, RECONS: 0.0033444427341843643, DISTANCE: 0.3259663979212443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4202, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8605, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [6/25] Loss: 0.0036744498647749424, RECONS: 0.003351029507549746, DISTANCE: 0.3234203542981829
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4477, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5931, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [7/25] Loss: 0.003743678389582783, RECONS: 0.0034139409835916013, DISTANCE: 0.3297373950481415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4471, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [8/25] Loss: 0.0038050970890455777, RECONS: 0.0034787070471793413, DISTANCE: 0.32639002799987793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [9/25] Loss: 0.003841818356886506, RECONS: 0.00351369995623827, DISTANCE: 0.32811838388442993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4507, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8279, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [10/25] Loss: 0.0038268219213932753, RECONS: 0.0034957013981924815, DISTANCE: 0.33112050186504016
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4171, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [11/25] Loss: 0.0037989622020783522, RECONS: 0.003468346102939298, DISTANCE: 0.3306160867214203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3811, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8561, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [12/25] Loss: 0.0038204613105895426, RECONS: 0.0034915850712702824, DISTANCE: 0.3288762386028583
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [13/25] Loss: 0.0038053575969700304, RECONS: 0.003474668100742357, DISTANCE: 0.3306894983564104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3235, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [14/25] Loss: 0.00378596605733037, RECONS: 0.003454218711704016, DISTANCE: 0.33174734115600585
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3016, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8801, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [15/25] Loss: 0.0037943489442113787, RECONS: 0.003462443797616288, DISTANCE: 0.33190513402223587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3301, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [16/25] Loss: 0.0037616685388938468, RECONS: 0.003430184647988747, DISTANCE: 0.3314838760039386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3576, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8252, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [17/25] Loss: 0.0037421619959382545, RECONS: 0.003410383554485937, DISTANCE: 0.3317784203423394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3520, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [18/25] Loss: 0.003713421658367703, RECONS: 0.0033834233365364766, DISTANCE: 0.32999830496938604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [19/25] Loss: 0.003726670437026769, RECONS: 0.003396766458172351, DISTANCE: 0.3299039721488953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3921, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [20/25] Loss: 0.003732334390016539, RECONS: 0.0034041728358715773, DISTANCE: 0.3281615518388294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [21/25] Loss: 0.0037118816981092095, RECONS: 0.0033830987416546454, DISTANCE: 0.3287829485806552
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3995, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [22/25] Loss: 0.003741454586143727, RECONS: 0.003413954365026692, DISTANCE: 0.3275002189304518
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4090, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5922, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [23/25] Loss: 0.0037622946256306022, RECONS: 0.0034360076339604952, DISTANCE: 0.3262869914372762
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6255, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4148, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[248/300] [24/25] Loss: 0.003923695543780923, RECONS: 0.003577780406922102, DISTANCE: 0.34591513633728027
Test[248/300] [0/2] Loss: 0.004345005378127098, RECONS: 0.0035470412112772465, DISTANCE: 0.7979639768600464
Test[248/300] [1/2] Loss: 0.004392187809571624, RECONS: 0.0032821933273226023, DISTANCE: 1.109994351863861
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8762, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [0/25] Loss: 0.0034159475471824408, RECONS: 0.003094163490459323, DISTANCE: 0.32178401947021484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8707, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6271, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [1/25] Loss: 0.00328266981523484, RECONS: 0.0029718566220253706, DISTANCE: 0.31081318855285645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8679, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6388, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [2/25] Loss: 0.00350486448345085, RECONS: 0.003183037353058656, DISTANCE: 0.32182713349660236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3358, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6338, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [3/25] Loss: 0.003768297203350812, RECONS: 0.003449331736192107, DISTANCE: 0.31896543502807617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8368, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [4/25] Loss: 0.0036695905495435, RECONS: 0.003352884529158473, DISTANCE: 0.3167059898376465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3519, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8336, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [5/25] Loss: 0.0038359703418488302, RECONS: 0.0035148876486346126, DISTANCE: 0.3210826516151428
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3601, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8066, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5927, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [6/25] Loss: 0.0038721889723092318, RECONS: 0.0035399306299430983, DISTANCE: 0.3322582755770002
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [7/25] Loss: 0.0038502641255035996, RECONS: 0.0035185611923225224, DISTANCE: 0.3317028731107712
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3768, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8240, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [8/25] Loss: 0.0038101068283948633, RECONS: 0.0034819625111089814, DISTANCE: 0.32814427216847736
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4033, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8369, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [9/25] Loss: 0.0037634322419762612, RECONS: 0.003436477156355977, DISTANCE: 0.3269550323486328
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4066, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8576, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [10/25] Loss: 0.003715786109255119, RECONS: 0.0033913180655376477, DISTANCE: 0.32446800578724255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3536, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8809, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [11/25] Loss: 0.003696013280811409, RECONS: 0.003369635068035374, DISTANCE: 0.3263781666755676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3891, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8641, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [12/25] Loss: 0.0036630492048481335, RECONS: 0.0033383331297395322, DISTANCE: 0.32471603613633376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3435, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8752, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6251, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [13/25] Loss: 0.0037582733701648457, RECONS: 0.0034344602609053254, DISTANCE: 0.3238130807876587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3548, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [14/25] Loss: 0.0037069464723269146, RECONS: 0.003384581534191966, DISTANCE: 0.32236491044362386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [15/25] Loss: 0.0037477668083738536, RECONS: 0.003425652757869102, DISTANCE: 0.3221140131354332
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3461, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [16/25] Loss: 0.003720077151870903, RECONS: 0.0033974289373659037, DISTANCE: 0.32264818163479075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3654, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8216, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [17/25] Loss: 0.0037415274030839405, RECONS: 0.0034206235367390844, DISTANCE: 0.32090383105807835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5900, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [18/25] Loss: 0.0037402300360171417, RECONS: 0.0034196827511646247, DISTANCE: 0.32054725446199117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4123, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8223, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5891, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [19/25] Loss: 0.0037446388858370485, RECONS: 0.0034259403706528246, DISTANCE: 0.31869848966598513
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4279, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8276, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5843, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [20/25] Loss: 0.003766135922411368, RECONS: 0.003447288680555565, DISTANCE: 0.3188472248259045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4285, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5898, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [21/25] Loss: 0.003800917533226311, RECONS: 0.003481183698485521, DISTANCE: 0.31973382559689606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4280, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [22/25] Loss: 0.003790942982406072, RECONS: 0.0034693901670043883, DISTANCE: 0.32155280527861224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8795, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [23/25] Loss: 0.003778577782213688, RECONS: 0.0034578786871861666, DISTANCE: 0.3206990857919057
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5932, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3646, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8694, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6281, device='cuda:0', grad_fn=<MeanBackward0>)
Train[249/300] [24/25] Loss: 0.0039011994190514088, RECONS: 0.003561278684064746, DISTANCE: 0.33992072582244875
Test[249/300] [0/2] Loss: 0.004774922970682383, RECONS: 0.004014988895505667, DISTANCE: 0.7599339485168457
Test[249/300] [1/2] Loss: 0.004715036367997527, RECONS: 0.003759871469810605, DISTANCE: 0.9551646709442139
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3600, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8666, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [0/25] Loss: 0.00392540916800499, RECONS: 0.0035991992335766554, DISTANCE: 0.32621002197265625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6164, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3822, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [1/25] Loss: 0.0035485884873196483, RECONS: 0.003220758750103414, DISTANCE: 0.3278297781944275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8349, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [2/25] Loss: 0.0036310669189939895, RECONS: 0.0033028742764145136, DISTANCE: 0.328192671140035
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8250, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [3/25] Loss: 0.0035965796560049057, RECONS: 0.0032566768932156265, DISTANCE: 0.33990275859832764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8241, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [4/25] Loss: 0.0035888491664081814, RECONS: 0.0032538565807044505, DISTANCE: 0.3349925994873047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3911, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8277, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [5/25] Loss: 0.003642484894953668, RECONS: 0.003311262388403217, DISTANCE: 0.33122249444325763
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3637, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8313, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6077, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [6/25] Loss: 0.003612271510064602, RECONS: 0.0032794116996228695, DISTANCE: 0.33285978862217497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4074, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [7/25] Loss: 0.0036046822497155517, RECONS: 0.0032731459941715, DISTANCE: 0.3315362334251404
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3858, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [8/25] Loss: 0.003653366765421298, RECONS: 0.0033239836080206763, DISTANCE: 0.32938312159644234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3565, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [9/25] Loss: 0.003630492277443409, RECONS: 0.003303923411294818, DISTANCE: 0.3265688419342041
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3428, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8778, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [10/25] Loss: 0.0036051370711489158, RECONS: 0.003277184526351365, DISTANCE: 0.32795251499522815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3197, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [11/25] Loss: 0.003671303818312784, RECONS: 0.003344941030566891, DISTANCE: 0.3263627588748932
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3145, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8349, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [12/25] Loss: 0.0036176407458977057, RECONS: 0.0032904790356182135, DISTANCE: 0.3271616789010855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3228, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8216, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [13/25] Loss: 0.0035955639988450067, RECONS: 0.0032693963897015366, DISTANCE: 0.32616758346557617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8314, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [14/25] Loss: 0.0036197034486879906, RECONS: 0.003291449307774504, DISTANCE: 0.32825411955515543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3631, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8246, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [15/25] Loss: 0.0036174246051814407, RECONS: 0.003287887913757004, DISTANCE: 0.32953666895627975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3714, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8316, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [16/25] Loss: 0.003625638344708611, RECONS: 0.0032972818897927508, DISTANCE: 0.32835643431719613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3594, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [17/25] Loss: 0.0036214441319720615, RECONS: 0.003293910012063053, DISTANCE: 0.32753410604265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3651, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [18/25] Loss: 0.003603931234561299, RECONS: 0.003275648372149781, DISTANCE: 0.3282828456477115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [19/25] Loss: 0.003589446342084557, RECONS: 0.003261633508373052, DISTANCE: 0.32781281471252444
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [20/25] Loss: 0.0035813901617768266, RECONS: 0.0032545439455480803, DISTANCE: 0.32684619653792607
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [21/25] Loss: 0.0036152440165592866, RECONS: 0.0032882241701537914, DISTANCE: 0.32701982151378284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [22/25] Loss: 0.0036030831928972316, RECONS: 0.0032763755171681228, DISTANCE: 0.3267076533773671
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4123, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [23/25] Loss: 0.003608532017096877, RECONS: 0.0032820125246265284, DISTANCE: 0.32651946942011517
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3617, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[250/300] [24/25] Loss: 0.0036342606134712697, RECONS: 0.0032873634714633226, DISTANCE: 0.34689711093902587
Test[250/300] [0/2] Loss: 0.004354371689260006, RECONS: 0.0035695366095751524, DISTANCE: 0.7848348617553711
Test[250/300] [1/2] Loss: 0.004440727643668652, RECONS: 0.003315383684821427, DISTANCE: 1.1253438591957092
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6211, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4044, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8473, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [0/25] Loss: 0.0037846469786018133, RECONS: 0.003438357962295413, DISTANCE: 0.34628891944885254
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [1/25] Loss: 0.0035627782344818115, RECONS: 0.003236614284105599, DISTANCE: 0.3261638879776001
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8514, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6245, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [2/25] Loss: 0.0034334907153000436, RECONS: 0.003113049470509092, DISTANCE: 0.32044116655985516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3406, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8658, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [3/25] Loss: 0.0034998072660528123, RECONS: 0.0031801500008441508, DISTANCE: 0.31965717673301697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3391, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [4/25] Loss: 0.003578442381694913, RECONS: 0.0032543720677495, DISTANCE: 0.32407023906707766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3337, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [5/25] Loss: 0.0034738266452526054, RECONS: 0.0031430549764384827, DISTANCE: 0.3307715853055318
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3438, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8662, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [6/25] Loss: 0.0034579107138727394, RECONS: 0.003132085848067488, DISTANCE: 0.32582478863852365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3388, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [7/25] Loss: 0.0034205509582534432, RECONS: 0.0030936825496610254, DISTANCE: 0.32686832547187805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3514, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8246, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [8/25] Loss: 0.0034747832040819856, RECONS: 0.0031517900060862303, DISTANCE: 0.32299310631222194
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8292, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [9/25] Loss: 0.0034926926251500844, RECONS: 0.0031673610676079987, DISTANCE: 0.3253314733505249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3883, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [10/25] Loss: 0.0035134387964552097, RECONS: 0.0031891856765882535, DISTANCE: 0.32425303892655805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4014, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6076, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [11/25] Loss: 0.0035026861587539315, RECONS: 0.003179102437570691, DISTANCE: 0.3235836426417033
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6211, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4045, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [12/25] Loss: 0.0034979108828478134, RECONS: 0.0031732267771775904, DISTANCE: 0.32468403302706206
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [13/25] Loss: 0.0035560260959235685, RECONS: 0.003232552603419338, DISTANCE: 0.3234734194619315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8672, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6274, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [14/25] Loss: 0.003566111127535502, RECONS: 0.003243546901891629, DISTANCE: 0.32256415685017903
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8725, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [15/25] Loss: 0.003568906045984477, RECONS: 0.0032444374228361994, DISTANCE: 0.32446855306625366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8738, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [16/25] Loss: 0.0035604376154129997, RECONS: 0.0032355496659874916, DISTANCE: 0.32488788576687083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [17/25] Loss: 0.0035344468196853995, RECONS: 0.0032107701214651265, DISTANCE: 0.3236766325102912
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4160, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8402, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5906, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [18/25] Loss: 0.003516380454560644, RECONS: 0.003193642282368321, DISTANCE: 0.32273810788204793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4243, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8233, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5861, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [19/25] Loss: 0.0035385795636102557, RECONS: 0.0032170820282772183, DISTANCE: 0.32149747014045715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4199, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8138, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5942, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [20/25] Loss: 0.003542070010943072, RECONS: 0.0032195690354066236, DISTANCE: 0.3225009157544091
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4090, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8420, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [21/25] Loss: 0.003536160082810304, RECONS: 0.003212970956652002, DISTANCE: 0.323189068924297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3823, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [22/25] Loss: 0.0035533564084249993, RECONS: 0.003231392980998625, DISTANCE: 0.3219633672548377
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3649, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8557, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [23/25] Loss: 0.0035501291567925364, RECONS: 0.0032271573630472026, DISTANCE: 0.3229717363913854
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5922, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3040, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[251/300] [24/25] Loss: 0.0036070779990404842, RECONS: 0.003266974650323391, DISTANCE: 0.3401033020019531
Test[251/300] [0/2] Loss: 0.004144228994846344, RECONS: 0.0034918012097477913, DISTANCE: 0.6524275541305542
Test[251/300] [1/2] Loss: 0.004203796619549394, RECONS: 0.003298189491033554, DISTANCE: 0.9056069850921631
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3905, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [0/25] Loss: 0.0038721587043255568, RECONS: 0.0035315491259098053, DISTANCE: 0.3406095504760742
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5848, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [1/25] Loss: 0.0039048505714163184, RECONS: 0.003572060028091073, DISTANCE: 0.3327906131744385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4099, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5873, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [2/25] Loss: 0.0039686153177171946, RECONS: 0.0036411906282107034, DISTANCE: 0.3274247646331787
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6248, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4099, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8268, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [3/25] Loss: 0.00424302282044664, RECONS: 0.003929101629182696, DISTANCE: 0.3139212727546692
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [4/25] Loss: 0.00412534992210567, RECONS: 0.0038075327407568692, DISTANCE: 0.31781725883483886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6201, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3493, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6352, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [5/25] Loss: 0.003996672458015382, RECONS: 0.003679450019262731, DISTANCE: 0.31722251574198407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6393, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [6/25] Loss: 0.004030064047713365, RECONS: 0.003710525343194604, DISTANCE: 0.3195387976510184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6313, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [7/25] Loss: 0.004015614249510691, RECONS: 0.0036934017261955887, DISTANCE: 0.3222125768661499
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3114, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [8/25] Loss: 0.004104226077389386, RECONS: 0.0037821283201790517, DISTANCE: 0.3220977783203125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3610, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [9/25] Loss: 0.004067276534624398, RECONS: 0.003746671974658966, DISTANCE: 0.3206045746803284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3456, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8210, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5813, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [10/25] Loss: 0.004031588450412859, RECONS: 0.003713734701953151, DISTANCE: 0.31785376505418256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8118, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5807, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [11/25] Loss: 0.0040504404266054434, RECONS: 0.003729975394283732, DISTANCE: 0.3204650580883026
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8197, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [12/25] Loss: 0.004068790755879421, RECONS: 0.003743826089283595, DISTANCE: 0.3249646700345553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8354, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [13/25] Loss: 0.003990686232490199, RECONS: 0.003667914923945708, DISTANCE: 0.3227713108062744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6314, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [14/25] Loss: 0.003969434291745225, RECONS: 0.0036468900740146636, DISTANCE: 0.32254422505696617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5927, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3732, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8928, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6394, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [15/25] Loss: 0.004090164453373291, RECONS: 0.00376594765111804, DISTANCE: 0.3242168053984642
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6257, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [16/25] Loss: 0.0040491744738948695, RECONS: 0.0037262918400194716, DISTANCE: 0.32288263124578137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3680, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8721, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [17/25] Loss: 0.004028002770307164, RECONS: 0.003703297452173299, DISTANCE: 0.3247053159607781
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5873, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [18/25] Loss: 0.00402121645349421, RECONS: 0.0036977046218357587, DISTANCE: 0.3235118263646176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4289, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5833, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [19/25] Loss: 0.0040450079133734105, RECONS: 0.003720841370522976, DISTANCE: 0.32416653633117676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4349, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8440, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5910, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [20/25] Loss: 0.004040640778839588, RECONS: 0.0037159691232123543, DISTANCE: 0.32467164879753474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4279, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8367, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [21/25] Loss: 0.004023069558157163, RECONS: 0.003698519420471381, DISTANCE: 0.324550135569139
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4070, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [22/25] Loss: 0.004029158300355724, RECONS: 0.003704373613404839, DISTANCE: 0.32478467796159827
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4066, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6264, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [23/25] Loss: 0.004092030770455797, RECONS: 0.003766552710051959, DISTANCE: 0.32547804713249207
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4095, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[252/300] [24/25] Loss: 0.004077848335728049, RECONS: 0.0037384363356977703, DISTANCE: 0.33941198825836183
Test[252/300] [0/2] Loss: 0.004406632389873266, RECONS: 0.0036737006157636642, DISTANCE: 0.7329317331314087
Test[252/300] [1/2] Loss: 0.004732212284579873, RECONS: 0.0035987375304102898, DISTANCE: 1.1334746479988098
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4165, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [0/25] Loss: 0.004454105626791716, RECONS: 0.004087198060005903, DISTANCE: 0.36690759658813477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4151, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [1/25] Loss: 0.0038350719260051847, RECONS: 0.003484545391984284, DISTANCE: 0.3505265712738037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8569, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5897, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [2/25] Loss: 0.003915354531879227, RECONS: 0.0035563782633592687, DISTANCE: 0.3589763243993123
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4441, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8510, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5881, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [3/25] Loss: 0.0039637256995774806, RECONS: 0.003605795034673065, DISTANCE: 0.3579307496547699
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4282, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8427, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5917, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [4/25] Loss: 0.003901435062289238, RECONS: 0.003550931392237544, DISTANCE: 0.35050373077392577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [5/25] Loss: 0.003834354691207409, RECONS: 0.00348692301971217, DISTANCE: 0.3474317193031311
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [6/25] Loss: 0.0037116299915526596, RECONS: 0.0033675643748470713, DISTANCE: 0.344065649168832
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3883, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [7/25] Loss: 0.00368255129433237, RECONS: 0.003340758237754926, DISTANCE: 0.34179307520389557
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3179, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6293, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [8/25] Loss: 0.0036713588827600083, RECONS: 0.003332727614583241, DISTANCE: 0.338631272315979
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3553, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [9/25] Loss: 0.003634309000335634, RECONS: 0.003300580498762429, DISTANCE: 0.33372849225997925
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [10/25] Loss: 0.003675676268440756, RECONS: 0.0033428471493111415, DISTANCE: 0.3328291177749634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3257, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [11/25] Loss: 0.003654689819086343, RECONS: 0.0033237692162704966, DISTANCE: 0.33092060685157776
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [12/25] Loss: 0.0036019851417782214, RECONS: 0.003272234981593031, DISTANCE: 0.3297501619045551
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3696, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [13/25] Loss: 0.003577095639359738, RECONS: 0.003250256463486169, DISTANCE: 0.32683918305805754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8266, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [14/25] Loss: 0.003581074345856905, RECONS: 0.003252755741899212, DISTANCE: 0.3283186117808024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [15/25] Loss: 0.0036093343514949083, RECONS: 0.003280258839367889, DISTANCE: 0.32907550781965256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [16/25] Loss: 0.0036033754894400343, RECONS: 0.003273935755714774, DISTANCE: 0.3294397241928998
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3852, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [17/25] Loss: 0.003623550706025627, RECONS: 0.0032952424371615052, DISTANCE: 0.3283082710372077
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3483, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8741, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [18/25] Loss: 0.0036221429656602836, RECONS: 0.0032942673975699826, DISTANCE: 0.32787557024704783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [19/25] Loss: 0.003603957302402705, RECONS: 0.0032769166864454746, DISTANCE: 0.3270406126976013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8426, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [20/25] Loss: 0.003625500182222043, RECONS: 0.0033004714974335264, DISTANCE: 0.32502868061973933
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6236, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4099, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [21/25] Loss: 0.0036871898601847615, RECONS: 0.0033611324827440762, DISTANCE: 0.3260573744773865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [22/25] Loss: 0.003675781139779998, RECONS: 0.0033489475532880297, DISTANCE: 0.32683358503424603
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3720, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6261, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [23/25] Loss: 0.0036820953052180507, RECONS: 0.0033539208428313336, DISTANCE: 0.3281744569540024
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3285, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6294, device='cuda:0', grad_fn=<MeanBackward0>)
Train[253/300] [24/25] Loss: 0.0037337208352983, RECONS: 0.0033908109180629253, DISTANCE: 0.3429099130630493
Test[253/300] [0/2] Loss: 0.005202231928706169, RECONS: 0.0043992698192596436, DISTANCE: 0.8029623031616211
Test[253/300] [1/2] Loss: 0.004871476907283068, RECONS: 0.003926461096853018, DISTANCE: 0.9450157880783081
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3592, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6278, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [0/25] Loss: 0.0032884888350963593, RECONS: 0.00297449785284698, DISTANCE: 0.31399106979370117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3748, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [1/25] Loss: 0.0037646230775862932, RECONS: 0.0034475316060706973, DISTANCE: 0.3170914649963379
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8491, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [2/25] Loss: 0.00364845828153193, RECONS: 0.003336084928984443, DISTANCE: 0.3123733202616374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [3/25] Loss: 0.003493219264782965, RECONS: 0.003175801772158593, DISTANCE: 0.3174174427986145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3993, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8280, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [4/25] Loss: 0.0035190616734325888, RECONS: 0.0031997441314160825, DISTANCE: 0.31931748390197756
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [5/25] Loss: 0.0035487525553132095, RECONS: 0.003233320933456222, DISTANCE: 0.31543155511220294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8326, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [6/25] Loss: 0.0035357823528881583, RECONS: 0.0032195820739226682, DISTANCE: 0.3162002222878592
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4310, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8311, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [7/25] Loss: 0.0035401256754994392, RECONS: 0.003226284316042438, DISTANCE: 0.313841313123703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4182, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [8/25] Loss: 0.003553833346813917, RECONS: 0.003239285381924775, DISTANCE: 0.31454793612162274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4206, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [9/25] Loss: 0.003576054470613599, RECONS: 0.003257338120602071, DISTANCE: 0.3187163233757019
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4078, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [10/25] Loss: 0.0035877557344396005, RECONS: 0.003266370558941906, DISTANCE: 0.32138515602458606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [11/25] Loss: 0.0035470161431779466, RECONS: 0.003224742249585688, DISTANCE: 0.3222738802433014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4026, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [12/25] Loss: 0.0035682640647372375, RECONS: 0.0032451663058824264, DISTANCE: 0.32309774252084583
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3997, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [13/25] Loss: 0.0035303313384896944, RECONS: 0.0032093916753573076, DISTANCE: 0.32093964304242817
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3614, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8440, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [14/25] Loss: 0.0035078772498915592, RECONS: 0.003186473964403073, DISTANCE: 0.32140327294667564
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8425, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [15/25] Loss: 0.003509139525704086, RECONS: 0.003188418471836485, DISTANCE: 0.3207210451364517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6325, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3636, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8285, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [16/25] Loss: 0.0035720917889300514, RECONS: 0.0032511265427969836, DISTANCE: 0.3209652339710909
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8437, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [17/25] Loss: 0.0035842031033502687, RECONS: 0.0032634748947910136, DISTANCE: 0.3207282026608785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8301, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [18/25] Loss: 0.003585182632760782, RECONS: 0.003261805009587031, DISTANCE: 0.32337762180127594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6240, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [19/25] Loss: 0.0036052488372661172, RECONS: 0.003279703378211707, DISTANCE: 0.3255454659461975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3711, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [20/25] Loss: 0.0035894421993621756, RECONS: 0.0032645127669508967, DISTANCE: 0.3249294417245047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3892, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [21/25] Loss: 0.003563835730098865, RECONS: 0.003240849727510729, DISTANCE: 0.32298601215535944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [22/25] Loss: 0.003559755829527326, RECONS: 0.003235956269275883, DISTANCE: 0.32379956867383874
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5991, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [23/25] Loss: 0.0035747532189513245, RECONS: 0.0032503969850949943, DISTANCE: 0.3243562380472819
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3668, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8318, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[254/300] [24/25] Loss: 0.003574336590245366, RECONS: 0.0032346464786678552, DISTANCE: 0.339690113067627
Test[254/300] [0/2] Loss: 0.004260936751961708, RECONS: 0.0034695263020694256, DISTANCE: 0.7914105653762817
Test[254/300] [1/2] Loss: 0.004448588937520981, RECONS: 0.003229521680623293, DISTANCE: 1.219067394733429
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4112, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [0/25] Loss: 0.003790202783420682, RECONS: 0.0034423242323100567, DISTANCE: 0.34787845611572266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3982, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [1/25] Loss: 0.0037690685130655766, RECONS: 0.0034479640889912844, DISTANCE: 0.32110434770584106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3987, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [2/25] Loss: 0.0036689461364100375, RECONS: 0.0033438572815308967, DISTANCE: 0.3250888188680013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4081, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [3/25] Loss: 0.0036047265748493373, RECONS: 0.0032751127728261054, DISTANCE: 0.32961374521255493
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5986, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3982, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8767, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6227, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [4/25] Loss: 0.003685089899227023, RECONS: 0.003355536097660661, DISTANCE: 0.32955379486083985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4151, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [5/25] Loss: 0.003642378685375055, RECONS: 0.0033120528096333146, DISTANCE: 0.3303258816401164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8596, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [6/25] Loss: 0.003603024408221245, RECONS: 0.003274285700172186, DISTANCE: 0.32873872348240446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3781, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [7/25] Loss: 0.0035574398934841156, RECONS: 0.0032288546208292246, DISTANCE: 0.32858529686927795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3975, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [8/25] Loss: 0.003597660662813319, RECONS: 0.003266020677983761, DISTANCE: 0.33163999186621773
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3788, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [9/25] Loss: 0.0036121200304478408, RECONS: 0.003280603000894189, DISTANCE: 0.3315170407295227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3560, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8358, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [10/25] Loss: 0.0036254003008996897, RECONS: 0.00329209038649093, DISTANCE: 0.33330992135134613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4079, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8345, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [11/25] Loss: 0.0035936240844118097, RECONS: 0.0032597781779865422, DISTANCE: 0.3338459034760793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [12/25] Loss: 0.0035776630975306034, RECONS: 0.0032464788080408024, DISTANCE: 0.3311842863376324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4135, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8506, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [13/25] Loss: 0.003575497223729534, RECONS: 0.003239495130921049, DISTANCE: 0.3360020858900888
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3765, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [14/25] Loss: 0.003576189186424017, RECONS: 0.0032396699767559766, DISTANCE: 0.33651920159657794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [15/25] Loss: 0.003602273907745257, RECONS: 0.0032646640174789354, DISTANCE: 0.3376098945736885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8423, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [16/25] Loss: 0.003596968894057414, RECONS: 0.0032577850061523564, DISTANCE: 0.33918389152078066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [17/25] Loss: 0.003587588008182744, RECONS: 0.0032487926720124152, DISTANCE: 0.33879534403483075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4144, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [18/25] Loss: 0.0035647139271819278, RECONS: 0.003227019572238389, DISTANCE: 0.33769435631601435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4205, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [19/25] Loss: 0.003550527151674032, RECONS: 0.003212654800154269, DISTANCE: 0.3378723502159119
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8281, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [20/25] Loss: 0.003533690990436645, RECONS: 0.003196121437386388, DISTANCE: 0.3375695546468099
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [21/25] Loss: 0.0035546989899806, RECONS: 0.0032177857461978088, DISTANCE: 0.3369132388721813
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3554, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8252, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [22/25] Loss: 0.0035346432933178935, RECONS: 0.00320011413777652, DISTANCE: 0.33452915108722187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8239, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [23/25] Loss: 0.003524860250763595, RECONS: 0.0031909015378914773, DISTANCE: 0.3339587102333705
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8322, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[255/300] [24/25] Loss: 0.0035190197825431826, RECONS: 0.0031718238070607184, DISTANCE: 0.34719597339630126
Test[255/300] [0/2] Loss: 0.004244891460984945, RECONS: 0.0034857611171901226, DISTANCE: 0.7591303586959839
Test[255/300] [1/2] Loss: 0.0042090092319995165, RECONS: 0.003067646292038262, DISTANCE: 1.1413629055023193
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3610, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [0/25] Loss: 0.0038552440237253904, RECONS: 0.003533031325787306, DISTANCE: 0.32221269607543945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [1/25] Loss: 0.0033984268084168434, RECONS: 0.0030759586952626705, DISTANCE: 0.322468101978302
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [2/25] Loss: 0.003347609347353379, RECONS: 0.0030277385376393795, DISTANCE: 0.31987082958221436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [3/25] Loss: 0.0033719991333782673, RECONS: 0.0030490749632008374, DISTANCE: 0.3229241669178009
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4106, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [4/25] Loss: 0.0033867639489471913, RECONS: 0.0030646661296486856, DISTANCE: 0.32209780216217043
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4107, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8504, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6145, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [5/25] Loss: 0.0034151739285637936, RECONS: 0.00308817559077094, DISTANCE: 0.32699833313624066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [6/25] Loss: 0.0035085100680589676, RECONS: 0.003185891845662679, DISTANCE: 0.3226182290485927
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5899, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [7/25] Loss: 0.0036021656123921275, RECONS: 0.003284179692855105, DISTANCE: 0.3179859220981598
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5989, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4080, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8432, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [8/25] Loss: 0.003541310214334064, RECONS: 0.0032273076422926453, DISTANCE: 0.3140025668674045
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4273, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8202, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5879, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [9/25] Loss: 0.0035108439391478897, RECONS: 0.0031973355216905475, DISTANCE: 0.313508415222168
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8126, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5875, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [10/25] Loss: 0.0035412664398212323, RECONS: 0.0032298432409086013, DISTANCE: 0.31142320416190405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8228, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [11/25] Loss: 0.003513878386002034, RECONS: 0.0032011639365615943, DISTANCE: 0.31271445751190186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3718, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [12/25] Loss: 0.0034859398415742014, RECONS: 0.003173689268386135, DISTANCE: 0.3122505774864784
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3405, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8703, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [13/25] Loss: 0.003510549697758896, RECONS: 0.0031966675638354252, DISTANCE: 0.3138821380478995
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3495, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8661, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6250, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [14/25] Loss: 0.0034875822253525256, RECONS: 0.0031750991474837065, DISTANCE: 0.3124830802281698
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3368, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6262, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [15/25] Loss: 0.003583590703783557, RECONS: 0.003268641317845322, DISTANCE: 0.3149493783712387
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3191, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [16/25] Loss: 0.0035853384966578554, RECONS: 0.0032690244672053, DISTANCE: 0.3163140240837546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3423, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [17/25] Loss: 0.0035692060159312356, RECONS: 0.0032536478376843864, DISTANCE: 0.31555817524592084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8261, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [18/25] Loss: 0.0036037037345139603, RECONS: 0.003286538474065693, DISTANCE: 0.3171652680949161
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3876, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8322, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [19/25] Loss: 0.003612404328305274, RECONS: 0.0032947403378784657, DISTANCE: 0.3176639974117279
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4090, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8205, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [20/25] Loss: 0.0036150902021853696, RECONS: 0.0032974512515855686, DISTANCE: 0.3176389592034476
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4130, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8349, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [21/25] Loss: 0.0035975208844650874, RECONS: 0.003276702429337258, DISTANCE: 0.32081846215508203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4365, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [22/25] Loss: 0.003599640093338878, RECONS: 0.0032777071059883938, DISTANCE: 0.3219329948010652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4137, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8655, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [23/25] Loss: 0.0035889110586140305, RECONS: 0.003266855909411485, DISTANCE: 0.3220551560322444
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4023, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8691, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[256/300] [24/25] Loss: 0.003663163734599948, RECONS: 0.0033282483089715244, DISTANCE: 0.33491543292999265
Test[256/300] [0/2] Loss: 0.004619718529284, RECONS: 0.0038510344456881285, DISTANCE: 0.7686837911605835
Test[256/300] [1/2] Loss: 0.004464989062398672, RECONS: 0.0033314815955236554, DISTANCE: 1.1335071921348572
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8770, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [0/25] Loss: 0.0036593624390661716, RECONS: 0.0033917080145329237, DISTANCE: 0.2676544189453125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3996, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [1/25] Loss: 0.003638439695350826, RECONS: 0.0033463442232459784, DISTANCE: 0.292095422744751
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [2/25] Loss: 0.0035057447385042906, RECONS: 0.003193687725191315, DISTANCE: 0.3120570182800293
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4182, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8234, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [3/25] Loss: 0.003434700658544898, RECONS: 0.0031263892888091505, DISTANCE: 0.3083113729953766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4258, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8205, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [4/25] Loss: 0.0034716797526925802, RECONS: 0.003162518749013543, DISTANCE: 0.30916101932525636
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4105, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [5/25] Loss: 0.0034689525297532478, RECONS: 0.0031528696417808533, DISTANCE: 0.3160829146703084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4003, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [6/25] Loss: 0.003591710834630898, RECONS: 0.003279327215360744, DISTANCE: 0.3123836176736014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3960, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8239, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [7/25] Loss: 0.003549208806362003, RECONS: 0.003228481888072565, DISTANCE: 0.3207269012928009
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3757, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [8/25] Loss: 0.003484153783776694, RECONS: 0.003160232160654333, DISTANCE: 0.32392160097757977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [9/25] Loss: 0.003466269513592124, RECONS: 0.003144229110330343, DISTANCE: 0.32204039096832277
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3066, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [10/25] Loss: 0.003459435951134021, RECONS: 0.0031347861090167003, DISTANCE: 0.32464982162822376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3562, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [11/25] Loss: 0.0035006397132140896, RECONS: 0.0031768440773400166, DISTANCE: 0.323795626560847
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [12/25] Loss: 0.00353983508494611, RECONS: 0.0032143443106458737, DISTANCE: 0.3254907589692336
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8237, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [13/25] Loss: 0.0035446238138579895, RECONS: 0.0032171556127390693, DISTANCE: 0.32746818235942293
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4166, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8326, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [14/25] Loss: 0.00354183753952384, RECONS: 0.003210011636838317, DISTANCE: 0.3318258841832479
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6232, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8347, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [15/25] Loss: 0.003521366132190451, RECONS: 0.0031885955104371533, DISTANCE: 0.33277060836553574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4052, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8671, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [16/25] Loss: 0.0035359050859423246, RECONS: 0.0032046397134442538, DISTANCE: 0.3312653583638808
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [17/25] Loss: 0.0035201891377154323, RECONS: 0.0031883561104122135, DISTANCE: 0.33183301157421535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5948, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8709, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [18/25] Loss: 0.0036231290647073798, RECONS: 0.0032926039574177643, DISTANCE: 0.33052509081991094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [19/25] Loss: 0.003606544644571841, RECONS: 0.003275702602695674, DISTANCE: 0.3308420300483704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4129, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [20/25] Loss: 0.003596668131649494, RECONS: 0.0032660587624247584, DISTANCE: 0.33060936133066815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4357, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8350, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [21/25] Loss: 0.00358745038763366, RECONS: 0.0032589916372671723, DISTANCE: 0.3284587426619096
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4328, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8381, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [22/25] Loss: 0.0035805920969046974, RECONS: 0.0032533125182532745, DISTANCE: 0.32727956771850586
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4366, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8260, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [23/25] Loss: 0.00358430099246713, RECONS: 0.003256110125221312, DISTANCE: 0.3281908581654231
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6232, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[257/300] [24/25] Loss: 0.0036282562930136917, RECONS: 0.0032833190262317657, DISTANCE: 0.3449372577667236
Test[257/300] [0/2] Loss: 0.005079788621515036, RECONS: 0.004443617071956396, DISTANCE: 0.6361713409423828
Test[257/300] [1/2] Loss: 0.005050124367699027, RECONS: 0.003982402151450515, DISTANCE: 1.067722201347351
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8419, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6283, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [0/25] Loss: 0.003046710742637515, RECONS: 0.0027203275822103024, DISTANCE: 0.326383113861084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3515, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8514, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6297, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [1/25] Loss: 0.004505027900449932, RECONS: 0.004196320427581668, DISTANCE: 0.30870747566223145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6202, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3271, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [2/25] Loss: 0.004080406778181593, RECONS: 0.0037600640983631215, DISTANCE: 0.3203426996866862
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3315, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [3/25] Loss: 0.0038713692920282483, RECONS: 0.003549967601429671, DISTANCE: 0.3214017152786255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3539, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [4/25] Loss: 0.003987779375165701, RECONS: 0.0036621471401304005, DISTANCE: 0.32563228607177735
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8328, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [5/25] Loss: 0.0039047401708861194, RECONS: 0.0035740884486585855, DISTANCE: 0.33065176010131836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4057, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [6/25] Loss: 0.0038698606326111724, RECONS: 0.003541395899706653, DISTANCE: 0.3284647635051182
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8284, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [7/25] Loss: 0.0038238077249843627, RECONS: 0.0034894651907961816, DISTANCE: 0.3343425691127777
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [8/25] Loss: 0.003740859864693549, RECONS: 0.0034074252212627065, DISTANCE: 0.3334346612294515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [9/25] Loss: 0.003706116252578795, RECONS: 0.003375250124372542, DISTANCE: 0.3308661341667175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3838, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [10/25] Loss: 0.0037694643463262105, RECONS: 0.003442652714015408, DISTANCE: 0.32681162790818646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3483, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [11/25] Loss: 0.0037266418415432176, RECONS: 0.0033984085700164237, DISTANCE: 0.3282332718372345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3868, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8575, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [12/25] Loss: 0.003692465923869839, RECONS: 0.0033673438100287546, DISTANCE: 0.3251221179962158
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5923, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3386, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8732, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [13/25] Loss: 0.003731437143869698, RECONS: 0.0034032614369477543, DISTANCE: 0.32817572355270386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [14/25] Loss: 0.0036884892111023267, RECONS: 0.003364384841794769, DISTANCE: 0.324104380607605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4046, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [15/25] Loss: 0.003690681405714713, RECONS: 0.0033655629522399977, DISTANCE: 0.32511845976114273
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3987, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8369, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [16/25] Loss: 0.003651540205978295, RECONS: 0.003326686249826761, DISTANCE: 0.3248539602055269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3960, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [17/25] Loss: 0.0036132274609473017, RECONS: 0.003288892550497419, DISTANCE: 0.32433491945266724
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3829, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8351, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [18/25] Loss: 0.0035932623462653474, RECONS: 0.0032707259034443843, DISTANCE: 0.32253644968334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3689, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8273, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [19/25] Loss: 0.0035798819619230924, RECONS: 0.0032576830708421767, DISTANCE: 0.32219889760017395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [20/25] Loss: 0.00360947041328819, RECONS: 0.003288284420878405, DISTANCE: 0.32118600323086693
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [21/25] Loss: 0.003592187496410175, RECONS: 0.0032708556602962994, DISTANCE: 0.3213318477977406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [22/25] Loss: 0.00359374874919329, RECONS: 0.0032717268205369296, DISTANCE: 0.32202194048010785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3774, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8396, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [23/25] Loss: 0.0035970282915513963, RECONS: 0.0032727113381649056, DISTANCE: 0.32431696355342865
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5919, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3539, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[258/300] [24/25] Loss: 0.0035991968121379613, RECONS: 0.0032588632591068743, DISTANCE: 0.3403335618972778
Test[258/300] [0/2] Loss: 0.004446884151548147, RECONS: 0.003615013090893626, DISTANCE: 0.8318710327148438
Test[258/300] [1/2] Loss: 0.0047769695520401, RECONS: 0.00353605835698545, DISTANCE: 1.2409111857414246
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4009, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8257, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5918, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [0/25] Loss: 0.0033222222700715065, RECONS: 0.003032941371202469, DISTANCE: 0.28928089141845703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4128, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8239, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5901, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [1/25] Loss: 0.00385359488427639, RECONS: 0.00354510429315269, DISTANCE: 0.308490514755249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3958, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8357, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [2/25] Loss: 0.0036868398698667684, RECONS: 0.0033810495709379516, DISTANCE: 0.3057902654012044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [3/25] Loss: 0.0035892685991711915, RECONS: 0.003288514679297805, DISTANCE: 0.3007538914680481
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3761, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [4/25] Loss: 0.003480234881862998, RECONS: 0.0031833265908062457, DISTANCE: 0.29690825939178467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5929, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6192, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [5/25] Loss: 0.003680802920522789, RECONS: 0.003382399600620071, DISTANCE: 0.2984033226966858
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3647, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8454, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [6/25] Loss: 0.0036060026780303034, RECONS: 0.003291892087353127, DISTANCE: 0.31411060265132357
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5946, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [7/25] Loss: 0.003561852063285187, RECONS: 0.0032476279011461884, DISTANCE: 0.31422416865825653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8491, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5922, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [8/25] Loss: 0.0035091170316769015, RECONS: 0.0031914054157419335, DISTANCE: 0.31771161821153426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8250, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5884, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [9/25] Loss: 0.0035673005040735006, RECONS: 0.003252068324945867, DISTANCE: 0.31523215770721436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8201, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [10/25] Loss: 0.003576526481827552, RECONS: 0.0032581638925793495, DISTANCE: 0.3183625611391934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8339, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [11/25] Loss: 0.0035687334214647612, RECONS: 0.0032520408082442978, DISTANCE: 0.316692590713501
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3700, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [12/25] Loss: 0.0035335501082814657, RECONS: 0.003217493577931936, DISTANCE: 0.3160565082843487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3621, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [13/25] Loss: 0.0035693511765982422, RECONS: 0.0032480169486786637, DISTANCE: 0.3213342087609427
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [14/25] Loss: 0.003542378048102061, RECONS: 0.003218612881998221, DISTANCE: 0.32376514275868734
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [15/25] Loss: 0.003551244968548417, RECONS: 0.0032289218943333253, DISTANCE: 0.3223230466246605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8606, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [16/25] Loss: 0.0035609564716544222, RECONS: 0.0032395643099923342, DISTANCE: 0.32139213646159454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3694, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [17/25] Loss: 0.0035307545525332293, RECONS: 0.0032090260517886942, DISTANCE: 0.3217284745640225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3526, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [18/25] Loss: 0.0035171691132219215, RECONS: 0.003195263420868861, DISTANCE: 0.3219056694131148
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3726, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [19/25] Loss: 0.0035178214660845698, RECONS: 0.0031967378337867556, DISTANCE: 0.3210836112499237
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8280, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [20/25] Loss: 0.003495519881003669, RECONS: 0.0031746605388997566, DISTANCE: 0.32085931868780226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3965, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8296, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [21/25] Loss: 0.0034979072674600916, RECONS: 0.003178091656247323, DISTANCE: 0.31981559233231976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4071, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [22/25] Loss: 0.0034861669106327968, RECONS: 0.0031679714220049587, DISTANCE: 0.31819546740988025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4085, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8518, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [23/25] Loss: 0.0034873460923942425, RECONS: 0.0031694187879717597, DISTANCE: 0.3179272810618083
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3622, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[259/300] [24/25] Loss: 0.0035108567588031294, RECONS: 0.0031747313775122164, DISTANCE: 0.33612536430358886
Test[259/300] [0/2] Loss: 0.0044934446923434734, RECONS: 0.0036933503579348326, DISTANCE: 0.8000941276550293
Test[259/300] [1/2] Loss: 0.00452962308190763, RECONS: 0.0033687890972942114, DISTANCE: 1.1608338952064514
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6250, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3631, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8532, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [0/25] Loss: 0.003353350330144167, RECONS: 0.002989216474816203, DISTANCE: 0.36413371562957764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3764, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [1/25] Loss: 0.003301514661870897, RECONS: 0.0029566310113295913, DISTANCE: 0.34488362073898315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3612, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8711, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [2/25] Loss: 0.0032372286853690944, RECONS: 0.002904467439899842, DISTANCE: 0.3327612479527791
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3665, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [3/25] Loss: 0.0032741520553827286, RECONS: 0.0029493203619495034, DISTANCE: 0.3248317241668701
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3489, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [4/25] Loss: 0.0032224546186625956, RECONS: 0.002901894971728325, DISTANCE: 0.3205596685409546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8287, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [5/25] Loss: 0.0034328173690785966, RECONS: 0.003110567651068171, DISTANCE: 0.3222497304280599
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5889, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3609, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8298, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [6/25] Loss: 0.003601499367505312, RECONS: 0.0032814177019255503, DISTANCE: 0.32008164269583567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4147, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5925, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [7/25] Loss: 0.003587497863918543, RECONS: 0.0032651510555297136, DISTANCE: 0.3223467767238617
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4236, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8136, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5857, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [8/25] Loss: 0.00362446221212546, RECONS: 0.0033005595517655215, DISTANCE: 0.32390262020958793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4383, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8231, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [9/25] Loss: 0.0036217063665390016, RECONS: 0.003294481057673693, DISTANCE: 0.3272252678871155
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4222, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8374, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [10/25] Loss: 0.003636010689660907, RECONS: 0.003306453349068761, DISTANCE: 0.32955729961395264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8685, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [11/25] Loss: 0.003659889781071494, RECONS: 0.003331793452768276, DISTANCE: 0.32809628049532574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3954, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8663, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [12/25] Loss: 0.00365935187213696, RECONS: 0.0033334932612398495, DISTANCE: 0.32585856547722447
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4170, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8760, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [13/25] Loss: 0.003666655210378979, RECONS: 0.0033428981800430586, DISTANCE: 0.32375699281692505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4149, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8718, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [14/25] Loss: 0.0036554415555049976, RECONS: 0.0033338369801640512, DISTANCE: 0.3216045379638672
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4077, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [15/25] Loss: 0.0036370761081343517, RECONS: 0.003314459143439308, DISTANCE: 0.32261692732572556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4061, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [16/25] Loss: 0.0036061799482387654, RECONS: 0.0032819296123788636, DISTANCE: 0.32425029838786407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4192, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [17/25] Loss: 0.0035876069062699876, RECONS: 0.003264600436927544, DISTANCE: 0.3230064312616984
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4146, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8324, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [18/25] Loss: 0.003580172730021571, RECONS: 0.003258830818690752, DISTANCE: 0.3213418784894441
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [19/25] Loss: 0.003580005280673504, RECONS: 0.0032572568161413074, DISTANCE: 0.32274843454360963
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5998, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3612, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8440, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [20/25] Loss: 0.003597563553956293, RECONS: 0.003275685522350527, DISTANCE: 0.32187800180344356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4100, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8309, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [21/25] Loss: 0.0036081060534343123, RECONS: 0.0032845588760789146, DISTANCE: 0.32354714653708716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [22/25] Loss: 0.003594220211000546, RECONS: 0.0032712723351205173, DISTANCE: 0.3229478493980739
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [23/25] Loss: 0.003591519722249359, RECONS: 0.0032687401884080223, DISTANCE: 0.32277951141198474
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.2941, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3650, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8754, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[260/300] [24/25] Loss: 0.0036422187462449075, RECONS: 0.0033024987298995254, DISTANCE: 0.33971999168395994
Test[260/300] [0/2] Loss: 0.004272381775081158, RECONS: 0.003374297171831131, DISTANCE: 0.8980846405029297
Test[260/300] [1/2] Loss: 0.004204742610454559, RECONS: 0.0029810676351189613, DISTANCE: 1.223675012588501
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3994, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [0/25] Loss: 0.0031126155517995358, RECONS: 0.002791343256831169, DISTANCE: 0.32127225399017334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [1/25] Loss: 0.0032171806087717414, RECONS: 0.0028989854035899043, DISTANCE: 0.3181952238082886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [2/25] Loss: 0.003111300989985466, RECONS: 0.0027975044989337525, DISTANCE: 0.3137965202331543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [3/25] Loss: 0.003068224177695811, RECONS: 0.002744344179518521, DISTANCE: 0.32388001680374146
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5940, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3593, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [4/25] Loss: 0.0033944976516067983, RECONS: 0.003072625119239092, DISTANCE: 0.32187256813049314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3741, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8351, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [5/25] Loss: 0.003376746589007477, RECONS: 0.0030578982550650835, DISTANCE: 0.3188483516375224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3842, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [6/25] Loss: 0.003359466159184064, RECONS: 0.00304497399234346, DISTANCE: 0.3144921745572771
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [7/25] Loss: 0.00337933748960495, RECONS: 0.0030631711706519127, DISTANCE: 0.31616631150245667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8227, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5922, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [8/25] Loss: 0.0034135826087246337, RECONS: 0.0030995681364503172, DISTANCE: 0.314014474550883
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8367, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [9/25] Loss: 0.0033949706936255097, RECONS: 0.0030807733070105313, DISTANCE: 0.31419738531112673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3764, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [10/25] Loss: 0.00344969478266483, RECONS: 0.0031327982009811835, DISTANCE: 0.31689655780792236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3578, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [11/25] Loss: 0.003472648134144644, RECONS: 0.003155236986155311, DISTANCE: 0.3174111247062683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8341, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [12/25] Loss: 0.00348427495919168, RECONS: 0.003164545400068164, DISTANCE: 0.3197295298943153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [13/25] Loss: 0.003465814216594611, RECONS: 0.0031473795284650157, DISTANCE: 0.31843466418130056
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4147, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [14/25] Loss: 0.003448104408259193, RECONS: 0.00312948701903224, DISTANCE: 0.3186173597971598
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3977, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [15/25] Loss: 0.003475069606793113, RECONS: 0.003157656406983733, DISTANCE: 0.31741316616535187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4248, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8374, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [16/25] Loss: 0.003481687169850749, RECONS: 0.003165852648260839, DISTANCE: 0.3158344871857587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4065, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [17/25] Loss: 0.0034556238420514595, RECONS: 0.0031389114058886967, DISTANCE: 0.3167123993237813
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4060, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8415, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6147, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [18/25] Loss: 0.003457284458961926, RECONS: 0.0031407523630677084, DISTANCE: 0.316532059719688
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3561, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8303, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [19/25] Loss: 0.0034288753406144677, RECONS: 0.0031140710227191446, DISTANCE: 0.31480427980422976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [20/25] Loss: 0.0034152127225838954, RECONS: 0.0030993597271541753, DISTANCE: 0.31585295995076496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [21/25] Loss: 0.003408827649598772, RECONS: 0.0030921430496329613, DISTANCE: 0.3166845711794766
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [22/25] Loss: 0.0033961256014426117, RECONS: 0.0030797074812099986, DISTANCE: 0.31641808800075366
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3412, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [23/25] Loss: 0.0033976764728625617, RECONS: 0.0030795718096972755, DISTANCE: 0.31810463468233746
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3249, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[261/300] [24/25] Loss: 0.003408385803923011, RECONS: 0.0030763527005910874, DISTANCE: 0.3320330715179443
Test[261/300] [0/2] Loss: 0.0043524885550141335, RECONS: 0.0035727801732718945, DISTANCE: 0.7797083854675293
Test[261/300] [1/2] Loss: 0.004403080325573683, RECONS: 0.0032380209304392338, DISTANCE: 1.1650593280792236
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3436, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [0/25] Loss: 0.003938625566661358, RECONS: 0.0035994183272123337, DISTANCE: 0.33920717239379883
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3318, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [1/25] Loss: 0.003618431161157787, RECONS: 0.0032661291770637035, DISTANCE: 0.3523018956184387
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3503, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8260, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [2/25] Loss: 0.003502428764477372, RECONS: 0.0031504797904441753, DISTANCE: 0.35194889704386395
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4008, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8189, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [3/25] Loss: 0.0035098789958283305, RECONS: 0.0031705343280918896, DISTANCE: 0.3393446207046509
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6232, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5900, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [4/25] Loss: 0.00374998115003109, RECONS: 0.003421201417222619, DISTANCE: 0.3287796974182129
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3961, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [5/25] Loss: 0.003747070673853159, RECONS: 0.0034258444405471287, DISTANCE: 0.32122619946797687
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3929, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [6/25] Loss: 0.0036627046231712613, RECONS: 0.0033365933424127953, DISTANCE: 0.3261112485613142
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8577, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [7/25] Loss: 0.0036153614637441933, RECONS: 0.0032921565289143473, DISTANCE: 0.3232048898935318
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8407, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [8/25] Loss: 0.00358965237521463, RECONS: 0.003262592557196816, DISTANCE: 0.3270597722795274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3972, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8489, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [9/25] Loss: 0.0035507203545421364, RECONS: 0.0032279012259095905, DISTANCE: 0.32281908988952634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4232, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [10/25] Loss: 0.0035509493371302433, RECONS: 0.0032290366732261396, DISTANCE: 0.321912635456432
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3779, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [11/25] Loss: 0.00354034915411224, RECONS: 0.003213804253997902, DISTANCE: 0.3265448808670044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4019, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8447, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [12/25] Loss: 0.0035132448941182634, RECONS: 0.003182271889482553, DISTANCE: 0.33097299245687634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [13/25] Loss: 0.0035228440704356346, RECONS: 0.00319426047748753, DISTANCE: 0.3285835725920541
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3665, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8358, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [14/25] Loss: 0.0034979814973970253, RECONS: 0.003169438832749923, DISTANCE: 0.3285426378250122
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3463, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [15/25] Loss: 0.003480299099464901, RECONS: 0.0031518973410129547, DISTANCE: 0.32840172946453094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [16/25] Loss: 0.0034766625476014964, RECONS: 0.003148404771790785, DISTANCE: 0.3282577430500704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3803, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8351, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [17/25] Loss: 0.003456100394638876, RECONS: 0.0031294533724172246, DISTANCE: 0.32664699024624294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8425, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6131, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [18/25] Loss: 0.00345542889676596, RECONS: 0.003128679971651811, DISTANCE: 0.32674889815481084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6015, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3793, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [19/25] Loss: 0.0034331979928538202, RECONS: 0.003107656131032854, DISTANCE: 0.32554184198379515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6275, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8402, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [20/25] Loss: 0.0034490975307389384, RECONS: 0.0031237847038677762, DISTANCE: 0.32531280744643437
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3600, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8313, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [21/25] Loss: 0.0034344393167306075, RECONS: 0.0031070936873385854, DISTANCE: 0.327345609664917
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3335, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [22/25] Loss: 0.003515584333597318, RECONS: 0.0031902190277595882, DISTANCE: 0.3253652945808742
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5991, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3658, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [23/25] Loss: 0.00354181284395357, RECONS: 0.003216641266286994, DISTANCE: 0.325171560049057
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3804, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3636, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8250, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[262/300] [24/25] Loss: 0.003531786045059562, RECONS: 0.0031892543379217386, DISTANCE: 0.3425316905975342
Test[262/300] [0/2] Loss: 0.004190283361822367, RECONS: 0.0035397063475102186, DISTANCE: 0.6505770683288574
Test[262/300] [1/2] Loss: 0.004338887287303805, RECONS: 0.0032123143319040537, DISTANCE: 1.126572847366333
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8261, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [0/25] Loss: 0.0032245146576315165, RECONS: 0.002892090007662773, DISTANCE: 0.3324246406555176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4141, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [1/25] Loss: 0.003501851693727076, RECONS: 0.003151812474243343, DISTANCE: 0.3500392436981201
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4063, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [2/25] Loss: 0.003542730351909995, RECONS: 0.0032067593031873307, DISTANCE: 0.33597103754679364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5916, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4054, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [3/25] Loss: 0.0036194422864355147, RECONS: 0.003287000465206802, DISTANCE: 0.3324418365955353
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4268, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [4/25] Loss: 0.003628756245598197, RECONS: 0.003291274793446064, DISTANCE: 0.3374814510345459
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8396, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [5/25] Loss: 0.0035791280679404736, RECONS: 0.0032423133961856365, DISTANCE: 0.33681466182072956
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4391, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [6/25] Loss: 0.003501574309276683, RECONS: 0.0031711556283491, DISTANCE: 0.33041867188044954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4291, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [7/25] Loss: 0.003538847842719406, RECONS: 0.0032080488454084843, DISTANCE: 0.3307989835739136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3871, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8653, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [8/25] Loss: 0.003550727670598361, RECONS: 0.0032144032108287015, DISTANCE: 0.33632445335388184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [9/25] Loss: 0.003499212907627225, RECONS: 0.0031659803818911312, DISTANCE: 0.3332325220108032
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4078, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [10/25] Loss: 0.0034713259982791815, RECONS: 0.003132937666536732, DISTANCE: 0.3383883237838745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8226, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [11/25] Loss: 0.003481353633105755, RECONS: 0.0031452003555993238, DISTANCE: 0.3361532787481944
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8271, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [12/25] Loss: 0.0034841049390916643, RECONS: 0.0031493213027715683, DISTANCE: 0.3347836366066566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [13/25] Loss: 0.003486054766524051, RECONS: 0.0031498628003256662, DISTANCE: 0.33619196925844463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3728, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [14/25] Loss: 0.00346281750438114, RECONS: 0.0031261887401342393, DISTANCE: 0.3366287628809611
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [15/25] Loss: 0.003449882729910314, RECONS: 0.0031122900545597076, DISTANCE: 0.3375926688313484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3612, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6132, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [16/25] Loss: 0.003419525661122273, RECONS: 0.003083765972405672, DISTANCE: 0.3357596818138571
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [17/25] Loss: 0.003417351076172458, RECONS: 0.0030814550635922286, DISTANCE: 0.3358960019217597
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6012, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8533, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [18/25] Loss: 0.0034656954537096774, RECONS: 0.0031323941105878667, DISTANCE: 0.3333013245933934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3840, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [19/25] Loss: 0.003458042780403048, RECONS: 0.003125090815592557, DISTANCE: 0.3329519510269165
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3802, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [20/25] Loss: 0.0034440659607450166, RECONS: 0.003111594234637561, DISTANCE: 0.33247171129499165
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8566, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [21/25] Loss: 0.0034267396814274516, RECONS: 0.0030954128702763806, DISTANCE: 0.33132679895921185
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3791, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [22/25] Loss: 0.0033998631204114013, RECONS: 0.00306913279928267, DISTANCE: 0.33073030347409454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [23/25] Loss: 0.003404900179399798, RECONS: 0.003075265839773541, DISTANCE: 0.3296343187491099
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6192, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2845, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[263/300] [24/25] Loss: 0.003418834302574396, RECONS: 0.003074266016483307, DISTANCE: 0.34456826210021974
Test[263/300] [0/2] Loss: 0.004199896939098835, RECONS: 0.0032539647072553635, DISTANCE: 0.9459320306777954
Test[263/300] [1/2] Loss: 0.004162567900493741, RECONS: 0.0028728045290336013, DISTANCE: 1.2897632718086243
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3625, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [0/25] Loss: 0.0029420272912830114, RECONS: 0.002588356379419565, DISTANCE: 0.35367095470428467
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5962, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [1/25] Loss: 0.003397022024728358, RECONS: 0.0030609435634687543, DISTANCE: 0.3360785245895386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3595, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [2/25] Loss: 0.0031571403766671815, RECONS: 0.0028274001087993383, DISTANCE: 0.3297402858734131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [3/25] Loss: 0.0031789285712875426, RECONS: 0.002863096247892827, DISTANCE: 0.31583234667778015
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [4/25] Loss: 0.0032768968027085065, RECONS: 0.002960348781198263, DISTANCE: 0.3165480613708496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [5/25] Loss: 0.0032689207000657916, RECONS: 0.002951356155487398, DISTANCE: 0.3175645669301351
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4040, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8287, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [6/25] Loss: 0.0032898025986339363, RECONS: 0.002970550874514239, DISTANCE: 0.3192517416817801
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8309, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [7/25] Loss: 0.003303531208075583, RECONS: 0.0029831985593773425, DISTANCE: 0.3203326463699341
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4104, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [8/25] Loss: 0.003293930837470624, RECONS: 0.0029702697777085835, DISTANCE: 0.32366106245252824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3990, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [9/25] Loss: 0.0033145037712529303, RECONS: 0.0029893377330154182, DISTANCE: 0.3251660346984863
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3197, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [10/25] Loss: 0.0033437242858450522, RECONS: 0.0030166381038725376, DISTANCE: 0.32708618857643823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5960, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3721, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [11/25] Loss: 0.0034483054381174347, RECONS: 0.003123436006717384, DISTANCE: 0.32486943403879803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3400, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8669, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [12/25] Loss: 0.0034086751715781596, RECONS: 0.0030842794893452753, DISTANCE: 0.32439569326547474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6205, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3221, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6249, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [13/25] Loss: 0.003389368116456483, RECONS: 0.0030639010115659665, DISTANCE: 0.3254671096801758
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3901, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6220, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [14/25] Loss: 0.003430277310932676, RECONS: 0.0031060119004299243, DISTANCE: 0.3242654005686442
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [15/25] Loss: 0.003414598701056093, RECONS: 0.0030887538596289232, DISTANCE: 0.32584483176469803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3633, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8345, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [16/25] Loss: 0.0033797901397680536, RECONS: 0.0030544623321689226, DISTANCE: 0.3253277960945578
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [17/25] Loss: 0.0033533757086843252, RECONS: 0.003027054119027323, DISTANCE: 0.3263215819994609
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3837, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [18/25] Loss: 0.0033575614522162235, RECONS: 0.0030332116385627735, DISTANCE: 0.32434981120260137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3780, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8178, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [19/25] Loss: 0.0033498063567094505, RECONS: 0.0030255626305006446, DISTANCE: 0.32424371838569643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8367, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [20/25] Loss: 0.003328843130951836, RECONS: 0.003005577761325098, DISTANCE: 0.32326535951523555
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3848, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [21/25] Loss: 0.0033355320549824023, RECONS: 0.003012487601319497, DISTANCE: 0.3230444409630515
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [22/25] Loss: 0.003329296444502214, RECONS: 0.0030071719792550025, DISTANCE: 0.3221244501030963
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4036, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8637, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [23/25] Loss: 0.003359377917756016, RECONS: 0.003037864934109772, DISTANCE: 0.32151296734809875
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5947, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4117, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[264/300] [24/25] Loss: 0.003392295008525252, RECONS: 0.0030559491459280254, DISTANCE: 0.336345853805542
Test[264/300] [0/2] Loss: 0.004453948233276606, RECONS: 0.0037651164457201958, DISTANCE: 0.6888315677642822
Test[264/300] [1/2] Loss: 0.00442353286780417, RECONS: 0.0035383537178859115, DISTANCE: 0.8851789236068726
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4408, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [0/25] Loss: 0.0037548199761658907, RECONS: 0.0034295665100216866, DISTANCE: 0.3252534866333008
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [1/25] Loss: 0.0036700848722830415, RECONS: 0.0033407039009034634, DISTANCE: 0.32938098907470703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4816, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [2/25] Loss: 0.0038974815203497806, RECONS: 0.0035618155573805175, DISTANCE: 0.335666020711263
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4616, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [3/25] Loss: 0.0038009044947102666, RECONS: 0.003465915797278285, DISTANCE: 0.33498871326446533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8784, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6243, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [4/25] Loss: 0.003677400667220354, RECONS: 0.0033522404730319975, DISTANCE: 0.32516021728515626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3883, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6274, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [5/25] Loss: 0.0038077177790304026, RECONS: 0.0034835347905755043, DISTANCE: 0.32418298721313477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5985, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8613, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [6/25] Loss: 0.003952591347375086, RECONS: 0.003630093631467649, DISTANCE: 0.32249774251665386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5924, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [7/25] Loss: 0.004030442505609244, RECONS: 0.0037092193379066885, DISTANCE: 0.3212231695652008
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4035, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8303, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5876, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [8/25] Loss: 0.003991803102609184, RECONS: 0.003671452144367827, DISTANCE: 0.32035096486409503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8110, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5840, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [9/25] Loss: 0.004067482752725482, RECONS: 0.0037452834192663433, DISTANCE: 0.32219935655593873
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4611, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8272, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5879, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [10/25] Loss: 0.004083618945018811, RECONS: 0.003755350766534155, DISTANCE: 0.32826819203116675
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6182, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4276, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8258, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [11/25] Loss: 0.004048542546418806, RECONS: 0.0037210879381746054, DISTANCE: 0.3274546265602112
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [12/25] Loss: 0.004021525777016695, RECONS: 0.0036946200550748752, DISTANCE: 0.3269057457263653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6334, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [13/25] Loss: 0.003990080091170967, RECONS: 0.0036634179996326566, DISTANCE: 0.32666211468832834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5965, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3453, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8713, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6336, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [14/25] Loss: 0.0041085314160833756, RECONS: 0.003784698077167074, DISTANCE: 0.3238333543141683
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5929, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3543, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [15/25] Loss: 0.004194959401502274, RECONS: 0.0038688969070790336, DISTANCE: 0.32606250047683716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3799, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [16/25] Loss: 0.004155461416196297, RECONS: 0.003826308310689295, DISTANCE: 0.329153109999264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4259, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8318, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5845, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [17/25] Loss: 0.00418937854313602, RECONS: 0.0038601462211873797, DISTANCE: 0.3292323152224223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4551, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8085, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5881, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [18/25] Loss: 0.004149849073177106, RECONS: 0.0038210395110869094, DISTANCE: 0.32880955620815877
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4722, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8256, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5941, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [19/25] Loss: 0.004142442799638957, RECONS: 0.0038142182980664074, DISTANCE: 0.32822450399398806
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4563, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8337, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [20/25] Loss: 0.0041335654068028645, RECONS: 0.003805233431713922, DISTANCE: 0.3283319813864572
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4276, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [21/25] Loss: 0.004118424152362753, RECONS: 0.0037904077167199416, DISTANCE: 0.3280164436860518
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6183, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [22/25] Loss: 0.004089896911350282, RECONS: 0.003762068652102481, DISTANCE: 0.3278282621632452
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3706, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [23/25] Loss: 0.0040606943269570666, RECONS: 0.0037335949988725283, DISTANCE: 0.3270993282397588
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3271, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[265/300] [24/25] Loss: 0.0040454024542123075, RECONS: 0.003703296957537532, DISTANCE: 0.3421054935455322
Test[265/300] [0/2] Loss: 0.005349122919142246, RECONS: 0.004631770309060812, DISTANCE: 0.7173527479171753
Test[265/300] [1/2] Loss: 0.0052216697949916124, RECONS: 0.004149283398874104, DISTANCE: 1.0723865032196045
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3387, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [0/25] Loss: 0.0057008531875908375, RECONS: 0.005383629351854324, DISTANCE: 0.3172236680984497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3202, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8590, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [1/25] Loss: 0.004588169860653579, RECONS: 0.0042837997898459435, DISTANCE: 0.3043699860572815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3477, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [2/25] Loss: 0.0044533920008689165, RECONS: 0.0041305015329271555, DISTANCE: 0.3228904803593953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8154, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6085, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [3/25] Loss: 0.004257630556821823, RECONS: 0.003939368820283562, DISTANCE: 0.3182617425918579
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4109, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8317, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [4/25] Loss: 0.004143583495169878, RECONS: 0.0038281728979200126, DISTANCE: 0.31541059017181394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3968, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8420, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6005, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [5/25] Loss: 0.00401973615710934, RECONS: 0.003698796771156291, DISTANCE: 0.3209393620491028
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6193, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4300, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8369, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [6/25] Loss: 0.00407534052750894, RECONS: 0.003751077057261552, DISTANCE: 0.3242634194237845
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4201, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [7/25] Loss: 0.004004539921879768, RECONS: 0.00367576620192267, DISTANCE: 0.3287736624479294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3789, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8668, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [8/25] Loss: 0.003969883391012748, RECONS: 0.003641124607788192, DISTANCE: 0.32875871658325195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3733, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8880, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [9/25] Loss: 0.004004095029085874, RECONS: 0.003674023365601897, DISTANCE: 0.3300715804100037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8852, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6236, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [10/25] Loss: 0.003960471896624023, RECONS: 0.0036309276368807664, DISTANCE: 0.32954418659210205
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3702, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8709, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [11/25] Loss: 0.003954605315811932, RECONS: 0.0036276409906956055, DISTANCE: 0.32696424921353656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3129, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8460, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [12/25] Loss: 0.003882874376498736, RECONS: 0.003556408077621689, DISTANCE: 0.3264662210757916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3517, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8368, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [13/25] Loss: 0.00381723147750433, RECONS: 0.0034906512924603055, DISTANCE: 0.32658010721206665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6168, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3615, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8117, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [14/25] Loss: 0.003806425475825866, RECONS: 0.003479429582754771, DISTANCE: 0.32699582576751707
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3127, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8249, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [15/25] Loss: 0.0037947230593999848, RECONS: 0.0034696416405495256, DISTANCE: 0.32508135586977005
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3610, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8231, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [16/25] Loss: 0.0037632235599791303, RECONS: 0.0034370707923217733, DISTANCE: 0.3261527103536269
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5995, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3499, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8310, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [17/25] Loss: 0.0037487412337213755, RECONS: 0.0034225585534133846, DISTANCE: 0.3261826237042745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8448, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [18/25] Loss: 0.0037214591314918117, RECONS: 0.003394666042080835, DISTANCE: 0.3267930306886372
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5955, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3811, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8603, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [19/25] Loss: 0.003717817971482873, RECONS: 0.003390576841775328, DISTANCE: 0.3272410750389099
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3950, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [20/25] Loss: 0.0037271959618443533, RECONS: 0.003397684400191619, DISTANCE: 0.3295115005402338
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4017, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [21/25] Loss: 0.0037228512598878956, RECONS: 0.0033931239211762495, DISTANCE: 0.32972727580503985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [22/25] Loss: 0.00369693738732325, RECONS: 0.003368687998179508, DISTANCE: 0.3282493301059889
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4184, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8541, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [23/25] Loss: 0.0036816345042704293, RECONS: 0.0033534968679305166, DISTANCE: 0.3281375765800476
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[266/300] [24/25] Loss: 0.0036898498237133027, RECONS: 0.0033480787742882967, DISTANCE: 0.3417709922790527
Test[266/300] [0/2] Loss: 0.004940152633935213, RECONS: 0.004005002323538065, DISTANCE: 0.935150146484375
Test[266/300] [1/2] Loss: 0.00499797728843987, RECONS: 0.003699027467519045, DISTANCE: 1.2989497184753418
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6253, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [0/25] Loss: 0.0036601428873836994, RECONS: 0.0033440999686717987, DISTANCE: 0.3160429000854492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4149, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8540, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [1/25] Loss: 0.0038538635708391666, RECONS: 0.003520879428833723, DISTANCE: 0.33298414945602417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [2/25] Loss: 0.0035854228772222996, RECONS: 0.003268071605513493, DISTANCE: 0.3173512617746989
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [3/25] Loss: 0.003438343061134219, RECONS: 0.003108861274085939, DISTANCE: 0.3294817805290222
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [4/25] Loss: 0.0033854567911475895, RECONS: 0.0030586604494601487, DISTANCE: 0.3267963171005249
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [5/25] Loss: 0.0033685232046991587, RECONS: 0.003043508428769807, DISTANCE: 0.32501475016276044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3826, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8294, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [6/25] Loss: 0.0032991935232920305, RECONS: 0.002975715889728495, DISTANCE: 0.32347759178706575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8224, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6102, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [7/25] Loss: 0.003328481921926141, RECONS: 0.0030054483795538545, DISTANCE: 0.32303351163864136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3644, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8421, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [8/25] Loss: 0.003293563663545582, RECONS: 0.002972496569984489, DISTANCE: 0.32106706831190324
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3822, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [9/25] Loss: 0.003277587890625, RECONS: 0.002957462379708886, DISTANCE: 0.32012549638748167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3628, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [10/25] Loss: 0.0032975100700489497, RECONS: 0.0029761262068694287, DISTANCE: 0.321383844722401
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8379, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [11/25] Loss: 0.0033002565032802522, RECONS: 0.0029748045296097794, DISTANCE: 0.3254519502321879
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3501, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8420, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [12/25] Loss: 0.003318107328735865, RECONS: 0.0029937502605697284, DISTANCE: 0.3243570511157696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4117, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [13/25] Loss: 0.003317892784252763, RECONS: 0.0029895684981186476, DISTANCE: 0.3283242668424334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3884, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [14/25] Loss: 0.003331150176624457, RECONS: 0.00300187977651755, DISTANCE: 0.32927037874857584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4902, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3800, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [15/25] Loss: 0.003334397537400946, RECONS: 0.0030059385171625763, DISTANCE: 0.3284590020775795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [16/25] Loss: 0.003346826935953954, RECONS: 0.003018996842643794, DISTANCE: 0.3278300692053402
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3655, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [17/25] Loss: 0.0033448098046291205, RECONS: 0.003016852385674914, DISTANCE: 0.3279573983616299
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3821, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [18/25] Loss: 0.003357833324882545, RECONS: 0.003031089460771335, DISTANCE: 0.3267438474454378
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3720, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [19/25] Loss: 0.0033596328110434117, RECONS: 0.0030346968094818296, DISTANCE: 0.32493598461151124
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3844, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8277, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [20/25] Loss: 0.0033542687583359935, RECONS: 0.0030300115301672903, DISTANCE: 0.32425721486409503
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8216, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5914, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [21/25] Loss: 0.0033465748843313618, RECONS: 0.003024021629244089, DISTANCE: 0.3225532445040616
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4144, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8221, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5935, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [22/25] Loss: 0.0033549719550849304, RECONS: 0.0030329480524296346, DISTANCE: 0.32202389447585394
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4192, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6023, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [23/25] Loss: 0.003345147716269518, RECONS: 0.003022758202860132, DISTANCE: 0.32238950828711194
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2897, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[267/300] [24/25] Loss: 0.0033576315920799973, RECONS: 0.003019190402701497, DISTANCE: 0.3384411859512329
Test[267/300] [0/2] Loss: 0.00450345641002059, RECONS: 0.0038484944961965084, DISTANCE: 0.6549620628356934
Test[267/300] [1/2] Loss: 0.004702702863141894, RECONS: 0.0036504946183413267, DISTANCE: 1.052208423614502
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [0/25] Loss: 0.0030665199737995863, RECONS: 0.002714896574616432, DISTANCE: 0.3516232967376709
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6260, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4146, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [1/25] Loss: 0.0035662163281813264, RECONS: 0.0032115522772073746, DISTANCE: 0.3546639680862427
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3879, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8589, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6196, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [2/25] Loss: 0.0036171167933692536, RECONS: 0.0032893241538355746, DISTANCE: 0.32779260476430255
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3918, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8687, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [3/25] Loss: 0.00358999875606969, RECONS: 0.003257190401200205, DISTANCE: 0.33280834555625916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6016, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4029, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [4/25] Loss: 0.0035379510838538407, RECONS: 0.0032110176980495453, DISTANCE: 0.32693336009979246
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [5/25] Loss: 0.003528755313406388, RECONS: 0.003191152859168748, DISTANCE: 0.337602436542511
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4247, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8360, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [6/25] Loss: 0.0034992663256291833, RECONS: 0.003159301122650504, DISTANCE: 0.3399651902062552
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5923, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4173, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8272, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [7/25] Loss: 0.0034687148581724614, RECONS: 0.0031303311698138714, DISTANCE: 0.33838365972042084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4241, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8067, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5895, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [8/25] Loss: 0.00349945769024392, RECONS: 0.0031574537925836113, DISTANCE: 0.34200386206309
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4444, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8250, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5950, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [9/25] Loss: 0.003512571752071381, RECONS: 0.0031736485194414853, DISTANCE: 0.33892319202423093
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4146, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [10/25] Loss: 0.0035149476025253534, RECONS: 0.0031731583559038963, DISTANCE: 0.3417892130938443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [11/25] Loss: 0.003494339781658103, RECONS: 0.003153475932776928, DISTANCE: 0.34086381395657855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5956, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4087, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [12/25] Loss: 0.003592598090807979, RECONS: 0.003254225656676751, DISTANCE: 0.3383724047587468
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6001, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3665, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8701, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [13/25] Loss: 0.0035902904180277672, RECONS: 0.0032523968423317584, DISTANCE: 0.337893545627594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4059, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8402, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [14/25] Loss: 0.003542872704565525, RECONS: 0.0032083680387586357, DISTANCE: 0.3345046361287435
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4301, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [15/25] Loss: 0.003536710428306833, RECONS: 0.0032031129230745137, DISTANCE: 0.33359748125076294
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4023, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8293, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [16/25] Loss: 0.0034992063746732823, RECONS: 0.0031669678933480207, DISTANCE: 0.33223846379448385
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6210, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4064, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8202, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [17/25] Loss: 0.0035141781101831132, RECONS: 0.003184308996424079, DISTANCE: 0.329869098133511
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8334, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [18/25] Loss: 0.003507829675646989, RECONS: 0.0031781162037269064, DISTANCE: 0.32971345750909103
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3368, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [19/25] Loss: 0.003518261120188981, RECONS: 0.0031905856216326357, DISTANCE: 0.32767548561096194
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3500, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6214, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [20/25] Loss: 0.003522910321840928, RECONS: 0.003196349744463251, DISTANCE: 0.32656056540352957
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3390, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [21/25] Loss: 0.0034966268894177947, RECONS: 0.003170999327928505, DISTANCE: 0.32562754370949487
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [22/25] Loss: 0.0035264788337213836, RECONS: 0.003196786896771063, DISTANCE: 0.3296919283659562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [23/25] Loss: 0.0035099169375219694, RECONS: 0.003181782327980424, DISTANCE: 0.32813459634780884
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6233, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3709, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[268/300] [24/25] Loss: 0.0035631570126861334, RECONS: 0.0032174558844417335, DISTANCE: 0.3457011079788208
Test[268/300] [0/2] Loss: 0.004446573089808226, RECONS: 0.0036937398836016655, DISTANCE: 0.7528332471847534
Test[268/300] [1/2] Loss: 0.004678642377257347, RECONS: 0.003535548457875848, DISTANCE: 1.1430939435958862
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4088, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8352, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [0/25] Loss: 0.0030798306688666344, RECONS: 0.0027473371010273695, DISTANCE: 0.3324934244155884
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6233, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4149, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [1/25] Loss: 0.0033124794717878103, RECONS: 0.0029722207691520452, DISTANCE: 0.3402586579322815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [2/25] Loss: 0.0033550956286489964, RECONS: 0.0030232513478646674, DISTANCE: 0.3318442106246948
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3849, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [3/25] Loss: 0.00333230325486511, RECONS: 0.0030069139320403337, DISTANCE: 0.3253892958164215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [4/25] Loss: 0.0033599927090108396, RECONS: 0.003036901820451021, DISTANCE: 0.3230908870697021
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [5/25] Loss: 0.0033886694194128117, RECONS: 0.0030643913972501955, DISTANCE: 0.32427799701690674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4407, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8209, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5904, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [6/25] Loss: 0.003372941299208573, RECONS: 0.0030504564555095775, DISTANCE: 0.32248481682368685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8196, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5874, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [7/25] Loss: 0.0033483539591543376, RECONS: 0.0030241155182011425, DISTANCE: 0.3242384046316147
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4338, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8250, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5895, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [8/25] Loss: 0.0033515898717774283, RECONS: 0.003027489253630241, DISTANCE: 0.32410058710310197
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4132, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [9/25] Loss: 0.003344166022725403, RECONS: 0.0030194997787475588, DISTANCE: 0.3246662139892578
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [10/25] Loss: 0.003355993317778815, RECONS: 0.003031949851323258, DISTANCE: 0.3240434473211115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4133, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6177, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [11/25] Loss: 0.003369760020480802, RECONS: 0.003043783343552301, DISTANCE: 0.3259766499201457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5947, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3876, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [12/25] Loss: 0.0033937816937955525, RECONS: 0.003068241774319456, DISTANCE: 0.32553990070636457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5960, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3824, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8634, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [13/25] Loss: 0.00343947864270636, RECONS: 0.003114654832253499, DISTANCE: 0.324823796749115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [14/25] Loss: 0.0034344800747931003, RECONS: 0.003111222277705868, DISTANCE: 0.3232577800750732
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3981, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5921, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [15/25] Loss: 0.003429882344789803, RECONS: 0.003106856587692164, DISTANCE: 0.32302574813365936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4060, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8309, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [16/25] Loss: 0.0034299951649325736, RECONS: 0.00310688852058614, DISTANCE: 0.3231066395254696
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4072, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8200, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [17/25] Loss: 0.0034144409000873566, RECONS: 0.003093489820861982, DISTANCE: 0.3209510776731703
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8287, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [18/25] Loss: 0.00339564067115517, RECONS: 0.0030741757394647912, DISTANCE: 0.3214649275729531
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6121, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3687, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8356, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [19/25] Loss: 0.003393397864419967, RECONS: 0.0030718062538653613, DISTANCE: 0.3215916097164154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3467, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [20/25] Loss: 0.003379920253618842, RECONS: 0.003058473701544461, DISTANCE: 0.32144654932476224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3335, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8681, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [21/25] Loss: 0.00341138785535639, RECONS: 0.003088156893764707, DISTANCE: 0.3232309493151578
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3639, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [22/25] Loss: 0.003393284328605818, RECONS: 0.003069578801565196, DISTANCE: 0.3237055125443832
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8439, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [23/25] Loss: 0.0033807797687283405, RECONS: 0.003057498591563975, DISTANCE: 0.3232811639706294
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6252, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3881, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[269/300] [24/25] Loss: 0.0034063215646892788, RECONS: 0.0030682372394949197, DISTANCE: 0.3380843210220337
Test[269/300] [0/2] Loss: 0.0042836326174438, RECONS: 0.003587283194065094, DISTANCE: 0.6963492631912231
Test[269/300] [1/2] Loss: 0.004442872479557991, RECONS: 0.0033372333273291588, DISTANCE: 1.1056390404701233
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4011, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8504, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [0/25] Loss: 0.003123195841908455, RECONS: 0.002824458759278059, DISTANCE: 0.29873716831207275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [1/25] Loss: 0.0033881632843986154, RECONS: 0.003073902102187276, DISTANCE: 0.314261257648468
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3634, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8395, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [2/25] Loss: 0.003327539578701059, RECONS: 0.00301670174424847, DISTANCE: 0.3108379046122233
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5972, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4161, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8299, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [3/25] Loss: 0.003498431935440749, RECONS: 0.003179033868946135, DISTANCE: 0.31939807534217834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8304, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [4/25] Loss: 0.003585203131660819, RECONS: 0.00326867145486176, DISTANCE: 0.3165316343307495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4472, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8253, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5965, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [5/25] Loss: 0.0036086536711081862, RECONS: 0.003284041886217892, DISTANCE: 0.32461174329121906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3966, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [6/25] Loss: 0.003540528106636235, RECONS: 0.0032170862957303014, DISTANCE: 0.32344177791050505
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8649, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [7/25] Loss: 0.003487347246846184, RECONS: 0.003160272754030302, DISTANCE: 0.32707446813583374
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3738, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8627, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [8/25] Loss: 0.0034324872410959667, RECONS: 0.0031055411737826136, DISTANCE: 0.326946046617296
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [9/25] Loss: 0.0034313366748392584, RECONS: 0.0031052120961248876, DISTANCE: 0.32612454891204834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [10/25] Loss: 0.0034821312874555588, RECONS: 0.003155499612065879, DISTANCE: 0.32663165439258923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [11/25] Loss: 0.003470430131225536, RECONS: 0.00314087086978058, DISTANCE: 0.3295592466990153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8352, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [12/25] Loss: 0.003430014977661463, RECONS: 0.0031022925574619034, DISTANCE: 0.32772240271935094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4190, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8261, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [13/25] Loss: 0.003409313054622284, RECONS: 0.0030839963084352867, DISTANCE: 0.3253167356763567
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4216, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8292, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [14/25] Loss: 0.0034050391366084415, RECONS: 0.003082191276674469, DISTANCE: 0.322847843170166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4020, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8126, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [15/25] Loss: 0.0033708044356899336, RECONS: 0.003048198894248344, DISTANCE: 0.32260552048683167
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4132, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8240, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [16/25] Loss: 0.0033600439372308112, RECONS: 0.003039467326529762, DISTANCE: 0.32057659065022187
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8373, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [17/25] Loss: 0.003338473460947474, RECONS: 0.0030178951177125177, DISTANCE: 0.32057831684748334
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3681, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [18/25] Loss: 0.003330880628996774, RECONS: 0.0030093213886414703, DISTANCE: 0.32155921584681463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8552, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [19/25] Loss: 0.0033441097708418964, RECONS: 0.0030225006164982917, DISTANCE: 0.3216091275215149
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3817, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [20/25] Loss: 0.0034229904634966737, RECONS: 0.00310179056777131, DISTANCE: 0.321199859891619
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [21/25] Loss: 0.003419933279722252, RECONS: 0.003099461858668788, DISTANCE: 0.320471389727159
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8439, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [22/25] Loss: 0.003412570176727098, RECONS: 0.0030889718023979144, DISTANCE: 0.323598343393077
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4006, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8339, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [23/25] Loss: 0.00341162311572892, RECONS: 0.003088924403224761, DISTANCE: 0.3226986825466156
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5962, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4089, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8311, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5984, device='cuda:0', grad_fn=<MeanBackward0>)
Train[270/300] [24/25] Loss: 0.003425964517518878, RECONS: 0.0030848906096071003, DISTANCE: 0.3410738801956177
Test[270/300] [0/2] Loss: 0.004273660480976105, RECONS: 0.0034527345560491085, DISTANCE: 0.8209257125854492
Test[270/300] [1/2] Loss: 0.004615990910679102, RECONS: 0.0034310055198147893, DISTANCE: 1.1849852204322815
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6157, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4257, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8330, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [0/25] Loss: 0.003620568895712495, RECONS: 0.003267937805503607, DISTANCE: 0.3526310920715332
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6036, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [1/25] Loss: 0.003285274375230074, RECONS: 0.0029467397835105658, DISTANCE: 0.3385345935821533
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3961, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [2/25] Loss: 0.0031684086037178836, RECONS: 0.0028456045935551324, DISTANCE: 0.32280397415161133
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8682, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [3/25] Loss: 0.003356475499458611, RECONS: 0.0030387124279513955, DISTANCE: 0.31776300072669983
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [4/25] Loss: 0.003310238942503929, RECONS: 0.002985329646617174, DISTANCE: 0.32490923404693606
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8460, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [5/25] Loss: 0.003246099998553594, RECONS: 0.0029235139566784105, DISTANCE: 0.3225859999656677
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4062, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [6/25] Loss: 0.0032226545070963247, RECONS: 0.00289729141098048, DISTANCE: 0.32536303997039795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3982, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8313, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [7/25] Loss: 0.0031889608362689614, RECONS: 0.002866226510377601, DISTANCE: 0.3227342665195465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4092, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [8/25] Loss: 0.0032046477103398908, RECONS: 0.002882640084458722, DISTANCE: 0.3220075766245524
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4103, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8350, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [9/25] Loss: 0.0032214946579188107, RECONS: 0.0029013505671173336, DISTANCE: 0.32014405727386475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8351, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [10/25] Loss: 0.0032037815121425824, RECONS: 0.002884795084934343, DISTANCE: 0.31898639418862085
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4034, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8289, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [11/25] Loss: 0.0031905519232774773, RECONS: 0.0028717096623343727, DISTANCE: 0.31884223222732544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8601, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [12/25] Loss: 0.003198085119947791, RECONS: 0.0028766358378701485, DISTANCE: 0.32144926144526553
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [13/25] Loss: 0.0031926206845257965, RECONS: 0.00287141213526151, DISTANCE: 0.3212085281099592
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3739, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6144, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [14/25] Loss: 0.0032014118352284033, RECONS: 0.002879861323162913, DISTANCE: 0.32155049641927086
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [15/25] Loss: 0.003268590764491819, RECONS: 0.002947042274172418, DISTANCE: 0.3215484619140625
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3760, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [16/25] Loss: 0.003264082280699821, RECONS: 0.002943172146949698, DISTANCE: 0.32091011019314036
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3730, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8272, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [17/25] Loss: 0.003347928027829362, RECONS: 0.0030211383321632943, DISTANCE: 0.3267896638976203
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8321, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [18/25] Loss: 0.003337335821829344, RECONS: 0.0030096629144329774, DISTANCE: 0.3276728768097727
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4296, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8242, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5942, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [19/25] Loss: 0.0033400819404050706, RECONS: 0.003012417885474861, DISTANCE: 0.3276640295982361
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6131, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8176, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [20/25] Loss: 0.0033663310154917695, RECONS: 0.003037808108187857, DISTANCE: 0.32852288087209064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [21/25] Loss: 0.003382248803973198, RECONS: 0.0030545698880979962, DISTANCE: 0.32767889174548065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8599, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [22/25] Loss: 0.0033866068874688253, RECONS: 0.003060080617180337, DISTANCE: 0.32652624275373376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4097, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [23/25] Loss: 0.003412920380166421, RECONS: 0.003084333070243398, DISTANCE: 0.32858727872371674
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3715, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8677, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[271/300] [24/25] Loss: 0.00344426691532135, RECONS: 0.003098630188032985, DISTANCE: 0.34563669204711917
Test[271/300] [0/2] Loss: 0.004733404144644737, RECONS: 0.004159036558121443, DISTANCE: 0.5743676424026489
Test[271/300] [1/2] Loss: 0.004629520699381828, RECONS: 0.0036197073059156537, DISTANCE: 1.009813368320465
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3861, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8596, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [0/25] Loss: 0.0038753431290388107, RECONS: 0.0035211900249123573, DISTANCE: 0.3541531562805176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3397, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [1/25] Loss: 0.003436239785514772, RECONS: 0.003096233936958015, DISTANCE: 0.34000587463378906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3856, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [2/25] Loss: 0.0032439419689277806, RECONS: 0.0029104913119226694, DISTANCE: 0.33345067501068115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3758, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8241, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [3/25] Loss: 0.0032108137384057045, RECONS: 0.002873919263947755, DISTANCE: 0.3368944823741913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8172, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [4/25] Loss: 0.0032968053594231604, RECONS: 0.002964679338037968, DISTANCE: 0.33212602138519287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8247, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5942, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [5/25] Loss: 0.0032661935159315667, RECONS: 0.002935158476854364, DISTANCE: 0.331035037835439
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3976, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8222, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [6/25] Loss: 0.003333595847444875, RECONS: 0.002998695110103914, DISTANCE: 0.33490071977887836
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4121, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8224, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5994, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [7/25] Loss: 0.0033364053233526647, RECONS: 0.002998137439135462, DISTANCE: 0.33826786279678345
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [8/25] Loss: 0.00342754228040576, RECONS: 0.0030921149171060985, DISTANCE: 0.33542736371358234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3839, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [9/25] Loss: 0.0034206380136311055, RECONS: 0.0030877780867740513, DISTANCE: 0.33285993337631226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [10/25] Loss: 0.0033859813755208797, RECONS: 0.003057253864509138, DISTANCE: 0.3287275270982222
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4076, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8623, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [11/25] Loss: 0.003377692172459016, RECONS: 0.0030501088088688753, DISTANCE: 0.3275833825270335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4150, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [12/25] Loss: 0.0034154000906990124, RECONS: 0.00308376604404587, DISTANCE: 0.3316340629871075
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3887, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [13/25] Loss: 0.003397799313201436, RECONS: 0.0030677059798368384, DISTANCE: 0.3300933412143162
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [14/25] Loss: 0.003494186280295253, RECONS: 0.003165867800513903, DISTANCE: 0.3283184766769409
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4069, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8276, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [15/25] Loss: 0.0034769490303006023, RECONS: 0.00314958491071593, DISTANCE: 0.32736411690711975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3934, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8331, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [16/25] Loss: 0.003493665443623767, RECONS: 0.003167232539614334, DISTANCE: 0.32643290828256044
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8396, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [17/25] Loss: 0.0034845087340929443, RECONS: 0.0031574235116649005, DISTANCE: 0.3270852234628465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3919, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8280, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [18/25] Loss: 0.003495066181609505, RECONS: 0.0031685710418969393, DISTANCE: 0.32649513922239604
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [19/25] Loss: 0.0034785261610522865, RECONS: 0.003153520089108497, DISTANCE: 0.32500606775283813
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3763, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [20/25] Loss: 0.003446397005713412, RECONS: 0.00312073585311217, DISTANCE: 0.3256611483437674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3630, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8523, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6187, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [21/25] Loss: 0.0034391279755668206, RECONS: 0.003113510796207596, DISTANCE: 0.325617177919908
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3646, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [22/25] Loss: 0.003439646021908392, RECONS: 0.003115261955510663, DISTANCE: 0.324384067369544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3319, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [23/25] Loss: 0.0034225729759782553, RECONS: 0.0030987522623036057, DISTANCE: 0.32382071514924365
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6023, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8127, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[272/300] [24/25] Loss: 0.003497252520173788, RECONS: 0.0031611259188503026, DISTANCE: 0.3361265993118286
Test[272/300] [0/2] Loss: 0.004421577323228121, RECONS: 0.0035699454601854086, DISTANCE: 0.851631760597229
Test[272/300] [1/2] Loss: 0.004652091767638922, RECONS: 0.003409256460145116, DISTANCE: 1.2428351640701294
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4187, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8182, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [0/25] Loss: 0.003978334367275238, RECONS: 0.0036053243093192577, DISTANCE: 0.3730100393295288
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4467, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8148, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [1/25] Loss: 0.003638422815129161, RECONS: 0.0032883762614801526, DISTANCE: 0.3500465750694275
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8237, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [2/25] Loss: 0.003581722111751636, RECONS: 0.0032425550743937492, DISTANCE: 0.3391670783360799
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4597, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [3/25] Loss: 0.003703615046106279, RECONS: 0.0033665578812360764, DISTANCE: 0.3370571732521057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4822, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [4/25] Loss: 0.0037743426859378816, RECONS: 0.0034330419264733793, DISTANCE: 0.3413007497787476
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6304, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4392, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8484, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [5/25] Loss: 0.003976271332552035, RECONS: 0.0036336528913428387, DISTANCE: 0.3426184455553691
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [6/25] Loss: 0.004025037200855357, RECONS: 0.0036881951216076103, DISTANCE: 0.33684209414890837
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3477, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6248, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [7/25] Loss: 0.003964053728850558, RECONS: 0.003632842970546335, DISTANCE: 0.33121076226234436
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3507, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8620, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [8/25] Loss: 0.004038795958169633, RECONS: 0.0037087444733414385, DISTANCE: 0.3300515015920003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3431, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8582, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [9/25] Loss: 0.004054726590402425, RECONS: 0.0037287635263055564, DISTANCE: 0.3259630799293518
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3701, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8230, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [10/25] Loss: 0.003994989208877087, RECONS: 0.0036686519160866737, DISTANCE: 0.32633730498227204
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8116, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [11/25] Loss: 0.003967339386387418, RECONS: 0.0036419832225268087, DISTANCE: 0.3253561655680339
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6226, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8183, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5955, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [12/25] Loss: 0.0040377136857177205, RECONS: 0.0037075138220993373, DISTANCE: 0.3301998651944674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3973, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8110, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [13/25] Loss: 0.00402444985229522, RECONS: 0.0036960181148190585, DISTANCE: 0.32843174253191265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3833, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8343, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [14/25] Loss: 0.003962838385875026, RECONS: 0.0036349924902121227, DISTANCE: 0.32784589131673175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3433, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [15/25] Loss: 0.003918452974176034, RECONS: 0.0035907940909964964, DISTANCE: 0.32765888422727585
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3543, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8611, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [16/25] Loss: 0.0038856180549106177, RECONS: 0.003559236044940703, DISTANCE: 0.32638200591592226
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3664, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8633, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [17/25] Loss: 0.003868745730465485, RECONS: 0.003544775575088958, DISTANCE: 0.32397014564938015
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3813, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [18/25] Loss: 0.0038682210724800825, RECONS: 0.003545076917170694, DISTANCE: 0.3231441472706042
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3652, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [19/25] Loss: 0.0038344716653227807, RECONS: 0.0035119337379001083, DISTANCE: 0.3225379228591919
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3937, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [20/25] Loss: 0.003804833195837481, RECONS: 0.0034811082296073437, DISTANCE: 0.32372496241614934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4089, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8172, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [21/25] Loss: 0.0037795230534605003, RECONS: 0.003456426657397639, DISTANCE: 0.3230963945388794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4214, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8316, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [22/25] Loss: 0.0037979187808282995, RECONS: 0.0034745206408526587, DISTANCE: 0.323398144348808
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6171, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4270, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5982, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [23/25] Loss: 0.0037919543780541667, RECONS: 0.003467970440397039, DISTANCE: 0.32398393750190735
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5904, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4201, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8266, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[273/300] [24/25] Loss: 0.003825472416356206, RECONS: 0.0034848595131188632, DISTANCE: 0.340612907409668
Test[273/300] [0/2] Loss: 0.004143211990594864, RECONS: 0.0034892368130385876, DISTANCE: 0.6539750099182129
Test[273/300] [1/2] Loss: 0.004225601442158222, RECONS: 0.0032737815054133534, DISTANCE: 0.9518197178840637
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8470, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [0/25] Loss: 0.0034617215860635042, RECONS: 0.003077961504459381, DISTANCE: 0.38376009464263916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.3725, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [1/25] Loss: 0.0033391854958608747, RECONS: 0.002984681515954435, DISTANCE: 0.3545039892196655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3476, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [2/25] Loss: 0.003296904576321443, RECONS: 0.0029553362789253392, DISTANCE: 0.3415683110555013
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3693, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8632, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [3/25] Loss: 0.0034294159268029034, RECONS: 0.0030847956077195704, DISTANCE: 0.34462034702301025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [4/25] Loss: 0.0033883126452565193, RECONS: 0.0030508871655911206, DISTANCE: 0.33742551803588866
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3828, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8319, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [5/25] Loss: 0.0033427750070889792, RECONS: 0.003009032108820975, DISTANCE: 0.3337429364522298
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8272, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [6/25] Loss: 0.0033295442616300924, RECONS: 0.0030019295601440327, DISTANCE: 0.32761471612112864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3857, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8349, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [7/25] Loss: 0.003347099671373144, RECONS: 0.0030205567309167236, DISTANCE: 0.3265429437160492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3389, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8246, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [8/25] Loss: 0.0033419460523873568, RECONS: 0.0030165728078120286, DISTANCE: 0.32537325223286945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3656, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8280, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6161, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [9/25] Loss: 0.0034117685863748193, RECONS: 0.003082834417000413, DISTANCE: 0.32893416881561277
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3352, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8501, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [10/25] Loss: 0.0033653349276970734, RECONS: 0.003036423861472444, DISTANCE: 0.32891106605529785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3599, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8521, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6205, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [11/25] Loss: 0.0034850972394148507, RECONS: 0.0031572201405651867, DISTANCE: 0.32787710428237915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3856, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8469, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [12/25] Loss: 0.0035414126200171616, RECONS: 0.003212545156622162, DISTANCE: 0.328867453795213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [13/25] Loss: 0.0034991823735513856, RECONS: 0.003170013344580574, DISTANCE: 0.32916901792798725
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6260, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4213, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8456, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [14/25] Loss: 0.003547230642288923, RECONS: 0.0032143859658390283, DISTANCE: 0.3328446626663208
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6141, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3944, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [15/25] Loss: 0.003542280333931558, RECONS: 0.003210711103747599, DISTANCE: 0.33156921714544296
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4391, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [16/25] Loss: 0.0035259569173350055, RECONS: 0.0031935611109742347, DISTANCE: 0.33239579901975747
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6141, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [17/25] Loss: 0.0035276786527699893, RECONS: 0.003193112038489845, DISTANCE: 0.3345666130383809
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4117, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [18/25] Loss: 0.0035371342673897743, RECONS: 0.003204823018198735, DISTANCE: 0.3323112475244622
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3872, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8374, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [19/25] Loss: 0.003504944615997374, RECONS: 0.0031734086107462643, DISTANCE: 0.33153600692749025
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8412, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [20/25] Loss: 0.0034966717718080396, RECONS: 0.003166196003024067, DISTANCE: 0.33047577313014437
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6049, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5972, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [21/25] Loss: 0.0034853862175209956, RECONS: 0.0031555631959980183, DISTANCE: 0.32982302795756946
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8261, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [22/25] Loss: 0.003465451968266912, RECONS: 0.003135141987434548, DISTANCE: 0.3303099818851637
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8210, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [23/25] Loss: 0.003460723334380115, RECONS: 0.0031310958438552916, DISTANCE: 0.32962748905022937
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5810, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.2936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8225, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[274/300] [24/25] Loss: 0.0035964198876172306, RECONS: 0.003250671625137329, DISTANCE: 0.3457482624053955
Test[274/300] [0/2] Loss: 0.004256388172507286, RECONS: 0.003493232186883688, DISTANCE: 0.7631559371948242
Test[274/300] [1/2] Loss: 0.004220089176669717, RECONS: 0.0031693290220573545, DISTANCE: 1.0507600903511047
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6194, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4048, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8275, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6065, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [0/25] Loss: 0.003244327614083886, RECONS: 0.00292484974488616, DISTANCE: 0.31947779655456543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8379, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [1/25] Loss: 0.0031352583318948746, RECONS: 0.0028244233690202236, DISTANCE: 0.3108348846435547
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4065, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [2/25] Loss: 0.003326576203107834, RECONS: 0.003016038021693627, DISTANCE: 0.3105381329854329
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [3/25] Loss: 0.0034354065428487957, RECONS: 0.003128043666947633, DISTANCE: 0.3073628544807434
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8524, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6020, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [4/25] Loss: 0.0034447383135557176, RECONS: 0.0031381867825984954, DISTANCE: 0.3065515041351318
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4064, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [5/25] Loss: 0.0034133727118993797, RECONS: 0.003105963192259272, DISTANCE: 0.30740948518117267
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4183, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [6/25] Loss: 0.003376247826963663, RECONS: 0.003069221042096615, DISTANCE: 0.30702676091875347
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4089, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [7/25] Loss: 0.003462789871264249, RECONS: 0.003153290133923292, DISTANCE: 0.30949971079826355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3952, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8499, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [8/25] Loss: 0.0034229254557026755, RECONS: 0.0031127799302339554, DISTANCE: 0.3101455105675591
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4043, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [9/25] Loss: 0.003449420817196369, RECONS: 0.003138372837565839, DISTANCE: 0.31104795932769774
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3898, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8223, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [10/25] Loss: 0.0034048793922093782, RECONS: 0.0030911023389886727, DISTANCE: 0.3137770349329168
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3806, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8126, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5959, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [11/25] Loss: 0.003434783274618288, RECONS: 0.003118400403764099, DISTANCE: 0.31638285517692566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4185, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8156, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [12/25] Loss: 0.003458327094379526, RECONS: 0.003141573898924085, DISTANCE: 0.31675317654242885
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8351, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [13/25] Loss: 0.003423511433149023, RECONS: 0.0031030300971386687, DISTANCE: 0.32048130886895315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6204, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4015, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8548, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [14/25] Loss: 0.0034066762775182722, RECONS: 0.003085940005257726, DISTANCE: 0.32073624928792316
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3438, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6239, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [15/25] Loss: 0.0034022969339275733, RECONS: 0.003078280613408424, DISTANCE: 0.3240163028240204
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3555, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [16/25] Loss: 0.0034573291400995325, RECONS: 0.0031347531304859065, DISTANCE: 0.32257598989150105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3743, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [17/25] Loss: 0.0034718519050834905, RECONS: 0.0031466566983403433, DISTANCE: 0.32519518666797215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3440, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [18/25] Loss: 0.0034426268876383177, RECONS: 0.00311602959654441, DISTANCE: 0.3265972702126754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6006, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4162, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [19/25] Loss: 0.0034113005618564784, RECONS: 0.003085211256984621, DISTANCE: 0.32608928084373473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4226, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8176, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5926, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [20/25] Loss: 0.003432091214649734, RECONS: 0.0031061666197187846, DISTANCE: 0.3259245724905105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4247, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8157, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5940, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [21/25] Loss: 0.003430715465748852, RECONS: 0.0031061194180934267, DISTANCE: 0.324596031145616
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4236, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8369, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [22/25] Loss: 0.0034043265142194605, RECONS: 0.0030801332272265267, DISTANCE: 0.3241932703101117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [23/25] Loss: 0.0033951270355222127, RECONS: 0.003070800448767841, DISTANCE: 0.3243265748023987
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3574, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8811, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[275/300] [24/25] Loss: 0.0034063328430056572, RECONS: 0.0030672371294349432, DISTANCE: 0.3390956974029541
Test[275/300] [0/2] Loss: 0.0042954618111252785, RECONS: 0.0035646967589855194, DISTANCE: 0.7307648658752441
Test[275/300] [1/2] Loss: 0.004300542874261737, RECONS: 0.0032780737383291125, DISTANCE: 1.0224690437316895
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [0/25] Loss: 0.0029748643282800913, RECONS: 0.0026465668343007565, DISTANCE: 0.32829749584198
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3704, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8503, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [1/25] Loss: 0.002851473051123321, RECONS: 0.002523644594475627, DISTANCE: 0.32782846689224243
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3624, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [2/25] Loss: 0.003204374030853311, RECONS: 0.0028701607758800187, DISTANCE: 0.33421329657236737
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6233, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [3/25] Loss: 0.0031573910964652896, RECONS: 0.002825753064826131, DISTANCE: 0.33163803815841675
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3871, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [4/25] Loss: 0.0032020713668316604, RECONS: 0.0028734833933413027, DISTANCE: 0.3285879611968994
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8389, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [5/25] Loss: 0.003179578226990998, RECONS: 0.002850788839471837, DISTANCE: 0.3287893533706665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4069, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8291, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [6/25] Loss: 0.003195227655981268, RECONS: 0.0028671251410352333, DISTANCE: 0.3281024694442749
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3529, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8178, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [7/25] Loss: 0.0032208511256612837, RECONS: 0.0028916668379679322, DISTANCE: 0.32918423414230347
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4065, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8271, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [8/25] Loss: 0.0032252630011902917, RECONS: 0.0028958098135060733, DISTANCE: 0.3294531504313151
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5999, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4043, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8355, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6015, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [9/25] Loss: 0.00318482406437397, RECONS: 0.002853641053661704, DISTANCE: 0.3311829686164856
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3814, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [10/25] Loss: 0.0031996374018490314, RECONS: 0.0028658130163834853, DISTANCE: 0.33382434194738214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3508, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8452, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [11/25] Loss: 0.003196477424353361, RECONS: 0.002863373161138346, DISTANCE: 0.3331042230129242
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3753, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [12/25] Loss: 0.0032051173934283163, RECONS: 0.0028740752380914413, DISTANCE: 0.33104211550492507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3777, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8490, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [13/25] Loss: 0.0032078909654436366, RECONS: 0.0028779609794063227, DISTANCE: 0.32992993933813913
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3677, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [14/25] Loss: 0.0032033909888317187, RECONS: 0.002872005586201946, DISTANCE: 0.33138536612192787
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8378, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [15/25] Loss: 0.003187676382367499, RECONS: 0.00285618552879896, DISTANCE: 0.33149082213640213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5944, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3987, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8491, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [16/25] Loss: 0.0032352731590542722, RECONS: 0.0029047524474342078, DISTANCE: 0.33052067896899057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3949, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [17/25] Loss: 0.003218362069067856, RECONS: 0.00288675111045854, DISTANCE: 0.33161092466778225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8322, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [18/25] Loss: 0.0032149715054976312, RECONS: 0.002882368960662892, DISTANCE: 0.33260250718970047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4263, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8304, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5948, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [19/25] Loss: 0.0032153693959116937, RECONS: 0.0028843530220910908, DISTANCE: 0.33101633191108704
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5994, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4494, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8182, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [20/25] Loss: 0.0032250941176677032, RECONS: 0.002895129999766747, DISTANCE: 0.32996407576969694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4790, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8222, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5934, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [21/25] Loss: 0.0032471231481229716, RECONS: 0.002916801699691198, DISTANCE: 0.3303214040669528
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6073, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [22/25] Loss: 0.0032562430563342314, RECONS: 0.002926663465231009, DISTANCE: 0.32957954510398535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4485, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6073, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [23/25] Loss: 0.0032670135454585156, RECONS: 0.002937591624989485, DISTANCE: 0.32942187786102295
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3333, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6216, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3644, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[276/300] [24/25] Loss: 0.0033003669045865536, RECONS: 0.0029535457864403726, DISTANCE: 0.3468210792541504
Test[276/300] [0/2] Loss: 0.0052435253746807575, RECONS: 0.0045493487268686295, DISTANCE: 0.6941766738891602
Test[276/300] [1/2] Loss: 0.0051570122595876455, RECONS: 0.004012649646028876, DISTANCE: 1.1443626880645752
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8675, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [0/25] Loss: 0.0038118641823530197, RECONS: 0.003466432448476553, DISTANCE: 0.34543168544769287
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3782, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8573, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6189, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [1/25] Loss: 0.003734203171916306, RECONS: 0.003400748362764716, DISTANCE: 0.33345478773117065
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3382, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [2/25] Loss: 0.003515175155674418, RECONS: 0.0031631061186393103, DISTANCE: 0.35206906000773114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3634, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [3/25] Loss: 0.003396681509912014, RECONS: 0.0030568529618903995, DISTANCE: 0.33982858061790466
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6176, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3727, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8284, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [4/25] Loss: 0.0033877337817102672, RECONS: 0.0030436326283961534, DISTANCE: 0.3441011905670166
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3711, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8301, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [5/25] Loss: 0.003535106428898871, RECONS: 0.0031918065700059137, DISTANCE: 0.3432999054590861
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3693, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8376, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [6/25] Loss: 0.003483689024246165, RECONS: 0.00314372601652784, DISTANCE: 0.33996306146894184
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3785, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8494, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [7/25] Loss: 0.0034228087461087853, RECONS: 0.0030840264807920903, DISTANCE: 0.33878232538700104
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4106, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [8/25] Loss: 0.0034053445172806582, RECONS: 0.0030674779942880073, DISTANCE: 0.3378665844599406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3951, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [9/25] Loss: 0.0033728940645232795, RECONS: 0.003037239285185933, DISTANCE: 0.33565484285354613
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4346, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [10/25] Loss: 0.0033574006096883254, RECONS: 0.003020547034049576, DISTANCE: 0.3368536342274059
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4101, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8531, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [11/25] Loss: 0.0033885896943199136, RECONS: 0.0030534095518911877, DISTANCE: 0.33518020311991376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4317, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [12/25] Loss: 0.003404371332950317, RECONS: 0.00307037910589805, DISTANCE: 0.33399227949289173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3867, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [13/25] Loss: 0.0033698350224377854, RECONS: 0.0030381542830062763, DISTANCE: 0.33168078320366995
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4493, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8307, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [14/25] Loss: 0.003378862158084909, RECONS: 0.0030470201124747592, DISTANCE: 0.33184208869934084
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4086, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8309, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5998, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [15/25] Loss: 0.00337134265282657, RECONS: 0.0030374877096619457, DISTANCE: 0.3338549882173538
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4131, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8323, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [16/25] Loss: 0.0033662057043436695, RECONS: 0.0030346121775972493, DISTANCE: 0.3315935695872587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3880, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8290, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [17/25] Loss: 0.003325390215549204, RECONS: 0.0029939184120545783, DISTANCE: 0.33147184054056805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3725, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8372, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [18/25] Loss: 0.0033259811737623656, RECONS: 0.002995314248102276, DISTANCE: 0.3306669624228227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8294, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [19/25] Loss: 0.0033450552728027105, RECONS: 0.0030153879662975667, DISTANCE: 0.329667341709137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3354, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8367, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [20/25] Loss: 0.003315004231851725, RECONS: 0.002985887417924546, DISTANCE: 0.3291168439955938
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3382, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8522, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6072, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [21/25] Loss: 0.003306305014782331, RECONS: 0.0029772333694960585, DISTANCE: 0.3290716680613431
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3804, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [22/25] Loss: 0.003310879763296765, RECONS: 0.002982538608510209, DISTANCE: 0.3283411782720815
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3624, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [23/25] Loss: 0.00330700854343983, RECONS: 0.002979137731017545, DISTANCE: 0.32787083089351654
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6231, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3762, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8313, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[277/300] [24/25] Loss: 0.0033479805011302232, RECONS: 0.0030061761569231747, DISTANCE: 0.3418043565750122
Test[277/300] [0/2] Loss: 0.004316436126828194, RECONS: 0.0036757769994437695, DISTANCE: 0.6406588554382324
Test[277/300] [1/2] Loss: 0.004617784405127168, RECONS: 0.003560021985322237, DISTANCE: 1.057762324810028
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3979, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [0/25] Loss: 0.0032819584012031555, RECONS: 0.002986862091347575, DISTANCE: 0.29509639739990234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4096, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [1/25] Loss: 0.003342377836816013, RECONS: 0.003042359952814877, DISTANCE: 0.30001795291900635
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5905, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [2/25] Loss: 0.0033577531576156616, RECONS: 0.003044108860194683, DISTANCE: 0.3136443297068278
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8337, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5993, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [3/25] Loss: 0.003311868116725236, RECONS: 0.002993488567881286, DISTANCE: 0.31837958097457886
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4097, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8299, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [4/25] Loss: 0.003350035985931754, RECONS: 0.0030309660360217094, DISTANCE: 0.3190699577331543
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4134, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8265, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5967, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [5/25] Loss: 0.0034067453428482017, RECONS: 0.0030887092386061945, DISTANCE: 0.3180360992749532
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4061, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8335, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [6/25] Loss: 0.0033796814802501884, RECONS: 0.0030614774607654128, DISTANCE: 0.3182040112359183
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3744, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8404, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [7/25] Loss: 0.003362111310707405, RECONS: 0.0030452082282863557, DISTANCE: 0.31690308451652527
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3939, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8403, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6208, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [8/25] Loss: 0.00337562484977146, RECONS: 0.0030568395741283894, DISTANCE: 0.3187852700551351
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3759, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8432, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6225, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [9/25] Loss: 0.003374106646515429, RECONS: 0.0030562761472538113, DISTANCE: 0.317830491065979
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4250, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8475, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [10/25] Loss: 0.00347777123732323, RECONS: 0.0031570982907644725, DISTANCE: 0.3206729238683527
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6135, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4444, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8587, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [11/25] Loss: 0.0034613058669492602, RECONS: 0.003138765440477679, DISTANCE: 0.32254040241241455
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6020, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4028, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8609, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [12/25] Loss: 0.0034423771744164135, RECONS: 0.00312138837762177, DISTANCE: 0.3209887651296762
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4648, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8283, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5904, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [13/25] Loss: 0.0034705470482419643, RECONS: 0.0031495572101058705, DISTANCE: 0.3209898131234305
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8348, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [14/25] Loss: 0.003440602868795395, RECONS: 0.003119061281904578, DISTANCE: 0.3215415636698405
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5908, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4459, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [15/25] Loss: 0.003461436412180774, RECONS: 0.0031387602939503267, DISTANCE: 0.3226760923862457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4177, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8253, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [16/25] Loss: 0.00342851023956695, RECONS: 0.00310676490121028, DISTANCE: 0.3217453115126666
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3971, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8336, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [17/25] Loss: 0.0034208750714444453, RECONS: 0.0030990198720246553, DISTANCE: 0.32185517417060006
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4166, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8272, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [18/25] Loss: 0.003408377965618121, RECONS: 0.0030872014620782515, DISTANCE: 0.32117648501145213
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6197, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8313, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [19/25] Loss: 0.0033865909324958922, RECONS: 0.0030643634032458066, DISTANCE: 0.32222750782966614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5924, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3537, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [20/25] Loss: 0.0034947230791052184, RECONS: 0.0031710563537975154, DISTANCE: 0.323666703133356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3727, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6134, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [21/25] Loss: 0.0034684883007271724, RECONS: 0.003145995348776606, DISTANCE: 0.322492930022153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [22/25] Loss: 0.0034390384452822414, RECONS: 0.003116635879015793, DISTANCE: 0.32240254464356793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3745, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8330, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [23/25] Loss: 0.003422389544236163, RECONS: 0.003099674543288226, DISTANCE: 0.32271498441696167
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6272, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8319, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[278/300] [24/25] Loss: 0.003448375165462494, RECONS: 0.0031121373828500508, DISTANCE: 0.33623777389526366
Test[278/300] [0/2] Loss: 0.004249806981533766, RECONS: 0.0035817741882056, DISTANCE: 0.6680327653884888
Test[278/300] [1/2] Loss: 0.004278474487364292, RECONS: 0.0032400365453213453, DISTANCE: 1.0384379625320435
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3429, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8315, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [0/25] Loss: 0.002694526221603155, RECONS: 0.0024154249113053083, DISTANCE: 0.2791013717651367
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6307, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [1/25] Loss: 0.003032127395272255, RECONS: 0.0027302110102027655, DISTANCE: 0.3019164204597473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6038, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6293, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [2/25] Loss: 0.0032516794744879007, RECONS: 0.0029508615067849555, DISTANCE: 0.3008180061976115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5997, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3447, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8545, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6260, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [3/25] Loss: 0.0036610114038921893, RECONS: 0.0033476631506346166, DISTANCE: 0.31334832310676575
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3746, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [4/25] Loss: 0.003540804795920849, RECONS: 0.0032224580179899933, DISTANCE: 0.31834681034088136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3550, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8285, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [5/25] Loss: 0.003605277587970098, RECONS: 0.003291816528265675, DISTANCE: 0.3134610851605733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6046, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3798, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8313, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [6/25] Loss: 0.0036340054856347187, RECONS: 0.0033212291143302408, DISTANCE: 0.31277637822287424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4467, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8138, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5938, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [7/25] Loss: 0.003595838643377647, RECONS: 0.0032802394416648895, DISTANCE: 0.3155992180109024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4448, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [8/25] Loss: 0.0036583505829589236, RECONS: 0.0033410332527839476, DISTANCE: 0.3173173401090834
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4619, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [9/25] Loss: 0.003646558057516813, RECONS: 0.003332637180574238, DISTANCE: 0.3139208912849426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4561, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [10/25] Loss: 0.0036362621044232087, RECONS: 0.003322721966965632, DISTANCE: 0.3135401552373713
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4221, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8511, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [11/25] Loss: 0.0036361541909476123, RECONS: 0.003321655987141033, DISTANCE: 0.31449822584788006
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4092, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8585, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [12/25] Loss: 0.003612263952023708, RECONS: 0.0032964393568153563, DISTANCE: 0.315824609536391
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5937, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3721, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8673, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [13/25] Loss: 0.003659187217376062, RECONS: 0.0033398547509152976, DISTANCE: 0.3193324889455523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3906, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [14/25] Loss: 0.003623523407926162, RECONS: 0.0033057951523611942, DISTANCE: 0.31772827307383217
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3978, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8333, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [15/25] Loss: 0.0036024795554112643, RECONS: 0.0032849860872374848, DISTANCE: 0.3174934759736061
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8054, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6002, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [16/25] Loss: 0.003578903482240789, RECONS: 0.0032599515363793165, DISTANCE: 0.31895195035373464
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8074, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5962, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [17/25] Loss: 0.0035589885018352005, RECONS: 0.003239509533159435, DISTANCE: 0.31947896877924603
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4307, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8199, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [18/25] Loss: 0.003598884703885568, RECONS: 0.0032790519762784243, DISTANCE: 0.3198327202545969
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4093, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8320, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [19/25] Loss: 0.0035787438275292514, RECONS: 0.0032590904855169358, DISTANCE: 0.3196533381938934
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4137, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [20/25] Loss: 0.0035587215263928685, RECONS: 0.0032388983915249505, DISTANCE: 0.3198231345131284
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4168, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8755, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6158, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [21/25] Loss: 0.003562532111325047, RECONS: 0.00324061665345322, DISTANCE: 0.32191545313054865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5933, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4133, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8748, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [22/25] Loss: 0.003578865131282288, RECONS: 0.003257777602614268, DISTANCE: 0.3210875262384829
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4304, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8652, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [23/25] Loss: 0.003557979090449711, RECONS: 0.0032368339210127792, DISTANCE: 0.321145161986351
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4393, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[279/300] [24/25] Loss: 0.003572399616241455, RECONS: 0.0032354341726750138, DISTANCE: 0.3369654321670532
Test[279/300] [0/2] Loss: 0.004190497566014528, RECONS: 0.0034419435542076826, DISTANCE: 0.7485541105270386
Test[279/300] [1/2] Loss: 0.004459906602278352, RECONS: 0.0032444613752886653, DISTANCE: 1.2154452204704285
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8312, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5947, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [0/25] Loss: 0.002955275820568204, RECONS: 0.0026371951680630445, DISTANCE: 0.3180806636810303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4348, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8183, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5918, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [1/25] Loss: 0.0033501412253826857, RECONS: 0.0030393569031730294, DISTANCE: 0.31078433990478516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4494, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8009, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5901, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [2/25] Loss: 0.0033977398027976355, RECONS: 0.003084896986062328, DISTANCE: 0.31284284591674805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4325, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8285, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5988, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [3/25] Loss: 0.0033611361286602914, RECONS: 0.0030496491817757487, DISTANCE: 0.31148695945739746
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4251, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8227, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [4/25] Loss: 0.003297129087150097, RECONS: 0.002971812756732106, DISTANCE: 0.325316333770752
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4025, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [5/25] Loss: 0.003180809823485712, RECONS: 0.002855773394306501, DISTANCE: 0.3250364462534587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6173, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8515, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [6/25] Loss: 0.003121123482872333, RECONS: 0.002796534382339035, DISTANCE: 0.3245891162327358
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3644, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8759, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [7/25] Loss: 0.003164533234667033, RECONS: 0.0028340919234324247, DISTANCE: 0.33044131100177765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3322, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8530, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [8/25] Loss: 0.0031421217653486463, RECONS: 0.002806306014665299, DISTANCE: 0.33581576082441544
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3641, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8519, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [9/25] Loss: 0.003186825127340853, RECONS: 0.0028490719618275762, DISTANCE: 0.33775317668914795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3686, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8490, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6157, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [10/25] Loss: 0.0031868151219731026, RECONS: 0.002851130800660361, DISTANCE: 0.3356843319806186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8337, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6123, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [11/25] Loss: 0.003189320482003192, RECONS: 0.0028574689446638026, DISTANCE: 0.3318515419960022
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4212, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8241, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [12/25] Loss: 0.0032424860848830296, RECONS: 0.0029101383943970385, DISTANCE: 0.33234769564408523
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4399, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8329, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [13/25] Loss: 0.00324146358096706, RECONS: 0.002912996586279145, DISTANCE: 0.3284669944218227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4303, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8303, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6024, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [14/25] Loss: 0.0032194835289071004, RECONS: 0.002891055727377534, DISTANCE: 0.3284278074900309
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4140, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6001, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [15/25] Loss: 0.0032259144354611635, RECONS: 0.0028983522061025724, DISTANCE: 0.32756222784519196
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4073, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8332, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5985, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [16/25] Loss: 0.0032459343783557415, RECONS: 0.0029190369772122185, DISTANCE: 0.32689739676082835
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4089, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [17/25] Loss: 0.003265692438516352, RECONS: 0.00294014827037851, DISTANCE: 0.32554416524039376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4162, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8487, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [18/25] Loss: 0.0032725959501572347, RECONS: 0.002946654616511966, DISTANCE: 0.3259413305081819
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3917, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [19/25] Loss: 0.0032583649968728422, RECONS: 0.0029318082379177213, DISTANCE: 0.3265567600727081
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4164, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [20/25] Loss: 0.0032601295526893366, RECONS: 0.0029351444737542244, DISTANCE: 0.32498507840292795
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4192, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6104, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [21/25] Loss: 0.0032566721254790373, RECONS: 0.0029325617202134295, DISTANCE: 0.32411040501161054
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4118, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6122, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4061, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [22/25] Loss: 0.003264727202527549, RECONS: 0.00293820113470049, DISTANCE: 0.3265260665313057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6092, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4035, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [23/25] Loss: 0.0032665427424944937, RECONS: 0.0029400580388028175, DISTANCE: 0.3264847050110499
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3597, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8429, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[280/300] [24/25] Loss: 0.003278482612222433, RECONS: 0.0029374299570918082, DISTANCE: 0.3410526514053345
Test[280/300] [0/2] Loss: 0.004049655050039291, RECONS: 0.003292399225756526, DISTANCE: 0.757256031036377
Test[280/300] [1/2] Loss: 0.00409263139590621, RECONS: 0.003057440393604338, DISTANCE: 1.0351910591125488
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3698, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [0/25] Loss: 0.002905289176851511, RECONS: 0.0025856296997517347, DISTANCE: 0.3196594715118408
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3837, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [1/25] Loss: 0.0031391222728416324, RECONS: 0.002799791982397437, DISTANCE: 0.3393303155899048
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6138, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [2/25] Loss: 0.0032611764036118984, RECONS: 0.0029154712489495673, DISTANCE: 0.34570515155792236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5955, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3557, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8435, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [3/25] Loss: 0.0032970402389764786, RECONS: 0.002953216608148068, DISTANCE: 0.3438236117362976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3908, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8218, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [4/25] Loss: 0.003281777445226908, RECONS: 0.002944994391873479, DISTANCE: 0.33678302764892576
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4323, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8199, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5981, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [5/25] Loss: 0.0032389068510383368, RECONS: 0.0029074913278842964, DISTANCE: 0.33141549428304035
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8147, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [6/25] Loss: 0.003305925089599831, RECONS: 0.0029704984543578966, DISTANCE: 0.3354266030447824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4364, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8271, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [7/25] Loss: 0.0033180138270836323, RECONS: 0.0029838281916454434, DISTANCE: 0.3341856151819229
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4461, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8345, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [8/25] Loss: 0.0033332601758754915, RECONS: 0.003000849081824223, DISTANCE: 0.332411077287462
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6070, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4313, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8626, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6114, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [9/25] Loss: 0.0033000163035467266, RECONS: 0.002970478613860905, DISTANCE: 0.32953767776489257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4243, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [10/25] Loss: 0.0033369681755588813, RECONS: 0.0030070655259557748, DISTANCE: 0.32990264892578125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8574, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [11/25] Loss: 0.0033392596524208784, RECONS: 0.0030091840502185128, DISTANCE: 0.33007559180259705
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [12/25] Loss: 0.003319623450247141, RECONS: 0.002991286267598088, DISTANCE: 0.3283371650255643
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3873, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8534, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [13/25] Loss: 0.00331630275052573, RECONS: 0.002990414039231837, DISTANCE: 0.32588870184762136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3473, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8166, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6029, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [14/25] Loss: 0.0032886470202356578, RECONS: 0.0029627250352253515, DISTANCE: 0.3259219725926717
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3500, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8170, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [15/25] Loss: 0.003287892817752436, RECONS: 0.0029599434637930244, DISTANCE: 0.3279493451118469
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3893, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8284, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [16/25] Loss: 0.0033050559543292314, RECONS: 0.0029787111287827, DISTANCE: 0.3263448196298936
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3807, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8271, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6151, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [17/25] Loss: 0.0033212810521945357, RECONS: 0.0029945822639597785, DISTANCE: 0.32669878668255276
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6190, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [18/25] Loss: 0.0033333636452688984, RECONS: 0.0030069915871871146, DISTANCE: 0.3263720524938483
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4062, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8396, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [19/25] Loss: 0.0033148893853649497, RECONS: 0.002988254791125655, DISTANCE: 0.3266345918178558
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4306, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [20/25] Loss: 0.003295253962278366, RECONS: 0.002969346485943312, DISTANCE: 0.3259074744724092
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4479, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [21/25] Loss: 0.0032938536870377984, RECONS: 0.002968437144194137, DISTANCE: 0.3254165378483859
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6003, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4223, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8508, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [22/25] Loss: 0.0032908341482929563, RECONS: 0.002964836636396206, DISTANCE: 0.32599750290746277
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6208, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4209, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [23/25] Loss: 0.003320886811707169, RECONS: 0.0029937061093126736, DISTANCE: 0.3271806885798772
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.6186, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6129, device='cuda:0', grad_fn=<MeanBackward0>)
Train[281/300] [24/25] Loss: 0.003362320065498352, RECONS: 0.003021666156128049, DISTANCE: 0.3406539011001587
Test[281/300] [0/2] Loss: 0.0045375213958323, RECONS: 0.003621108829975128, DISTANCE: 0.916412353515625
Test[281/300] [1/2] Loss: 0.004341742722317576, RECONS: 0.0032353022834286094, DISTANCE: 1.1064403057098389
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8741, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6226, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [0/25] Loss: 0.003611745312809944, RECONS: 0.0032985727302730083, DISTANCE: 0.31317245960235596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6234, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [1/25] Loss: 0.0036140307784080505, RECONS: 0.003306990023702383, DISTANCE: 0.30704063177108765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6206, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [2/25] Loss: 0.0032962880407770476, RECONS: 0.0029795588925480843, DISTANCE: 0.31672902901967365
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3824, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [3/25] Loss: 0.003590951790101826, RECONS: 0.0032696747221052647, DISTANCE: 0.321276992559433
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3806, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8310, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [4/25] Loss: 0.003596508456394076, RECONS: 0.003277460392564535, DISTANCE: 0.31904799938201905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3841, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [5/25] Loss: 0.0034714026066164174, RECONS: 0.0031533997195462384, DISTANCE: 0.3180028398831685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8334, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5978, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [6/25] Loss: 0.0033961313643625806, RECONS: 0.003076885926670262, DISTANCE: 0.31924538952963694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5984, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8366, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5974, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [7/25] Loss: 0.003372587583726272, RECONS: 0.003051297797355801, DISTANCE: 0.3212897330522537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4427, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8257, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [8/25] Loss: 0.003444189852517512, RECONS: 0.0031250299523688024, DISTANCE: 0.3191598388883803
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4462, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8336, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [9/25] Loss: 0.0034048664616420864, RECONS: 0.003088653110899031, DISTANCE: 0.31621328592300413
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4229, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8421, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [10/25] Loss: 0.0034174931193278594, RECONS: 0.0031037980013272977, DISTANCE: 0.3136950514533303
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6014, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6261, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [11/25] Loss: 0.003441676749692609, RECONS: 0.003128450169848899, DISTANCE: 0.31322651108105976
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4057, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8592, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6221, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [12/25] Loss: 0.003409089072822378, RECONS: 0.003093242931824464, DISTANCE: 0.3158460855484009
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6156, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4059, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6172, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [13/25] Loss: 0.003382094786502421, RECONS: 0.0030639927801010864, DISTANCE: 0.3181019595691136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [14/25] Loss: 0.0033987988717854023, RECONS: 0.0030766322122265893, DISTANCE: 0.3221666177113851
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3969, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [15/25] Loss: 0.0033873020292958245, RECONS: 0.0030665829981444404, DISTANCE: 0.32071898877620697
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3847, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8303, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [16/25] Loss: 0.0033525475985644493, RECONS: 0.0030327161691863745, DISTANCE: 0.31983138533199534
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5931, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4083, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8244, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6006, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [17/25] Loss: 0.0034022542984328335, RECONS: 0.0030828225038324795, DISTANCE: 0.31943174865510726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4188, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8108, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [18/25] Loss: 0.0033996475762442537, RECONS: 0.003080651470410981, DISTANCE: 0.3189960655413176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [19/25] Loss: 0.0033983161905780435, RECONS: 0.0030765843112021685, DISTANCE: 0.32173184156417844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4231, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8395, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6044, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [20/25] Loss: 0.0034027726699908576, RECONS: 0.0030813318056364856, DISTANCE: 0.321440821602231
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5987, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3715, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8324, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [21/25] Loss: 0.0033749752275815063, RECONS: 0.003053378366695886, DISTANCE: 0.3215968229553916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4240, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [22/25] Loss: 0.0033768455032259226, RECONS: 0.00305540816170042, DISTANCE: 0.3214373018430627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4175, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8645, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6052, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [23/25] Loss: 0.003402337150570626, RECONS: 0.0030805239318093904, DISTANCE: 0.3218131711085637
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5958, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3532, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8717, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[282/300] [24/25] Loss: 0.003468678193166852, RECONS: 0.003130923332646489, DISTANCE: 0.3377548122406006
Test[282/300] [0/2] Loss: 0.004439292475581169, RECONS: 0.0035882217343896627, DISTANCE: 0.8510708808898926
Test[282/300] [1/2] Loss: 0.00455250428058207, RECONS: 0.0033424582798033953, DISTANCE: 1.2100460529327393
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8554, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [0/25] Loss: 0.0034928573295474052, RECONS: 0.0031177066266536713, DISTANCE: 0.3751506805419922
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6195, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3771, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [1/25] Loss: 0.0031578511698171496, RECONS: 0.0027938024140894413, DISTANCE: 0.36404871940612793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6179, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [2/25] Loss: 0.003203280813371142, RECONS: 0.0028536809453119836, DISTANCE: 0.34959983825683594
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3874, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8260, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [3/25] Loss: 0.0033198141027241945, RECONS: 0.0029777871677652, DISTANCE: 0.34202688932418823
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8239, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [4/25] Loss: 0.003362374706193805, RECONS: 0.0030243287328630686, DISTANCE: 0.33804593086242674
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4053, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8215, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [5/25] Loss: 0.0034080770953247943, RECONS: 0.0030716338272516928, DISTANCE: 0.3364432454109192
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6281, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3513, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8328, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6010, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [6/25] Loss: 0.003489951669637646, RECONS: 0.0031513413081743886, DISTANCE: 0.3386103596006121
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4344, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6061, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [7/25] Loss: 0.0034146962861996144, RECONS: 0.0030785731796640903, DISTANCE: 0.3361230939626694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6096, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4188, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [8/25] Loss: 0.0034090946169777047, RECONS: 0.0030710872831857866, DISTANCE: 0.3380073308944702
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8647, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [9/25] Loss: 0.0033996263751760124, RECONS: 0.0030618028016760946, DISTANCE: 0.3378235697746277
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8696, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6118, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [10/25] Loss: 0.003389228537509387, RECONS: 0.003051039424132217, DISTANCE: 0.338189114223827
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4010, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8440, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [11/25] Loss: 0.003392451753218969, RECONS: 0.003053105630291005, DISTANCE: 0.33934613068898517
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5960, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [12/25] Loss: 0.0033779154674938093, RECONS: 0.0030407957875957857, DISTANCE: 0.33711968935452974
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5961, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4220, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8175, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5956, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [13/25] Loss: 0.0033361142434711966, RECONS: 0.002999784325116447, DISTANCE: 0.3363299284662519
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4541, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8253, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [14/25] Loss: 0.003340653982013464, RECONS: 0.0030064018132785956, DISTANCE: 0.33425217469533286
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4516, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8306, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5945, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [15/25] Loss: 0.003343609714647755, RECONS: 0.003010694112163037, DISTANCE: 0.33291561156511307
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4607, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8273, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [16/25] Loss: 0.003336307674865512, RECONS: 0.0030026949175140437, DISTANCE: 0.3336127715952256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4102, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6082, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [17/25] Loss: 0.003309796939397024, RECONS: 0.0029761973354551527, DISTANCE: 0.33359961377249825
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4151, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [18/25] Loss: 0.0032899126557535247, RECONS: 0.0029552036185601822, DISTANCE: 0.3347090482711792
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3956, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [19/25] Loss: 0.0032923106336966157, RECONS: 0.002957947726827115, DISTANCE: 0.33436291217803954
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8546, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [20/25] Loss: 0.0033049604057201316, RECONS: 0.002972053885016413, DISTANCE: 0.3329065243403117
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3543, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8629, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6213, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [21/25] Loss: 0.0032858478582718158, RECONS: 0.002953540184535086, DISTANCE: 0.33230768008665607
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8431, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [22/25] Loss: 0.0033172196506158166, RECONS: 0.002984972255628394, DISTANCE: 0.33224739199099335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6041, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3745, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8350, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [23/25] Loss: 0.0033032331945529827, RECONS: 0.002969825475399072, DISTANCE: 0.3334077149629593
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6051, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4021, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8111, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5946, device='cuda:0', grad_fn=<MeanBackward0>)
Train[283/300] [24/25] Loss: 0.0033182183280587195, RECONS: 0.002966973436996341, DISTANCE: 0.3512448883056641
Test[283/300] [0/2] Loss: 0.004130816087126732, RECONS: 0.0033415425568819046, DISTANCE: 0.7892736196517944
Test[283/300] [1/2] Loss: 0.004288870375603437, RECONS: 0.003190860152244568, DISTANCE: 1.098010241985321
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4175, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8273, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [0/25] Loss: 0.003944548312574625, RECONS: 0.0036319680511951447, DISTANCE: 0.3125801086425781
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4223, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8370, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6033, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [1/25] Loss: 0.003468660288490355, RECONS: 0.003158380277454853, DISTANCE: 0.3102799654006958
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [2/25] Loss: 0.0034419740550220013, RECONS: 0.003128381911665201, DISTANCE: 0.3135921160380046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6056, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4267, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [3/25] Loss: 0.003422100970055908, RECONS: 0.0031043734634295106, DISTANCE: 0.3177275061607361
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4231, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8492, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6188, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [4/25] Loss: 0.0033101484645158053, RECONS: 0.0029963921755552293, DISTANCE: 0.3137562990188599
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [5/25] Loss: 0.0032373598078265786, RECONS: 0.0029240548222636185, DISTANCE: 0.3133050004641215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3931, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [6/25] Loss: 0.0033096373413822482, RECONS: 0.00298927168894027, DISTANCE: 0.32036565031324116
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3810, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [7/25] Loss: 0.0033004114811774343, RECONS: 0.002977444528369233, DISTANCE: 0.32296694815158844
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3947, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8390, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [8/25] Loss: 0.0033125298925571972, RECONS: 0.0029895752150979307, DISTANCE: 0.3229546679390801
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3713, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8267, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [9/25] Loss: 0.003259550384245813, RECONS: 0.0029304706025868655, DISTANCE: 0.32907977104187014
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4129, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8151, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [10/25] Loss: 0.003271490547128699, RECONS: 0.0029443562750450587, DISTANCE: 0.3271342624317516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4355, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8191, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [11/25] Loss: 0.003268308956952145, RECONS: 0.0029408876046848795, DISTANCE: 0.3274213473002116
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6270, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4375, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8222, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [12/25] Loss: 0.0033148185779842045, RECONS: 0.002985890650262053, DISTANCE: 0.32892792041485125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4087, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [13/25] Loss: 0.0033836957799004658, RECONS: 0.0030570002771647914, DISTANCE: 0.32669551031930105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6165, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [14/25] Loss: 0.003368611742431919, RECONS: 0.0030405009941508374, DISTANCE: 0.32811075846354165
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3941, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [15/25] Loss: 0.003406391668249853, RECONS: 0.0030780603556195274, DISTANCE: 0.32833132147789
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6008, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4225, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8562, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [16/25] Loss: 0.0033887138398473755, RECONS: 0.003061485326136736, DISTANCE: 0.32722852510564465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4286, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8434, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6018, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [17/25] Loss: 0.0033886298770084977, RECONS: 0.003060836590723031, DISTANCE: 0.32779330015182495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4293, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8379, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6011, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [18/25] Loss: 0.0033659221310364572, RECONS: 0.003039472430062137, DISTANCE: 0.32644971420890406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6126, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4080, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8285, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [19/25] Loss: 0.0033669005963020025, RECONS: 0.003041344799567014, DISTANCE: 0.32555581331253053
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4145, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8285, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [20/25] Loss: 0.0033409647820960907, RECONS: 0.0030170139479672627, DISTANCE: 0.3239508469899495
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3953, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8236, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [21/25] Loss: 0.0033445367695425043, RECONS: 0.003021254870955917, DISTANCE: 0.32328190586783667
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8278, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [22/25] Loss: 0.0033297243467329636, RECONS: 0.0030053524280209904, DISTANCE: 0.3243719287540602
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5938, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3809, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8397, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [23/25] Loss: 0.0033583966724108905, RECONS: 0.0030346955851806947, DISTANCE: 0.3237010935942332
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3468, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8227, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6012, device='cuda:0', grad_fn=<MeanBackward0>)
Train[284/300] [24/25] Loss: 0.0033764183521270753, RECONS: 0.003036951245740056, DISTANCE: 0.3394671106338501
Test[284/300] [0/2] Loss: 0.004155483562499285, RECONS: 0.0033849903848022223, DISTANCE: 0.7704931497573853
Test[284/300] [1/2] Loss: 0.004042906919494271, RECONS: 0.0030168069060891867, DISTANCE: 1.026099979877472
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8240, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [0/25] Loss: 0.0030121118761599064, RECONS: 0.002685041166841984, DISTANCE: 0.3270707130432129
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4160, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8274, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6043, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [1/25] Loss: 0.0031731926137581468, RECONS: 0.0028603242244571447, DISTANCE: 0.3128683567047119
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4505, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8383, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6090, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [2/25] Loss: 0.0032049467942366996, RECONS: 0.002888695647319158, DISTANCE: 0.31625111897786456
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4642, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8526, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [3/25] Loss: 0.0032360992627218366, RECONS: 0.0029207984916865826, DISTANCE: 0.31530076265335083
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8451, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6086, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [4/25] Loss: 0.0033053406048566105, RECONS: 0.0029918564017862082, DISTANCE: 0.31348419189453125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4860, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5975, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [5/25] Loss: 0.003447188180871308, RECONS: 0.003125443782967826, DISTANCE: 0.3217443625132243
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6184, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4671, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8537, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5995, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [6/25] Loss: 0.003432704069252525, RECONS: 0.003114876337349415, DISTANCE: 0.3178277015686035
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4431, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8551, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [7/25] Loss: 0.003371543309185654, RECONS: 0.003056021058000624, DISTANCE: 0.315522238612175
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4162, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8642, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6197, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [8/25] Loss: 0.0033476834392382037, RECONS: 0.003035118855122063, DISTANCE: 0.31256457169850665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3927, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8516, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6237, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [9/25] Loss: 0.0033940210239961745, RECONS: 0.0030810249038040636, DISTANCE: 0.31299610137939454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8442, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [10/25] Loss: 0.003413314465433359, RECONS: 0.0030985886061733418, DISTANCE: 0.3147258325056596
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3649, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8236, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [11/25] Loss: 0.0034390823372329273, RECONS: 0.0031226597687539956, DISTANCE: 0.3164225419362386
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8163, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6046, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [12/25] Loss: 0.003374613642406005, RECONS: 0.003059079548200736, DISTANCE: 0.31553406898791975
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3320, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8244, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [13/25] Loss: 0.0033516607280554517, RECONS: 0.0030392061785927843, DISTANCE: 0.3124545216560364
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3505, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8252, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [14/25] Loss: 0.0033130401745438574, RECONS: 0.0030009161060055097, DISTANCE: 0.31212403774261477
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3693, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [15/25] Loss: 0.0032798620959511027, RECONS: 0.002967188018374145, DISTANCE: 0.31267405301332474
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3645, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [16/25] Loss: 0.0032580031410736196, RECONS: 0.002943893497371498, DISTANCE: 0.31410961992600384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6160, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [17/25] Loss: 0.003254233510233462, RECONS: 0.002942055218025214, DISTANCE: 0.31217826737297905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5949, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4103, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8660, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [18/25] Loss: 0.003299090974523049, RECONS: 0.0029863796662539244, DISTANCE: 0.3127112765061228
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4223, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [19/25] Loss: 0.003292278037406504, RECONS: 0.002981547778472304, DISTANCE: 0.31073022484779356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6000, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4336, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8273, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [20/25] Loss: 0.0032898534776731616, RECONS: 0.0029783080598073347, DISTANCE: 0.31154538903917584
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6174, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8250, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [21/25] Loss: 0.003307771096429364, RECONS: 0.002994897606020624, DISTANCE: 0.3128734664483504
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4708, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8362, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5992, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [22/25] Loss: 0.0033173204055460897, RECONS: 0.0030019409630609594, DISTANCE: 0.3153794174608977
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5913, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6064, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [23/25] Loss: 0.0033359230825832733, RECONS: 0.0030204870854504406, DISTANCE: 0.3154359757900238
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3961, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6219, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3443, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8395, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[285/300] [24/25] Loss: 0.003352920264005661, RECONS: 0.0030242221802473067, DISTANCE: 0.32869806289672854
Test[285/300] [0/2] Loss: 0.004245955031365156, RECONS: 0.0034600067883729935, DISTANCE: 0.7859481573104858
Test[285/300] [1/2] Loss: 0.004103642888367176, RECONS: 0.0030576230492442846, DISTANCE: 1.0460198521614075
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8275, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [0/25] Loss: 0.002870021853595972, RECONS: 0.0025561684742569923, DISTANCE: 0.31385326385498047
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5876, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3691, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [1/25] Loss: 0.003926810808479786, RECONS: 0.0035795511212199926, DISTANCE: 0.347259521484375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6212, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3290, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8242, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [2/25] Loss: 0.0036583015074332557, RECONS: 0.003321305615827441, DISTANCE: 0.33699576059977215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8253, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [3/25] Loss: 0.00357434363104403, RECONS: 0.0032420025672763586, DISTANCE: 0.3323409855365753
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3862, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8409, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6092, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [4/25] Loss: 0.0034690404310822485, RECONS: 0.0031326066236943007, DISTANCE: 0.3364337205886841
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3390, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8287, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6143, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [5/25] Loss: 0.0033707006368786097, RECONS: 0.0030340212397277355, DISTANCE: 0.3366793394088745
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8329, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6166, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [6/25] Loss: 0.003277637330549104, RECONS: 0.00294360305581774, DISTANCE: 0.3340342044830322
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6150, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [7/25] Loss: 0.003261902485974133, RECONS: 0.002927965542767197, DISTANCE: 0.3339368849992752
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3431, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8314, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6094, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [8/25] Loss: 0.003215459304758244, RECONS: 0.0028818530134028858, DISTANCE: 0.3336062431335449
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6030, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3808, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8343, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [9/25] Loss: 0.0031671532429754733, RECONS: 0.0028363056946545838, DISTANCE: 0.33084750175476074
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3938, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [10/25] Loss: 0.0031852198510684752, RECONS: 0.0028528381477702747, DISTANCE: 0.33238166028803046
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4381, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8421, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [11/25] Loss: 0.00318712533529227, RECONS: 0.0028547278294960656, DISTANCE: 0.3323974609375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4110, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [12/25] Loss: 0.0031708714444763386, RECONS: 0.002840141550852702, DISTANCE: 0.3307298513559195
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [13/25] Loss: 0.0031359396608812468, RECONS: 0.002806383467811559, DISTANCE: 0.32955615861075266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8608, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [14/25] Loss: 0.003126814945911368, RECONS: 0.0027968650218099357, DISTANCE: 0.32994988759358723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3801, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8544, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [15/25] Loss: 0.003124030015897006, RECONS: 0.002796300279442221, DISTANCE: 0.3277297019958496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6009, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4002, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8461, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [16/25] Loss: 0.003118236905292553, RECONS: 0.002790011958602597, DISTANCE: 0.32822491140926585
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3835, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [17/25] Loss: 0.0031250036295710337, RECONS: 0.002794897545956903, DISTANCE: 0.3301060464647081
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3945, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [18/25] Loss: 0.003120992639053025, RECONS: 0.0027863145315725553, DISTANCE: 0.3346780726784154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4152, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8105, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [19/25] Loss: 0.0031493121408857406, RECONS: 0.0028146626893430947, DISTANCE: 0.3346494197845459
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3933, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8171, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6078, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [20/25] Loss: 0.0031589346804789136, RECONS: 0.0028245061791191497, DISTANCE: 0.33442846934000653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4169, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [21/25] Loss: 0.0031459519258615646, RECONS: 0.0028138517677275972, DISTANCE: 0.33210012587634
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [22/25] Loss: 0.00315745208290932, RECONS: 0.0028266291964151287, DISTANCE: 0.3308228565298993
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4190, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8463, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [23/25] Loss: 0.003186865544800336, RECONS: 0.0028578904554403075, DISTANCE: 0.32897505660851795
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.3882, device='cuda:0') tensor(-0.7725, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3626, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8400, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[286/300] [24/25] Loss: 0.003228740831837058, RECONS: 0.0028868088591843845, DISTANCE: 0.3419319486618042
Test[286/300] [0/2] Loss: 0.004774689674377441, RECONS: 0.003892410546541214, DISTANCE: 0.8822789192199707
Test[286/300] [1/2] Loss: 0.004941655322909355, RECONS: 0.0037136459723114967, DISTANCE: 1.2280093431472778
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6143, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4365, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8462, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [0/25] Loss: 0.0033379141241312027, RECONS: 0.00304243341088295, DISTANCE: 0.29548072814941406
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6062, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4327, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [1/25] Loss: 0.0032137467060238123, RECONS: 0.002896900288760662, DISTANCE: 0.3168463706970215
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6169, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4216, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8335, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [2/25] Loss: 0.0033290854189544916, RECONS: 0.0030114575444410243, DISTANCE: 0.31762786706288654
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5945, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4101, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8340, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [3/25] Loss: 0.003326035861391574, RECONS: 0.0030116679263301194, DISTANCE: 0.31436794996261597
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4037, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8238, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [4/25] Loss: 0.0032446020282804965, RECONS: 0.002923672832548618, DISTANCE: 0.320929217338562
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4051, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8478, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [5/25] Loss: 0.003202526248060167, RECONS: 0.0028803926737358174, DISTANCE: 0.3221336007118225
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5950, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3784, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8542, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [6/25] Loss: 0.003289078561855214, RECONS: 0.0029655058003429857, DISTANCE: 0.3235727718898228
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4266, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8180, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [7/25] Loss: 0.003265835461206734, RECONS: 0.0029465695552062243, DISTANCE: 0.3192659020423889
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6196, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8236, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [8/25] Loss: 0.0032838968456619317, RECONS: 0.002967987882180346, DISTANCE: 0.3159089618259006
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6151, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4126, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8363, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [9/25] Loss: 0.0032529545249417426, RECONS: 0.0029360557440668345, DISTANCE: 0.316898775100708
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6177, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8586, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [10/25] Loss: 0.0032197166318920526, RECONS: 0.0028997643596746707, DISTANCE: 0.3199522712013938
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3468, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8489, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6278, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [11/25] Loss: 0.003225471319941183, RECONS: 0.002903843376164635, DISTANCE: 0.321627934773763
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3602, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8485, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6256, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [12/25] Loss: 0.0032717827170227584, RECONS: 0.0029474483229793035, DISTANCE: 0.32433438301086426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5967, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3531, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [13/25] Loss: 0.003361186627963824, RECONS: 0.003036489776734795, DISTANCE: 0.32469684737069265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8285, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [14/25] Loss: 0.0033260607626289128, RECONS: 0.0029992814796666305, DISTANCE: 0.32677927017211916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5951, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4134, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8204, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5911, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [15/25] Loss: 0.0033519514690851793, RECONS: 0.0030229163385229185, DISTANCE: 0.32903512567281723
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4446, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8123, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5819, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [16/25] Loss: 0.0033948198371731185, RECONS: 0.003065508886185639, DISTANCE: 0.32931095712325154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6162, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4445, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8165, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5883, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [17/25] Loss: 0.003446186491702166, RECONS: 0.0031155385982452165, DISTANCE: 0.33064789242214626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4127, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8421, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6040, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [18/25] Loss: 0.003419526864921576, RECONS: 0.003091072688173307, DISTANCE: 0.3284541682193154
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4695, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8628, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [19/25] Loss: 0.0034277997794561086, RECONS: 0.003101921174675226, DISTANCE: 0.32587859630584715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4540, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8610, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [20/25] Loss: 0.00343096181972041, RECONS: 0.0031062316127298843, DISTANCE: 0.3247301975886027
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4570, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8745, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [21/25] Loss: 0.0034158031816001644, RECONS: 0.0030906080501154065, DISTANCE: 0.32519512284885754
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4451, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8765, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [22/25] Loss: 0.00342783409818683, RECONS: 0.003102073800223677, DISTANCE: 0.32576028678728186
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6279, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4413, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8425, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [23/25] Loss: 0.0034435195945358523, RECONS: 0.003117696052261939, DISTANCE: 0.3258235255877177
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6108, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8322, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[287/300] [24/25] Loss: 0.003439340488985181, RECONS: 0.0030934263207018377, DISTANCE: 0.3459141540527344
Test[287/300] [0/2] Loss: 0.0042359791696071625, RECONS: 0.0034211266320198774, DISTANCE: 0.8148527145385742
Test[287/300] [1/2] Loss: 0.004157452378422022, RECONS: 0.003126173047348857, DISTANCE: 1.0312793254852295
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3659, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [0/25] Loss: 0.002926428336650133, RECONS: 0.0026053432375192642, DISTANCE: 0.3210850954055786
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3568, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8275, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [1/25] Loss: 0.003000320866703987, RECONS: 0.0026876325719058514, DISTANCE: 0.31268829107284546
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4043, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8263, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [2/25] Loss: 0.0029666627136369548, RECONS: 0.002657557682444652, DISTANCE: 0.3091050386428833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8251, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6060, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [3/25] Loss: 0.0029181515565142035, RECONS: 0.002598971244879067, DISTANCE: 0.31918033957481384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3688, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8115, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6031, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [4/25] Loss: 0.003038146113976836, RECONS: 0.0027201786637306214, DISTANCE: 0.3179674863815308
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6064, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3358, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8318, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6057, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [5/25] Loss: 0.0029833283818637333, RECONS: 0.002666915999725461, DISTANCE: 0.31641242901484173
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5982, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8409, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6068, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [6/25] Loss: 0.0030814213013010366, RECONS: 0.002761024249983685, DISTANCE: 0.3203970875058855
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6111, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3657, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [7/25] Loss: 0.00307294717640616, RECONS: 0.0027491620276123285, DISTANCE: 0.3237851709127426
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6034, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3760, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8567, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [8/25] Loss: 0.0030445632162607377, RECONS: 0.0027152380595604577, DISTANCE: 0.32932518588172066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6214, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4294, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8298, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [9/25] Loss: 0.003093031863681972, RECONS: 0.0027627610368654134, DISTANCE: 0.3302708625793457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4249, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8436, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6148, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [10/25] Loss: 0.003088525411757556, RECONS: 0.0027606075163930655, DISTANCE: 0.32791792262684216
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5969, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4395, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8597, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [11/25] Loss: 0.003141204690715919, RECONS: 0.002816531943002095, DISTANCE: 0.32467277844746906
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4197, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6101, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [12/25] Loss: 0.0031726670881303456, RECONS: 0.002850262985493128, DISTANCE: 0.3224041278545673
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6090, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4590, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8333, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [13/25] Loss: 0.003190545631306512, RECONS: 0.002866174992440002, DISTANCE: 0.32437065669468473
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4202, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8388, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [14/25] Loss: 0.0031835468951612713, RECONS: 0.0028597470528135696, DISTANCE: 0.3237998644510905
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5978, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4558, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6028, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [15/25] Loss: 0.003179677078151144, RECONS: 0.0028578859637491405, DISTANCE: 0.3217911422252655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4488, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [16/25] Loss: 0.0031546790919759695, RECONS: 0.0028351203894571345, DISTANCE: 0.31955873264985923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4327, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8373, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6038, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [17/25] Loss: 0.003161512936155001, RECONS: 0.0028423339826986194, DISTANCE: 0.3191789786020915
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4121, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8365, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [18/25] Loss: 0.0031538983610899826, RECONS: 0.0028345710475389894, DISTANCE: 0.31932733560863297
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6134, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3925, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8305, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [19/25] Loss: 0.003180096880532801, RECONS: 0.0028584029409103096, DISTANCE: 0.32169395685195923
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8324, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6146, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [20/25] Loss: 0.0031865023941333804, RECONS: 0.002864860497148974, DISTANCE: 0.3216419163204375
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3442, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [21/25] Loss: 0.0031864245591515846, RECONS: 0.0028653636214916, DISTANCE: 0.3210609555244446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6099, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3775, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8535, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6136, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [22/25] Loss: 0.0031937922391554584, RECONS: 0.0028716995805987845, DISTANCE: 0.32209267823592475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8373, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [23/25] Loss: 0.003194306210692351, RECONS: 0.00287265894197238, DISTANCE: 0.3216472864151001
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6123, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8267, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6075, device='cuda:0', grad_fn=<MeanBackward0>)
Train[288/300] [24/25] Loss: 0.0032103856187313796, RECONS: 0.00287364405579865, DISTANCE: 0.3367415761947632
Test[288/300] [0/2] Loss: 0.004172952845692635, RECONS: 0.0034456588327884674, DISTANCE: 0.7272939682006836
Test[288/300] [1/2] Loss: 0.00437886081635952, RECONS: 0.0031677897786721587, DISTANCE: 1.2110710144042969
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6061, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3864, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8525, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6045, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [0/25] Loss: 0.0034876877907663584, RECONS: 0.0031768938060849905, DISTANCE: 0.3107938766479492
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4064, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8416, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6049, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [1/25] Loss: 0.0035130910109728575, RECONS: 0.0031699726823717356, DISTANCE: 0.34311825037002563
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6024, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4235, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [2/25] Loss: 0.003329263844837745, RECONS: 0.0030038333497941494, DISTANCE: 0.325430432955424
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5892, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4541, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8404, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [3/25] Loss: 0.0035142916021868587, RECONS: 0.003186658606864512, DISTANCE: 0.32763293385505676
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6136, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4454, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8255, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5954, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [4/25] Loss: 0.0036283913999795915, RECONS: 0.003303676191717386, DISTANCE: 0.3247151136398315
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8312, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5963, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [5/25] Loss: 0.003626747289672494, RECONS: 0.0032970426060880222, DISTANCE: 0.3297045826911926
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4565, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [6/25] Loss: 0.0035367555849786314, RECONS: 0.0032129723113030195, DISTANCE: 0.3237831933157785
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4533, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8502, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [7/25] Loss: 0.003538556717103347, RECONS: 0.0032167184399440885, DISTANCE: 0.32183821499347687
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5970, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3936, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8676, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [8/25] Loss: 0.0034906385828637415, RECONS: 0.003172095916751358, DISTANCE: 0.31854259967803955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8564, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [9/25] Loss: 0.0034721518401056527, RECONS: 0.003151501901447773, DISTANCE: 0.3206498742103577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6167, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3462, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8466, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6133, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [10/25] Loss: 0.0034198945769193497, RECONS: 0.0030930497344921937, DISTANCE: 0.3268447897650979
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6140, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8464, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6111, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [11/25] Loss: 0.0033777954522520304, RECONS: 0.003053235064726323, DISTANCE: 0.3245603342851003
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6133, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [12/25] Loss: 0.003335686597543267, RECONS: 0.003012709247951324, DISTANCE: 0.3229772952886728
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6043, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3853, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8256, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [13/25] Loss: 0.003322773114112871, RECONS: 0.0030015939680327263, DISTANCE: 0.3211790919303894
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8068, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [14/25] Loss: 0.003303185508896907, RECONS: 0.002981282180796067, DISTANCE: 0.3219032684961955
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4196, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6175, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8195, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [15/25] Loss: 0.0032990760082611814, RECONS: 0.002974574192194268, DISTANCE: 0.32450176030397415
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3854, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8430, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [16/25] Loss: 0.0032842246103374395, RECONS: 0.002959358903086361, DISTANCE: 0.3248656567405252
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3805, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [17/25] Loss: 0.0032551156408670875, RECONS: 0.0029317722138431338, DISTANCE: 0.3233433763186137
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6199, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3580, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8528, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6140, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [18/25] Loss: 0.0032545314905674835, RECONS: 0.002928511680741059, DISTANCE: 0.3260197576723601
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3803, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8621, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [19/25] Loss: 0.00326606611488387, RECONS: 0.002940827701240778, DISTANCE: 0.32523836493492125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3559, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8735, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [20/25] Loss: 0.003301098443833845, RECONS: 0.0029763387560489633, DISTANCE: 0.32475963660648893
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3307, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8697, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [21/25] Loss: 0.0032872996843335304, RECONS: 0.002961970738727938, DISTANCE: 0.3253288919275457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6005, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4156, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8405, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [22/25] Loss: 0.003291056997588147, RECONS: 0.0029662970514239178, DISTANCE: 0.3247598979784095
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4157, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [23/25] Loss: 0.003273975783182929, RECONS: 0.002949502154175813, DISTANCE: 0.3244735797246297
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7804, device='cuda:0') tensor(-0.6159, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4403, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8119, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[289/300] [24/25] Loss: 0.003315672315657139, RECONS: 0.0029579507559537887, DISTANCE: 0.3577215051651001
Test[289/300] [0/2] Loss: 0.004567033611238003, RECONS: 0.0035584333818405867, DISTANCE: 1.0086002349853516
Test[289/300] [1/2] Loss: 0.00464637391269207, RECONS: 0.0034172298619523644, DISTANCE: 1.229144036769867
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6120, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4217, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8129, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6026, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [0/25] Loss: 0.003093256615102291, RECONS: 0.002717225579544902, DISTANCE: 0.37603092193603516
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3896, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [1/25] Loss: 0.002983729587867856, RECONS: 0.0026471741730347276, DISTANCE: 0.3365553617477417
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5992, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3922, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8468, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6175, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [2/25] Loss: 0.0030150013820578656, RECONS: 0.002681162441149354, DISTANCE: 0.3338388999303182
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.5974, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8607, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [3/25] Loss: 0.0032366749946959317, RECONS: 0.002915643679443747, DISTANCE: 0.32103127241134644
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6124, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3913, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8472, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [4/25] Loss: 0.003185295546427369, RECONS: 0.0028663208708167077, DISTANCE: 0.3189746141433716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5990, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4082, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6007, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [5/25] Loss: 0.0032182621071115136, RECONS: 0.00290244243418177, DISTANCE: 0.3158196409543355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4138, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6014, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [6/25] Loss: 0.003204655002004334, RECONS: 0.002879939108554806, DISTANCE: 0.32471586976732525
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6042, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4515, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8195, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5999, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [7/25] Loss: 0.003206930559827015, RECONS: 0.0028814678371418267, DISTANCE: 0.3254626840353012
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6155, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4563, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8268, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [8/25] Loss: 0.003229898892136084, RECONS: 0.002900039052797688, DISTANCE: 0.32985981305440265
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6149, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4436, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8252, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6087, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [9/25] Loss: 0.0033092044526711107, RECONS: 0.00297837289981544, DISTANCE: 0.33083152770996094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4207, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8376, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [10/25] Loss: 0.003336598757993091, RECONS: 0.003007534933699803, DISTANCE: 0.32906380566683685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3643, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8385, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [11/25] Loss: 0.0033575897299063704, RECONS: 0.00303003063891083, DISTANCE: 0.3275590737660726
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8505, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6126, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [12/25] Loss: 0.0033827273067660057, RECONS: 0.00305809540889011, DISTANCE: 0.32463188354785627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3215, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [13/25] Loss: 0.003380878612266055, RECONS: 0.0030557930170159254, DISTANCE: 0.3250855803489685
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6185, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3902, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [14/25] Loss: 0.0033823642724504074, RECONS: 0.0030586276048173507, DISTANCE: 0.32373665968577064
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3675, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6081, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [15/25] Loss: 0.0033604190684854984, RECONS: 0.003036523950868286, DISTANCE: 0.3238951116800308
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3980, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8617, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [16/25] Loss: 0.003393503645544543, RECONS: 0.003068819737938397, DISTANCE: 0.32468390464782715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4215, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8316, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [17/25] Loss: 0.0033781035001286203, RECONS: 0.0030510950083326963, DISTANCE: 0.3270084924168057
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4312, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8308, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6062, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [18/25] Loss: 0.0033921825846559123, RECONS: 0.0030652779326038925, DISTANCE: 0.32690465450286865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4437, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8241, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6037, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [19/25] Loss: 0.0033894428284838795, RECONS: 0.0030630850116722284, DISTANCE: 0.3263578236103058
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4011, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8238, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5987, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [20/25] Loss: 0.003359731951994555, RECONS: 0.0030327157139600743, DISTANCE: 0.32701624575115384
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6222, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4394, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8314, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [21/25] Loss: 0.0033802757335996084, RECONS: 0.0030527504012835298, DISTANCE: 0.32752533934333106
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6114, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4175, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8471, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [22/25] Loss: 0.0033811416234011235, RECONS: 0.003053183009362091, DISTANCE: 0.3279586252958878
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6148, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3962, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8393, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [23/25] Loss: 0.0033669322438072413, RECONS: 0.003039238140142212, DISTANCE: 0.3276941180229187
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3545, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8401, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6265, device='cuda:0', grad_fn=<MeanBackward0>)
Train[290/300] [24/25] Loss: 0.003401732640340924, RECONS: 0.003056731475517154, DISTANCE: 0.3450011777877808
Test[290/300] [0/2] Loss: 0.004800974857062101, RECONS: 0.00391170009970665, DISTANCE: 0.8892745971679688
Test[290/300] [1/2] Loss: 0.004548671189695597, RECONS: 0.003466831869445741, DISTANCE: 1.0818392038345337
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6052, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3569, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6270, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [0/25] Loss: 0.003400038927793503, RECONS: 0.0031007525976747274, DISTANCE: 0.2992863655090332
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6007, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3758, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8455, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6164, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [1/25] Loss: 0.003314796485938132, RECONS: 0.0030006051529198885, DISTANCE: 0.3141913414001465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4004, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8190, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [2/25] Loss: 0.0032235862842450538, RECONS: 0.0029188761642823615, DISTANCE: 0.30471014976501465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3795, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8199, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5907, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [3/25] Loss: 0.003220842976588756, RECONS: 0.002897753147408366, DISTANCE: 0.3230898678302765
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3850, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8213, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5878, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [4/25] Loss: 0.0032654758542776108, RECONS: 0.002946107415482402, DISTANCE: 0.31936845779418943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6088, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3729, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8217, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5974, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [5/25] Loss: 0.0032007311626027026, RECONS: 0.0028849252654860416, DISTANCE: 0.31580591201782227
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3598, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [6/25] Loss: 0.0031385916684355053, RECONS: 0.0028200082015246153, DISTANCE: 0.318583471434457
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5976, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6211, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [7/25] Loss: 0.0031819586001802236, RECONS: 0.0028645335987675935, DISTANCE: 0.3174249976873398
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6028, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3782, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8657, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6202, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [8/25] Loss: 0.003165138057536549, RECONS: 0.0028512649652030733, DISTANCE: 0.3138730790879991
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4091, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8517, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [9/25] Loss: 0.0031406308989971876, RECONS: 0.002825458301231265, DISTANCE: 0.3151725769042969
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6188, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3955, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [10/25] Loss: 0.003140343310819431, RECONS: 0.002824021609161388, DISTANCE: 0.3163216764276678
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4303, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6050, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [11/25] Loss: 0.0031732223578728735, RECONS: 0.002858512569218874, DISTANCE: 0.3147097627321879
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4458, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [12/25] Loss: 0.0031323298776092436, RECONS: 0.0028129764653455755, DISTANCE: 0.3193533787360558
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4233, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6125, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [13/25] Loss: 0.0031705195183998774, RECONS: 0.0028501448188243167, DISTANCE: 0.32037467615945
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4480, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8283, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [14/25] Loss: 0.003169463916371266, RECONS: 0.0028471695569654305, DISTANCE: 0.3222943305969238
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4387, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8398, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6115, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [15/25] Loss: 0.0031778934790054336, RECONS: 0.002859090527635999, DISTANCE: 0.31880292296409607
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6102, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4409, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [16/25] Loss: 0.0031716083039474837, RECONS: 0.0028539409121388897, DISTANCE: 0.3176673650741577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6183, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4388, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8394, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6091, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [17/25] Loss: 0.0031903315102681518, RECONS: 0.002873676583274371, DISTANCE: 0.3166549073325263
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6059, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3914, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8568, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [18/25] Loss: 0.0031787935693405175, RECONS: 0.0028627071725694756, DISTANCE: 0.31608638010526957
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5954, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4193, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8486, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6093, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [19/25] Loss: 0.0032345617190003397, RECONS: 0.0029182906029745935, DISTANCE: 0.31627110242843626
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5947, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3875, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8495, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [20/25] Loss: 0.0032198598297933736, RECONS: 0.0029051612973922773, DISTANCE: 0.31469851448422387
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3946, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8318, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5951, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [21/25] Loss: 0.003229420420459726, RECONS: 0.002914541337469762, DISTANCE: 0.3148790706287731
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4091, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8310, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5966, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [22/25] Loss: 0.00322926277294755, RECONS: 0.0029131155157380777, DISTANCE: 0.3161472444948943
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3636, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8366, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [23/25] Loss: 0.0032306836025478938, RECONS: 0.002912442481222873, DISTANCE: 0.31824110448360443
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3602, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8377, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[291/300] [24/25] Loss: 0.0032340375985950233, RECONS: 0.0029020071495324375, DISTANCE: 0.3320304346084595
Test[291/300] [0/2] Loss: 0.004216291476041079, RECONS: 0.0034153778105974197, DISTANCE: 0.8009136915206909
Test[291/300] [1/2] Loss: 0.004168810322880745, RECONS: 0.002958565717563033, DISTANCE: 1.2102446556091309
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3751, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8411, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6170, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [0/25] Loss: 0.0033323343377560377, RECONS: 0.002996942028403282, DISTANCE: 0.3353922367095947
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6161, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8498, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [1/25] Loss: 0.003172915312461555, RECONS: 0.0028519739862531424, DISTANCE: 0.32094132900238037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3626, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6229, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [2/25] Loss: 0.0030492228300621114, RECONS: 0.0027221047009030976, DISTANCE: 0.3271181583404541
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3644, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6215, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [3/25] Loss: 0.003175695310346782, RECONS: 0.0028479162137955427, DISTANCE: 0.3277791142463684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5973, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3527, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6154, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [4/25] Loss: 0.003296045446768403, RECONS: 0.002974234987050295, DISTANCE: 0.3218104600906372
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4227, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8323, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6030, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [5/25] Loss: 0.0032505258762588105, RECONS: 0.002934908571963509, DISTANCE: 0.315617303053538
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4502, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8245, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5933, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [6/25] Loss: 0.0032370753719338347, RECONS: 0.002924193228994097, DISTANCE: 0.3128821338926043
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6026, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4161, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8159, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5906, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [7/25] Loss: 0.0032157727982848883, RECONS: 0.0028983974480070174, DISTANCE: 0.3173753470182419
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5959, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4367, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8267, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5930, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [8/25] Loss: 0.0031924458582782084, RECONS: 0.002873994047856993, DISTANCE: 0.31845181518130833
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5902, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4727, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8308, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5979, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [9/25] Loss: 0.003213656391017139, RECONS: 0.002894424507394433, DISTANCE: 0.31923187971115113
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6113, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4567, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [10/25] Loss: 0.003204682863063433, RECONS: 0.002886101095513864, DISTANCE: 0.31858176534826105
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4421, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8395, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6048, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [11/25] Loss: 0.00319749458382527, RECONS: 0.0028787330569078526, DISTANCE: 0.3187615176041921
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4379, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [12/25] Loss: 0.003168774929900582, RECONS: 0.002849748322310356, DISTANCE: 0.3190265985635611
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6058, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4097, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8539, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6176, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [13/25] Loss: 0.0031453314004465938, RECONS: 0.0028253639715590645, DISTANCE: 0.3199674231665475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6077, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3907, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6198, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [14/25] Loss: 0.0031634544022381304, RECONS: 0.0028413854073733092, DISTANCE: 0.32206899325052896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5930, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3865, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6155, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [15/25] Loss: 0.0032317354634869844, RECONS: 0.002908752139774151, DISTANCE: 0.3229833096265793
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3899, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8433, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [16/25] Loss: 0.003201300387873369, RECONS: 0.0028760205707786713, DISTANCE: 0.32527979682473573
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6036, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8121, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [17/25] Loss: 0.0032084956765174866, RECONS: 0.00288276692541937, DISTANCE: 0.3257287343343099
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6166, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4143, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8149, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [18/25] Loss: 0.0032249807478173785, RECONS: 0.0029011850588415797, DISTANCE: 0.32379566995721115
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8305, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [19/25] Loss: 0.0032191369333304464, RECONS: 0.002894283551722765, DISTANCE: 0.3248533606529236
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6218, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4013, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8231, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6051, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [20/25] Loss: 0.00324701753977154, RECONS: 0.00292170636488923, DISTANCE: 0.3253111498696463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4206, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6142, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [21/25] Loss: 0.0032378151822327213, RECONS: 0.0029127789894118905, DISTANCE: 0.3250361680984497
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3998, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6230, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [22/25] Loss: 0.0032507869232769895, RECONS: 0.0029250458085342593, DISTANCE: 0.3257410940916642
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3870, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8602, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6272, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [23/25] Loss: 0.00325581431388855, RECONS: 0.002931312813113133, DISTANCE: 0.32450148463249207
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8558, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6203, device='cuda:0', grad_fn=<MeanBackward0>)
Train[292/300] [24/25] Loss: 0.003270207904279232, RECONS: 0.002928433706983924, DISTANCE: 0.34177417755126954
Test[292/300] [0/2] Loss: 0.00461873272433877, RECONS: 0.0037615876644849777, DISTANCE: 0.857144832611084
Test[292/300] [1/2] Loss: 0.004454257665202022, RECONS: 0.0033227003877982497, DISTANCE: 1.1315569877624512
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6191, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3471, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8513, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6195, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [0/25] Loss: 0.0026340160984545946, RECONS: 0.0023193531669676304, DISTANCE: 0.3146629333496094
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6118, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3794, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8453, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [1/25] Loss: 0.0028556149918586016, RECONS: 0.0024963796604424715, DISTANCE: 0.3592352867126465
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5983, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3825, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8359, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [2/25] Loss: 0.003135133689890305, RECONS: 0.0027781357057392597, DISTANCE: 0.3569979667663574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6226, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3832, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8142, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6016, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [3/25] Loss: 0.0033233790891245008, RECONS: 0.0029709500959143043, DISTANCE: 0.35242897272109985
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6037, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3699, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8158, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6053, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [4/25] Loss: 0.003237762674689293, RECONS: 0.002886665239930153, DISTANCE: 0.35109744071960447
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4041, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8277, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6054, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [5/25] Loss: 0.003274059039540589, RECONS: 0.0029318921733647585, DISTANCE: 0.3421668807665507
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.5963, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3750, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8310, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [6/25] Loss: 0.003239159538809742, RECONS: 0.002904721602265324, DISTANCE: 0.33443794931684223
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4288, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8428, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [7/25] Loss: 0.003244156891014427, RECONS: 0.002912211464717984, DISTANCE: 0.3319454491138458
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6032, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [8/25] Loss: 0.003262155611688892, RECONS: 0.002926300693717268, DISTANCE: 0.3358549409442478
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4565, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8465, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [9/25] Loss: 0.0032862648600712418, RECONS: 0.002948452765122056, DISTANCE: 0.3378121256828308
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6127, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4060, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8423, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6042, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [10/25] Loss: 0.0032726794650608845, RECONS: 0.002932044296440753, DISTANCE: 0.34063519131053577
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4436, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8654, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6109, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [11/25] Loss: 0.0032803911405305066, RECONS: 0.002943675130760918, DISTANCE: 0.33671602606773376
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5975, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8422, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [12/25] Loss: 0.003291886980430438, RECONS: 0.002955957817343565, DISTANCE: 0.3359291828595675
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6157, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4097, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8286, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6095, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [13/25] Loss: 0.003289278779577996, RECONS: 0.002954175213484892, DISTANCE: 0.335103588444846
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4226, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8298, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6084, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [14/25] Loss: 0.0032716982532292604, RECONS: 0.002938437011713783, DISTANCE: 0.3332612673441569
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6057, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3916, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8319, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [15/25] Loss: 0.0032475938205607235, RECONS: 0.00291470174852293, DISTANCE: 0.3328920900821686
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4182, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8168, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [16/25] Loss: 0.00321735701907207, RECONS: 0.002883682205506107, DISTANCE: 0.3336748235365924
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3724, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8449, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6039, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [17/25] Loss: 0.003194319666363299, RECONS: 0.002861442147857613, DISTANCE: 0.3328775233692593
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3234, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8382, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6059, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [18/25] Loss: 0.0031874857009633593, RECONS: 0.0028556555656618194, DISTANCE: 0.33183014392852783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6109, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3935, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8380, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6056, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [19/25] Loss: 0.0032072910107672215, RECONS: 0.002876830892637372, DISTANCE: 0.3304601311683655
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3991, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8347, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6112, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [20/25] Loss: 0.00319875053884018, RECONS: 0.0028665426209391583, DISTANCE: 0.3322079238437471
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4179, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8368, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [21/25] Loss: 0.0031874781178141184, RECONS: 0.002856295016086237, DISTANCE: 0.3311831029978665
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6039, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4213, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8444, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [22/25] Loss: 0.003205121434091226, RECONS: 0.0028758227885903225, DISTANCE: 0.32929864137069037
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4103, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6116, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [23/25] Loss: 0.0031949798964584866, RECONS: 0.002864864257086689, DISTANCE: 0.3301156361897786
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6048, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3801, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8442, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[293/300] [24/25] Loss: 0.003181048361584544, RECONS: 0.00284011235460639, DISTANCE: 0.34093600273132324
Test[293/300] [0/2] Loss: 0.004193976521492004, RECONS: 0.0033264723606407642, DISTANCE: 0.8675040006637573
Test[293/300] [1/2] Loss: 0.004204273223876953, RECONS: 0.0030537686543539166, DISTANCE: 1.150504469871521
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4297, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8323, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5964, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [0/25] Loss: 0.0028664707206189632, RECONS: 0.002565906383097172, DISTANCE: 0.3005642890930176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6180, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4582, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8237, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5936, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [1/25] Loss: 0.0034363730810582638, RECONS: 0.003111646743491292, DISTANCE: 0.3247263431549072
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8340, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6071, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [2/25] Loss: 0.0032521257332215705, RECONS: 0.0029228775141139827, DISTANCE: 0.32924822966257733
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5932, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4186, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6152, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [3/25] Loss: 0.0034081742633134127, RECONS: 0.003084910160396248, DISTANCE: 0.32326409220695496
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3871, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8286, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [4/25] Loss: 0.0033140582032501697, RECONS: 0.0029915648978203536, DISTANCE: 0.322493314743042
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4011, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8303, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [5/25] Loss: 0.0032497789167488613, RECONS: 0.002934411051683128, DISTANCE: 0.315367857615153
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4275, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6172, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3175, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8165, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [6/25] Loss: 0.0032047872498099294, RECONS: 0.002890955423936248, DISTANCE: 0.31383180618286133
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6076, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3723, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8162, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6041, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [7/25] Loss: 0.003255821211496368, RECONS: 0.0029424866661429405, DISTANCE: 0.31333452463150024
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6110, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3376, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8287, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6047, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [8/25] Loss: 0.0032460111607280043, RECONS: 0.00293193312568797, DISTANCE: 0.31407801310221356
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8358, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [9/25] Loss: 0.0032097569201141596, RECONS: 0.002892835857346654, DISTANCE: 0.3169210433959961
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6035, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3903, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8343, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6127, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [10/25] Loss: 0.0032364873808215966, RECONS: 0.002921237483281981, DISTANCE: 0.31524987654252484
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6163, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4095, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8414, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [11/25] Loss: 0.003229931928217411, RECONS: 0.0029133196803741157, DISTANCE: 0.31661223371823627
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6190, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4299, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [12/25] Loss: 0.003265861923304888, RECONS: 0.002948512126190158, DISTANCE: 0.31734979152679443
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4418, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8550, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6135, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [13/25] Loss: 0.0032842473426301566, RECONS: 0.002967252445939396, DISTANCE: 0.31699488844190327
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5935, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3926, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8456, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6099, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [14/25] Loss: 0.0033094247958312434, RECONS: 0.002990687157337864, DISTANCE: 0.31873762607574463
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6002, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4266, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8458, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5989, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [15/25] Loss: 0.0033013030770234764, RECONS: 0.0029839230846846476, DISTANCE: 0.31737997382879257
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4516, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8368, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5886, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [16/25] Loss: 0.003340531250133234, RECONS: 0.003023952040273477, DISTANCE: 0.3165791876175824
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6097, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4030, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5977, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [17/25] Loss: 0.0033327219878426856, RECONS: 0.00301365304686543, DISTANCE: 0.31906892193688285
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4381, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8233, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6063, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [18/25] Loss: 0.0033307635396915046, RECONS: 0.003013754386062685, DISTANCE: 0.3170091290222971
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6228, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4164, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8341, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [19/25] Loss: 0.0033205925370566546, RECONS: 0.0030024219886399806, DISTANCE: 0.31817052364349363
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3904, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8482, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6288, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [20/25] Loss: 0.0033418035711206143, RECONS: 0.0030228124510142066, DISTANCE: 0.31899109908512663
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3693, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8430, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6287, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [21/25] Loss: 0.0033821258270605044, RECONS: 0.003063833859579807, DISTANCE: 0.3182919513095509
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3756, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8549, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6153, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [22/25] Loss: 0.0034162710096849046, RECONS: 0.003098483673175392, DISTANCE: 0.31778732590053393
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6079, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3601, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8600, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6009, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [23/25] Loss: 0.00340644446744894, RECONS: 0.0030863027883848795, DISTANCE: 0.32014166315396625
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5923, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8223, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[294/300] [24/25] Loss: 0.003449437078088522, RECONS: 0.003109370842576027, DISTANCE: 0.3400662088394165
Test[294/300] [0/2] Loss: 0.005175442434847355, RECONS: 0.00431085005402565, DISTANCE: 0.8645925521850586
Test[294/300] [1/2] Loss: 0.005843191873282194, RECONS: 0.004481170093640685, DISTANCE: 1.3620217442512512
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4382, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8177, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5895, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [0/25] Loss: 0.0038604731671512127, RECONS: 0.0034924892242997885, DISTANCE: 0.3679838180541992
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6105, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4401, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8107, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5924, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [1/25] Loss: 0.0038481885567307472, RECONS: 0.0034986429382115602, DISTANCE: 0.34954553842544556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4588, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6225, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4348, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8230, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [2/25] Loss: 0.00400129488358895, RECONS: 0.003651232613871495, DISTANCE: 0.35006221135457355
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6150, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3707, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8588, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6199, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [3/25] Loss: 0.0037325832527130842, RECONS: 0.0033836739603430033, DISTANCE: 0.34890925884246826
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3932, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8593, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6288, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [4/25] Loss: 0.003688200144097209, RECONS: 0.0033505585975944995, DISTANCE: 0.3376415252685547
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6153, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3426, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8688, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6309, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [5/25] Loss: 0.0036556170865272484, RECONS: 0.003319300555934509, DISTANCE: 0.3363165060679118
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6139, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3489, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8618, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [6/25] Loss: 0.003576157315235053, RECONS: 0.0032437229196407963, DISTANCE: 0.3324343647275652
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5971, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3281, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8529, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6219, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [7/25] Loss: 0.0036137634015176445, RECONS: 0.0032822036591824144, DISTANCE: 0.3315597176551819
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3318, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6034, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [8/25] Loss: 0.003599640059595307, RECONS: 0.003268177853897214, DISTANCE: 0.3314621713426378
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5979, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3731, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8165, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5932, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [9/25] Loss: 0.0035513864597305654, RECONS: 0.0032216810854151846, DISTANCE: 0.3297053337097168
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4094, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.7952, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5843, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [10/25] Loss: 0.003543176772919568, RECONS: 0.0032137585803866386, DISTANCE: 0.3294181606986306
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6147, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4050, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8128, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5916, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [11/25] Loss: 0.0035776111374919615, RECONS: 0.00324624078348279, DISTANCE: 0.33137033383051556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6022, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4238, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8450, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6069, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [12/25] Loss: 0.003555673210380169, RECONS: 0.0032247789562321627, DISTANCE: 0.33089424096621
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6018, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4224, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8512, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6186, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [13/25] Loss: 0.003541808675176331, RECONS: 0.0032107163653043763, DISTANCE: 0.331092289515904
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6223, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3943, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8612, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6216, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [14/25] Loss: 0.0035493078952034316, RECONS: 0.003218905891602238, DISTANCE: 0.3304019848505656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.7882, device='cuda:0') tensor(-0.6040, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3937, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8803, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6223, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [15/25] Loss: 0.003584581980248913, RECONS: 0.0032547354203416035, DISTANCE: 0.3298465460538864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4038, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8665, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6124, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [16/25] Loss: 0.0036170872147468958, RECONS: 0.0032856043373398923, DISTANCE: 0.3314828592188218
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6200, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4190, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8536, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [17/25] Loss: 0.0036158807730923095, RECONS: 0.0032848905668490464, DISTANCE: 0.3309901820288764
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4255, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [18/25] Loss: 0.0036589286388143114, RECONS: 0.0033272953802033476, DISTANCE: 0.3316332415530556
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6004, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3608, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8308, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6119, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [19/25] Loss: 0.0036366858519613745, RECONS: 0.0033068738179281355, DISTANCE: 0.3298120141029358
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6063, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4382, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8221, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [20/25] Loss: 0.0036153642438529502, RECONS: 0.003286971278222544, DISTANCE: 0.3283929484231131
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4283, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8158, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [21/25] Loss: 0.0036252244079316206, RECONS: 0.00329753222070973, DISTANCE: 0.3276921727440574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5980, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4420, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8243, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5958, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [22/25] Loss: 0.003589596143802223, RECONS: 0.003262789100003631, DISTANCE: 0.32680703246075177
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5993, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4367, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8290, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5933, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [23/25] Loss: 0.003582154536464562, RECONS: 0.0032558236950232335, DISTANCE: 0.3263308306535085
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6086, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3851, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8467, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5953, device='cuda:0', grad_fn=<MeanBackward0>)
Train[295/300] [24/25] Loss: 0.0035912462789565325, RECONS: 0.003251747339963913, DISTANCE: 0.3394989252090454
Test[295/300] [0/2] Loss: 0.004639427177608013, RECONS: 0.0037310149054974318, DISTANCE: 0.9084124565124512
Test[295/300] [1/2] Loss: 0.004763048375025392, RECONS: 0.0035954032791778445, DISTANCE: 1.1676452159881592
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6011, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4102, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8504, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5983, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [0/25] Loss: 0.0038146651349961758, RECONS: 0.0034837943967431784, DISTANCE: 0.33087074756622314
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6100, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3915, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8547, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6098, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [1/25] Loss: 0.0035450811265036464, RECONS: 0.0032093533081933856, DISTANCE: 0.3357278108596802
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3666, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8594, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [2/25] Loss: 0.003510269025961558, RECONS: 0.0031745440792292356, DISTANCE: 0.3357249101003011
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3737, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8418, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6171, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [3/25] Loss: 0.003377423039637506, RECONS: 0.003051000472623855, DISTANCE: 0.3264225125312805
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6549, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6066, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4243, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8366, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [4/25] Loss: 0.0032657720148563385, RECONS: 0.002940111793577671, DISTANCE: 0.32566018104553224
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6019, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4276, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8371, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6027, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [5/25] Loss: 0.0032263624016195536, RECONS: 0.0029041223072757325, DISTANCE: 0.32224005460739136
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6784, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6071, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4356, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8186, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [6/25] Loss: 0.003200644061767629, RECONS: 0.0028756155765482356, DISTANCE: 0.3250284365245274
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4378, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8243, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5934, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [7/25] Loss: 0.0031717678357381374, RECONS: 0.002850041084457189, DISTANCE: 0.3217267096042633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6080, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4363, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8349, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6000, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [8/25] Loss: 0.0031499052161557805, RECONS: 0.0028298094920400116, DISTANCE: 0.32009567154778373
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6146, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4208, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8315, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6074, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [9/25] Loss: 0.0031738070072606208, RECONS: 0.002850316558033228, DISTANCE: 0.32349040508270266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6117, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4000, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8604, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6209, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [10/25] Loss: 0.0031759394756094976, RECONS: 0.002852952933277596, DISTANCE: 0.3229864944111217
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6072, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3822, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8659, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6267, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [11/25] Loss: 0.003228388843126595, RECONS: 0.002903441491071135, DISTANCE: 0.3249472975730896
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4980, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3253, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8507, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6279, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [12/25] Loss: 0.0032008848188874815, RECONS: 0.0028764798055188013, DISTANCE: 0.3244049549102783
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6082, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4057, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6156, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [13/25] Loss: 0.0032037581217342188, RECONS: 0.0028809935153861132, DISTANCE: 0.32276454993656706
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6089, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4018, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8364, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6066, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [14/25] Loss: 0.0032016484066843985, RECONS: 0.002880437873924772, DISTANCE: 0.3212104797363281
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6074, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4210, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8325, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [15/25] Loss: 0.0031772728980286047, RECONS: 0.0028571023285621777, DISTANCE: 0.320170521736145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4152, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8229, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5969, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [16/25] Loss: 0.003201278447009185, RECONS: 0.0028808967703405548, DISTANCE: 0.32038162736331716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4510, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6068, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4302, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8321, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [17/25] Loss: 0.003194140839493937, RECONS: 0.002873924793675542, DISTANCE: 0.32021600008010864
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4442, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8299, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5997, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [18/25] Loss: 0.003192733470840674, RECONS: 0.002872023829504063, DISTANCE: 0.3207095924176668
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6013, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4181, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8309, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6067, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [19/25] Loss: 0.0031821935437619684, RECONS: 0.002859914512373507, DISTANCE: 0.32227898836135865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5373, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6115, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3846, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8584, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6100, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [20/25] Loss: 0.0031461231521375125, RECONS: 0.002824314149274003, DISTANCE: 0.3218089625948951
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4246, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8417, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6117, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [21/25] Loss: 0.003138717168688097, RECONS: 0.002817925055172633, DISTANCE: 0.3207920735532587
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6206, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4013, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8438, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6120, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [22/25] Loss: 0.003120552940780054, RECONS: 0.0027988860889783373, DISTANCE: 0.32166681600653607
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6106, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3877, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8479, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [23/25] Loss: 0.0031164142516596862, RECONS: 0.002795014646835625, DISTANCE: 0.3213995744784673
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6021, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3792, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8280, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6162, device='cuda:0', grad_fn=<MeanBackward0>)
Train[296/300] [24/25] Loss: 0.0032298430148512123, RECONS: 0.002892315909266472, DISTANCE: 0.33752707958221434
Test[296/300] [0/2] Loss: 0.004447047132998705, RECONS: 0.0034928438253700733, DISTANCE: 0.9542032480239868
Test[296/300] [1/2] Loss: 0.004463097313418984, RECONS: 0.0032091434113681316, DISTANCE: 1.2539536952972412
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7255, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6029, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8443, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6169, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [0/25] Loss: 0.003471626900136471, RECONS: 0.0031092974822968245, DISTANCE: 0.36232948303222656
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4039, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6112, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3878, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8318, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [1/25] Loss: 0.0030799178639426827, RECONS: 0.002740824711509049, DISTANCE: 0.3390932083129883
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6065, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4618, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8303, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6022, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [2/25] Loss: 0.003142297655964891, RECONS: 0.0028097718798865876, DISTANCE: 0.3325257698694865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6181, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4587, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8445, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5967, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [3/25] Loss: 0.0032606958993710577, RECONS: 0.0029366867966018617, DISTANCE: 0.32400909066200256
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5964, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4345, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8392, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5996, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [4/25] Loss: 0.0033115478232502936, RECONS: 0.002989464392885566, DISTANCE: 0.32208340167999266
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4564, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8545, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6019, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [5/25] Loss: 0.003259423654526472, RECONS: 0.0029355797062938413, DISTANCE: 0.32384393612543744
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4464, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6105, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [6/25] Loss: 0.003180951445496508, RECONS: 0.002857380047706621, DISTANCE: 0.32357137543814524
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6107, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4151, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8441, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6163, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [7/25] Loss: 0.003155531914671883, RECONS: 0.0028324266022536904, DISTANCE: 0.3231052756309509
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5988, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4060, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8432, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6181, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [8/25] Loss: 0.003170130438067847, RECONS: 0.0028484834151135553, DISTANCE: 0.3216469950146145
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4353, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6119, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3292, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8459, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6113, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [9/25] Loss: 0.003140333201736212, RECONS: 0.0028182384558022022, DISTANCE: 0.322094714641571
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5957, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3640, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8309, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [10/25] Loss: 0.0033582408319820056, RECONS: 0.0030350797724994745, DISTANCE: 0.3231610276482322
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6045, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3863, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8312, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5952, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [11/25] Loss: 0.0033240321402748427, RECONS: 0.0029993027565069497, DISTANCE: 0.3247293531894684
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6154, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3867, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8081, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5937, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [12/25] Loss: 0.0033423372257787446, RECONS: 0.003020220060044756, DISTANCE: 0.32211713607494646
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3667, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8175, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6080, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [13/25] Loss: 0.0033403972296842505, RECONS: 0.0030158439185470343, DISTANCE: 0.32455328532627653
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.5968, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3964, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8375, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6121, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [14/25] Loss: 0.0033849308577676616, RECONS: 0.003061364684253931, DISTANCE: 0.3235661506652832
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3843, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8457, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6168, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [15/25] Loss: 0.0033615581633057445, RECONS: 0.003040025185327977, DISTANCE: 0.3215329572558403
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6085, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4033, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8606, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6088, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [16/25] Loss: 0.003357369945768048, RECONS: 0.0030343877425526872, DISTANCE: 0.32298218502717857
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4023, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8474, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6032, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [17/25] Loss: 0.003367298049852252, RECONS: 0.003044347847915358, DISTANCE: 0.32295017772250706
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6198, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4145, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8497, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6058, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [18/25] Loss: 0.003366119375354365, RECONS: 0.0030432805467985177, DISTANCE: 0.32283880208667953
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6081, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4159, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8442, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6097, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [19/25] Loss: 0.0033747446024790404, RECONS: 0.003052835410926491, DISTANCE: 0.3219091594219208
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6067, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4005, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8559, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6182, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [20/25] Loss: 0.003362187206567753, RECONS: 0.003039872550982095, DISTANCE: 0.32231462001800537
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6093, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3772, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8386, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6212, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [21/25] Loss: 0.0033437346150590615, RECONS: 0.003020328384908763, DISTANCE: 0.32340619238940155
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6138, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4059, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8368, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [22/25] Loss: 0.003320737782379855, RECONS: 0.00299496342347044, DISTANCE: 0.32577432238537335
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6098, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3890, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8337, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6106, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [23/25] Loss: 0.0032954143825918436, RECONS: 0.002970943353526915, DISTANCE: 0.32447099685668945
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5059, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5937, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3501, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8300, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6025, device='cuda:0', grad_fn=<MeanBackward0>)
Train[297/300] [24/25] Loss: 0.0033120199665427207, RECONS: 0.002971635842695832, DISTANCE: 0.3403840970993042
Test[297/300] [0/2] Loss: 0.004920164123177528, RECONS: 0.003953619860112667, DISTANCE: 0.9665441513061523
Test[297/300] [1/2] Loss: 0.004793877247720957, RECONS: 0.0034998427145183086, DISTANCE: 1.2940343618392944
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6314, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6170, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3769, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8311, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5961, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [0/25] Loss: 0.0033174236305058002, RECONS: 0.002998936455696821, DISTANCE: 0.318487286567688
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6091, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3703, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8142, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5990, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [1/25] Loss: 0.003294464317150414, RECONS: 0.0029706425266340375, DISTANCE: 0.3238218426704407
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6104, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3618, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8377, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6089, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [2/25] Loss: 0.0030234905425459146, RECONS: 0.0027020572839925685, DISTANCE: 0.32143330574035645
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3885, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8361, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6173, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [3/25] Loss: 0.0029925249400548637, RECONS: 0.002676136209629476, DISTANCE: 0.3163887858390808
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6027, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3816, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8410, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6167, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [4/25] Loss: 0.0030686802230775355, RECONS: 0.002750527113676071, DISTANCE: 0.31815314292907715
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6142, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4084, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8481, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6110, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [5/25] Loss: 0.003042705163049201, RECONS: 0.002726759295910597, DISTANCE: 0.31594590346018475
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5966, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3882, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8413, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [6/25] Loss: 0.0031142590367900474, RECONS: 0.0028015353184725556, DISTANCE: 0.3127237388065883
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6053, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4319, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8296, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5957, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [7/25] Loss: 0.003145110502373427, RECONS: 0.002830777899362147, DISTANCE: 0.31433261930942535
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6010, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4441, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8342, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5954, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [8/25] Loss: 0.0031599054992612866, RECONS: 0.002845765453659826, DISTANCE: 0.31414006816016304
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6130, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4286, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8476, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5986, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [9/25] Loss: 0.0031897498993203044, RECONS: 0.002874704822897911, DISTANCE: 0.31504509449005125
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6144, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4662, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8424, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6035, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [10/25] Loss: 0.0032125388653102245, RECONS: 0.002892623951827938, DISTANCE: 0.31991492618214
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4511, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8399, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6149, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [11/25] Loss: 0.003198048119278004, RECONS: 0.0028798484127037227, DISTANCE: 0.31819971402486164
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6094, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4402, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8556, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6231, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [12/25] Loss: 0.0031887377576472666, RECONS: 0.0028722687230373803, DISTANCE: 0.3164690457857572
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5294, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6084, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3812, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8579, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6238, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [13/25] Loss: 0.003178559842386416, RECONS: 0.002862812967837921, DISTANCE: 0.31574688638959614
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4107, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8580, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6139, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [14/25] Loss: 0.0032031233888119457, RECONS: 0.0028860923058042923, DISTANCE: 0.3170310894648234
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5216, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3444, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8463, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6070, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [15/25] Loss: 0.003167886970913969, RECONS: 0.0028511724231066182, DISTANCE: 0.3167145475745201
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6025, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3690, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8334, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6013, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [16/25] Loss: 0.0032288366517819024, RECONS: 0.0029069604899953395, DISTANCE: 0.3218761612387264
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.6033, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3716, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8268, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6008, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [17/25] Loss: 0.0032420490687299105, RECONS: 0.002919109719288018, DISTANCE: 0.32293934292263454
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6189, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3940, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8218, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6004, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [18/25] Loss: 0.003262046467218744, RECONS: 0.002936027944087982, DISTANCE: 0.32601850911190633
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6044, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4204, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8241, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6096, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [19/25] Loss: 0.0032532916986383496, RECONS: 0.0029283796437084677, DISTANCE: 0.3249120473861694
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6471, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5883, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3831, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8334, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6137, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [20/25] Loss: 0.0032935142184474637, RECONS: 0.0029698574826830908, DISTANCE: 0.32365671793619794
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6055, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4249, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8344, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6055, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [21/25] Loss: 0.003283812378702516, RECONS: 0.002960208877497776, DISTANCE: 0.32360347834500397
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6125, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4065, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8583, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5967, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [22/25] Loss: 0.003288632856034066, RECONS: 0.0029663765580271897, DISTANCE: 0.3222562748452891
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6214, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4033, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8384, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5976, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [23/25] Loss: 0.0033212524431291968, RECONS: 0.002999303862452507, DISTANCE: 0.321948563059171
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5529, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6050, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.4182, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8509, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6108, device='cuda:0', grad_fn=<MeanBackward0>)
Train[298/300] [24/25] Loss: 0.0033334527630358934, RECONS: 0.0029955156426876785, DISTANCE: 0.33793709754943846
Test[298/300] [0/2] Loss: 0.004502394236624241, RECONS: 0.003611690830439329, DISTANCE: 0.8907032012939453
Test[298/300] [1/2] Loss: 0.004642879823222756, RECONS: 0.0034878388978540897, DISTANCE: 1.1550407409667969
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8353, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6132, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4045, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8538, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6185, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [0/25] Loss: 0.003203180618584156, RECONS: 0.002903781831264496, DISTANCE: 0.29939889907836914
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.4667, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3663, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8477, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6217, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [1/25] Loss: 0.0030428017489612103, RECONS: 0.0027468173066154122, DISTANCE: 0.29598450660705566
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8275, device='cuda:0') tensor(-0.5850, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3406, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8614, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6218, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [2/25] Loss: 0.004174930974841118, RECONS: 0.003876172394181291, DISTANCE: 0.29875866572062176
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4068, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8171, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6021, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [3/25] Loss: 0.0038396985037252307, RECONS: 0.003538493416272104, DISTANCE: 0.3012051284313202
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5608, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6213, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4369, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8149, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5873, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [4/25] Loss: 0.003913749754428863, RECONS: 0.003608336579054594, DISTANCE: 0.3054131746292114
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6101, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4033, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8164, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5923, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [5/25] Loss: 0.0038806206236282983, RECONS: 0.003554518489787976, DISTANCE: 0.3261021176973979
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.9137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6075, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3797, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8292, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [6/25] Loss: 0.0037300906011036466, RECONS: 0.0034096260621611562, DISTANCE: 0.32046450887407574
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5843, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6017, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3912, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8488, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6159, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [7/25] Loss: 0.0036388094013091177, RECONS: 0.0033183320774696767, DISTANCE: 0.32047729194164276
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6863, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6116, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3920, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8500, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6194, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [8/25] Loss: 0.0035742987723400197, RECONS: 0.003255333234038618, DISTANCE: 0.31896551450093585
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7882, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6129, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3787, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8581, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6204, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [9/25] Loss: 0.003518422110937536, RECONS: 0.0032005844404920936, DISTANCE: 0.317837655544281
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.5996, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3717, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8565, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6201, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [10/25] Loss: 0.0034608497623015533, RECONS: 0.003146004079925743, DISTANCE: 0.31484565951607446
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6060, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3957, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8483, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6079, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [11/25] Loss: 0.0034297912109953663, RECONS: 0.003113898739684373, DISTANCE: 0.31589244802792865
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7176, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6083, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4022, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8446, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6003, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [12/25] Loss: 0.003432793256181937, RECONS: 0.0031141131901397156, DISTANCE: 0.3186800479888916
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7020, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6069, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3948, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8326, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5980, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [13/25] Loss: 0.0034020739175113185, RECONS: 0.0030845249337809427, DISTANCE: 0.31754896470478605
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7412, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6031, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4172, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8184, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.5970, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [14/25] Loss: 0.0033896791438261667, RECONS: 0.003069755434989929, DISTANCE: 0.31992369492848716
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5686, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6054, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4001, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8279, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6017, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [15/25] Loss: 0.0033657012972980738, RECONS: 0.003043900680495426, DISTANCE: 0.321800597012043
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6078, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4354, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8334, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6083, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [16/25] Loss: 0.0033536963164806366, RECONS: 0.003030957078889889, DISTANCE: 0.32273921545814066
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.6128, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4340, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8377, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6103, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [17/25] Loss: 0.0033211902611785466, RECONS: 0.0030002611715139616, DISTANCE: 0.32092907031377155
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.7647, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6095, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.4438, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8553, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6128, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [18/25] Loss: 0.0033013938779109402, RECONS: 0.0029816954813309407, DISTANCE: 0.3196983713852732
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5765, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6214, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3924, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8493, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6130, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [19/25] Loss: 0.003286941722035408, RECONS: 0.002966732939239591, DISTANCE: 0.3202087640762329
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.6235, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6137, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3984, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8527, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6160, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [20/25] Loss: 0.003267768216097639, RECONS: 0.002947232752506222, DISTANCE: 0.3205354497546241
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8039, device='cuda:0') tensor(-0.6103, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3585, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8560, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6180, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [21/25] Loss: 0.003258784597908909, RECONS: 0.002938385396687822, DISTANCE: 0.3203991814093156
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.5451, device='cuda:0') tensor(-0.8196, device='cuda:0') tensor(-0.6087, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3408, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8571, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6200, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [22/25] Loss: 0.0032730609097558518, RECONS: 0.002949424168985823, DISTANCE: 0.3236367236012998
real_img:  torch.Size([16, 3, 32, 32]) tensor(0.8431, device='cuda:0') tensor(-0.8118, device='cuda:0') tensor(-0.6047, device='cuda:0')
x_recon:  torch.Size([16, 3, 32, 32]) tensor(0.3834, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8480, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6174, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [23/25] Loss: 0.003290063478440667, RECONS: 0.002966597239719704, DISTANCE: 0.3234662214914958
real_img:  torch.Size([7, 3, 32, 32]) tensor(0.5137, device='cuda:0') tensor(-0.7961, device='cuda:0') tensor(-0.5953, device='cuda:0')
x_recon:  torch.Size([7, 3, 32, 32]) tensor(0.3487, device='cuda:0', grad_fn=<MaxBackward1>) tensor(-0.8139, device='cuda:0', grad_fn=<MinBackward1>) tensor(-0.6122, device='cuda:0', grad_fn=<MeanBackward0>)
Train[299/300] [24/25] Loss: 0.0033343171980232, RECONS: 0.0029955145064741373, DISTANCE: 0.3388026762008667
Test[299/300] [0/2] Loss: 0.004621574189513922, RECONS: 0.00372749543748796, DISTANCE: 0.8940787315368652
Test[299/300] [1/2] Loss: 0.004589112708345056, RECONS: 0.0033245779341086745, DISTANCE: 1.2645347118377686
compute Frechet Autoencoder Distance
compute FID of a model with cifar10_test-1024 statistics

============================= JOB FEEDBACK =============================

NodeName=uc2n482
Job ID: 25179182
Cluster: uc2
User/Group: es_maauit03/es_es
State: COMPLETED (exit code 0)
Nodes: 1
Cores per node: 10
CPU Utilized: 06:35:20
CPU Efficiency: 12.36% of 2-05:17:30 core-walltime
Job Wall-clock time: 05:19:45
Memory Utilized: 2.53 GB
Memory Efficiency: 2.70% of 94.00 GB
